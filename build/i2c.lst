ARM GAS  /tmp/cctw59bR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_I2C2_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_I2C2_Init
  22              		.thumb
  23              		.thumb_func
  25              	MX_I2C2_Init:
  26              	.LFB64:
  27              		.file 1 "./Src/i2c.c"
   1:./Src/i2c.c   **** #include "i2c.h"
   2:./Src/i2c.c   **** #include "stm32f1xx_hal.h"
   3:./Src/i2c.c   **** 
   4:./Src/i2c.c   **** I2C_HandleTypeDef hi2c2;
   5:./Src/i2c.c   **** DMA_HandleTypeDef hdma_i2c2_rx;
   6:./Src/i2c.c   **** DMA_HandleTypeDef hdma_i2c2_tx;
   7:./Src/i2c.c   **** 
   8:./Src/i2c.c   **** volatile __IO struct WII_JOYdati wii_JOYdati;
   9:./Src/i2c.c   **** 
  10:./Src/i2c.c   **** /* I2C2 init function */
  11:./Src/i2c.c   **** void MX_I2C2_Init(void)
  12:./Src/i2c.c   **** {
  28              		.loc 1 12 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39              	.LBB2:
  13:./Src/i2c.c   ****   __HAL_RCC_I2C2_CLK_ENABLE();
  40              		.loc 1 13 0
  41 0004 214B     		ldr	r3, .L4
  42 0006 DA69     		ldr	r2, [r3, #28]
  43 0008 42F48002 		orr	r2, r2, #4194304
  44 000c DA61     		str	r2, [r3, #28]
  45 000e DA69     		ldr	r2, [r3, #28]
ARM GAS  /tmp/cctw59bR.s 			page 2


  46 0010 02F48002 		and	r2, r2, #4194304
  47 0014 0092     		str	r2, [sp]
  48 0016 009A     		ldr	r2, [sp]
  49              	.LBE2:
  50              	.LBB3:
  14:./Src/i2c.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
  51              		.loc 1 14 0
  52 0018 5A69     		ldr	r2, [r3, #20]
  53 001a 42F00102 		orr	r2, r2, #1
  54 001e 5A61     		str	r2, [r3, #20]
  55 0020 5B69     		ldr	r3, [r3, #20]
  56 0022 03F00103 		and	r3, r3, #1
  57 0026 0193     		str	r3, [sp, #4]
  58 0028 019B     		ldr	r3, [sp, #4]
  59              	.LBE3:
  15:./Src/i2c.c   **** 
  16:./Src/i2c.c   **** 
  17:./Src/i2c.c   ****   /* DMA1_Channel4_IRQn interrupt configuration */
  18:./Src/i2c.c   ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 1, 4);
  60              		.loc 1 18 0
  61 002a 0422     		movs	r2, #4
  62 002c 0121     		movs	r1, #1
  63 002e 0E20     		movs	r0, #14
  64 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  65              	.LVL0:
  19:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
  66              		.loc 1 19 0
  67 0034 0E20     		movs	r0, #14
  68 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  69              	.LVL1:
  20:./Src/i2c.c   ****   /* DMA1_Channel5_IRQn interrupt configuration */
  21:./Src/i2c.c   ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 1, 3);
  70              		.loc 1 21 0
  71 003a 0322     		movs	r2, #3
  72 003c 0121     		movs	r1, #1
  73 003e 0F20     		movs	r0, #15
  74 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  75              	.LVL2:
  22:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
  76              		.loc 1 22 0
  77 0044 0F20     		movs	r0, #15
  78 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  79              	.LVL3:
  23:./Src/i2c.c   **** 
  24:./Src/i2c.c   ****   hi2c2.Instance = I2C2;
  80              		.loc 1 24 0
  81 004a 1148     		ldr	r0, .L4+4
  82 004c 114B     		ldr	r3, .L4+8
  83 004e 0360     		str	r3, [r0]
  25:./Src/i2c.c   ****   hi2c2.Init.ClockSpeed = 40000;
  84              		.loc 1 25 0
  85 0050 49F64043 		movw	r3, #40000
  86 0054 4360     		str	r3, [r0, #4]
  26:./Src/i2c.c   ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
  87              		.loc 1 26 0
  88 0056 0023     		movs	r3, #0
  89 0058 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/cctw59bR.s 			page 3


  27:./Src/i2c.c   ****   hi2c2.Init.OwnAddress1 = 0;
  90              		.loc 1 27 0
  91 005a C360     		str	r3, [r0, #12]
  28:./Src/i2c.c   ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  92              		.loc 1 28 0
  93 005c 4FF48042 		mov	r2, #16384
  94 0060 0261     		str	r2, [r0, #16]
  29:./Src/i2c.c   ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  95              		.loc 1 29 0
  96 0062 4361     		str	r3, [r0, #20]
  30:./Src/i2c.c   ****   hi2c2.Init.OwnAddress2 = 0;
  97              		.loc 1 30 0
  98 0064 8361     		str	r3, [r0, #24]
  31:./Src/i2c.c   ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  99              		.loc 1 31 0
 100 0066 C361     		str	r3, [r0, #28]
  32:./Src/i2c.c   ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 101              		.loc 1 32 0
 102 0068 0362     		str	r3, [r0, #32]
  33:./Src/i2c.c   ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 103              		.loc 1 33 0
 104 006a FFF7FEFF 		bl	HAL_I2C_Init
 105              	.LVL4:
 106 006e 08B1     		cbz	r0, .L2
  34:./Src/i2c.c   ****   {
  35:./Src/i2c.c   ****     Error_Handler();
 107              		.loc 1 35 0
 108 0070 FFF7FEFF 		bl	Error_Handler
 109              	.LVL5:
 110              	.L2:
  36:./Src/i2c.c   ****   }
  37:./Src/i2c.c   ****   wii_JOYdati.I2CTxDone = 0;
 111              		.loc 1 37 0
 112 0074 084B     		ldr	r3, .L4+12
 113 0076 0022     		movs	r2, #0
 114 0078 1A73     		strb	r2, [r3, #12]
  38:./Src/i2c.c   ****   wii_JOYdati.I2CRxDone = 0;
 115              		.loc 1 38 0
 116 007a 5A73     		strb	r2, [r3, #13]
  39:./Src/i2c.c   ****   wii_JOYdati.I2CERROR = 0;
 117              		.loc 1 39 0
 118 007c 9A73     		strb	r2, [r3, #14]
  40:./Src/i2c.c   ****   wii_JOYdati.stato = 0;
 119              		.loc 1 40 0
 120 007e DA73     		strb	r2, [r3, #15]
  41:./Src/i2c.c   **** 
  42:./Src/i2c.c   ****   HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
 121              		.loc 1 42 0
 122 0080 1F20     		movs	r0, #31
 123 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 124              	.LVL6:
  43:./Src/i2c.c   **** 
  44:./Src/i2c.c   ****   //WiiNunchuck_INIT();
  45:./Src/i2c.c   **** }
 125              		.loc 1 45 0
 126 0086 03B0     		add	sp, sp, #12
 127              	.LCFI2:
ARM GAS  /tmp/cctw59bR.s 			page 4


 128              		.cfi_def_cfa_offset 4
 129              		@ sp needed
 130 0088 5DF804FB 		ldr	pc, [sp], #4
 131              	.L5:
 132              		.align	2
 133              	.L4:
 134 008c 00100240 		.word	1073876992
 135 0090 00000000 		.word	hi2c2
 136 0094 00580040 		.word	1073764352
 137 0098 00000000 		.word	wii_JOYdati
 138              		.cfi_endproc
 139              	.LFE64:
 141              		.section	.text.WiiNunchuck_INIT,"ax",%progbits
 142              		.align	2
 143              		.global	WiiNunchuck_INIT
 144              		.thumb
 145              		.thumb_func
 147              	WiiNunchuck_INIT:
 148              	.LFB65:
  46:./Src/i2c.c   **** 
  47:./Src/i2c.c   **** 
  48:./Src/i2c.c   **** 
  49:./Src/i2c.c   **** void WiiNunchuck_INIT(void){
 149              		.loc 1 49 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 30B5     		push	{r4, r5, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 12
 156              		.cfi_offset 4, -12
 157              		.cfi_offset 5, -8
 158              		.cfi_offset 14, -4
 159 0002 83B0     		sub	sp, sp, #12
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 24
  50:./Src/i2c.c   ****     uint8_t ai2cBuffer[2];
  51:./Src/i2c.c   **** 
  52:./Src/i2c.c   ****     //-- START -- init WiiNunchuck
  53:./Src/i2c.c   ****     ai2cBuffer[0] = 0xF0;
  54:./Src/i2c.c   ****     ai2cBuffer[1] = 0x55;
  55:./Src/i2c.c   ****     //Originale
  56:./Src/i2c.c   ****     ai2cBuffer[0] = 0x40;
 162              		.loc 1 56 0
 163 0004 4023     		movs	r3, #64
 164 0006 8DF80430 		strb	r3, [sp, #4]
  57:./Src/i2c.c   ****     ai2cBuffer[1] = 0x00;
 165              		.loc 1 57 0
 166 000a 0023     		movs	r3, #0
 167 000c 8DF80530 		strb	r3, [sp, #5]
  58:./Src/i2c.c   ****     HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 2);
 168              		.loc 1 58 0
 169 0010 0223     		movs	r3, #2
 170 0012 01AA     		add	r2, sp, #4
 171 0014 A421     		movs	r1, #164
 172 0016 0848     		ldr	r0, .L9
 173 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit_DMA
ARM GAS  /tmp/cctw59bR.s 			page 5


 174              	.LVL7:
 175              	.L7:
  59:./Src/i2c.c   ****     while(wii_JOYdati.I2CTxDone ==0);
 176              		.loc 1 59 0 discriminator 1
 177 001c 074B     		ldr	r3, .L9+4
 178 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 179 0020 13F0FF0F 		tst	r3, #255
 180 0024 FAD0     		beq	.L7
  60:./Src/i2c.c   ****     wii_JOYdati.I2CTxDone = 0;
 181              		.loc 1 60 0
 182 0026 054C     		ldr	r4, .L9+4
 183 0028 0025     		movs	r5, #0
 184 002a 2573     		strb	r5, [r4, #12]
  61:./Src/i2c.c   ****     HAL_Delay(10);
 185              		.loc 1 61 0
 186 002c 0A20     		movs	r0, #10
 187 002e FFF7FEFF 		bl	HAL_Delay
 188              	.LVL8:
  62:./Src/i2c.c   ****     wii_JOYdati.done = 0;
 189              		.loc 1 62 0
 190 0032 2571     		strb	r5, [r4, #4]
  63:./Src/i2c.c   **** }
 191              		.loc 1 63 0
 192 0034 03B0     		add	sp, sp, #12
 193              	.LCFI5:
 194              		.cfi_def_cfa_offset 12
 195              		@ sp needed
 196 0036 30BD     		pop	{r4, r5, pc}
 197              	.L10:
 198              		.align	2
 199              	.L9:
 200 0038 00000000 		.word	hi2c2
 201 003c 00000000 		.word	wii_JOYdati
 202              		.cfi_endproc
 203              	.LFE65:
 205              		.section	.text.nunchuk_decode_byte,"ax",%progbits
 206              		.align	2
 207              		.global	nunchuk_decode_byte
 208              		.thumb
 209              		.thumb_func
 211              	nunchuk_decode_byte:
 212              	.LFB67:
  64:./Src/i2c.c   **** 
  65:./Src/i2c.c   **** 
  66:./Src/i2c.c   **** void WiiNunchuck_TASK(void){
  67:./Src/i2c.c   ****   uint8_t ai2cBuffer[7];
  68:./Src/i2c.c   ****   uint8_t temp;
  69:./Src/i2c.c   **** 
  70:./Src/i2c.c   ****   switch(wii_JOYdati.stato){
  71:./Src/i2c.c   ****     case 0:
  72:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
  73:./Src/i2c.c   ****       ai2cBuffer[0] = 0x00;
  74:./Src/i2c.c   ****       HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 1);
  75:./Src/i2c.c   ****       wii_JOYdati.stato = 12;
  76:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
  77:./Src/i2c.c   ****     break;
  78:./Src/i2c.c   **** 
ARM GAS  /tmp/cctw59bR.s 			page 6


  79:./Src/i2c.c   ****     case 1:
  80:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 7){
  81:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
  82:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
  83:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
  84:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
  85:./Src/i2c.c   ****       }
  86:./Src/i2c.c   ****       if(wii_JOYdati.I2CTxDone){
  87:./Src/i2c.c   ****         wii_JOYdati.stato = 2;
  88:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
  89:./Src/i2c.c   ****       }
  90:./Src/i2c.c   ****       if(wii_JOYdati.I2CERROR){
  91:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
  92:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
  93:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
  94:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
  95:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
  96:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
  97:./Src/i2c.c   ****       }
  98:./Src/i2c.c   ****     break;
  99:./Src/i2c.c   **** 
 100:./Src/i2c.c   ****     case 2:
 101:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) > 1){
 102:./Src/i2c.c   ****         wii_JOYdati.stato = 3;
 103:./Src/i2c.c   ****       }
 104:./Src/i2c.c   ****     break;
 105:./Src/i2c.c   **** 
 106:./Src/i2c.c   ****     case 3:
 107:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
 108:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 109:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 110:./Src/i2c.c   ****       HAL_I2C_Master_Receive_DMA(&hi2c2, 0xA5, (uint8_t*)wii_JOYdati.ai2cBuffer, 6);
 111:./Src/i2c.c   ****       wii_JOYdati.stato = 4;
 112:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 113:./Src/i2c.c   ****     break;
 114:./Src/i2c.c   **** 
 115:./Src/i2c.c   ****     case 4:
 116:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) > 50){
 117:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 118:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 119:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 120:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 121:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 122:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 123:./Src/i2c.c   ****       }
 124:./Src/i2c.c   ****       if(wii_JOYdati.I2CERROR){
 125:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 126:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 127:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 128:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 129:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 130:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 131:./Src/i2c.c   ****       }
 132:./Src/i2c.c   ****       if(wii_JOYdati.I2CRxDone){
 133:./Src/i2c.c   ****         HAL_NVIC_DisableIRQ(DMA1_Channel5_IRQn);
 134:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 135:./Src/i2c.c   ****         //Copia dati
ARM GAS  /tmp/cctw59bR.s 			page 7


 136:./Src/i2c.c   ****         wii_JOYdati.ay = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[1]);
 137:./Src/i2c.c   ****         wii_JOYdati.ax = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[0]);
 138:./Src/i2c.c   ****         temp = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[5]);
 139:./Src/i2c.c   **** 
 140:./Src/i2c.c   ****         wii_JOYdati.bc = temp & 0x02;
 141:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc >> 1;
 142:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc & 0x01;
 143:./Src/i2c.c   ****         wii_JOYdati.bz = temp & 0x01;
 144:./Src/i2c.c   ****         wii_JOYdati.done = 1;
 145:./Src/i2c.c   **** 
 146:./Src/i2c.c   ****         HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 147:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 148:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 149:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 150:./Src/i2c.c   **** 
 151:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 152:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 153:./Src/i2c.c   ****       }
 154:./Src/i2c.c   ****     break;
 155:./Src/i2c.c   **** 
 156:./Src/i2c.c   ****     case 10:
 157:./Src/i2c.c   ****       wii_JOYdati.I2CTxDone = 0;
 158:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 159:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 160:./Src/i2c.c   ****       wii_JOYdati.stato = 11;
 161:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 162:./Src/i2c.c   ****     break;
 163:./Src/i2c.c   **** 
 164:./Src/i2c.c   ****     case 11:
 165:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 1){
 166:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 167:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 168:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 169:./Src/i2c.c   ****         wii_JOYdati.stato = 0;
 170:./Src/i2c.c   ****       }
 171:./Src/i2c.c   ****     break;
 172:./Src/i2c.c   **** 
 173:./Src/i2c.c   ****     case 12:
 174:./Src/i2c.c   ****       if(HAL_I2C_GetState(&hi2c2) == HAL_I2C_STATE_READY){
 175:./Src/i2c.c   ****         wii_JOYdati.stato = 1;
 176:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 177:./Src/i2c.c   ****       }
 178:./Src/i2c.c   ****       if((HAL_GetTick() - wii_JOYdati.mS) >= 7){
 179:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 180:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 181:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 182:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 183:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 184:./Src/i2c.c   ****       }
 185:./Src/i2c.c   ****     break;
 186:./Src/i2c.c   **** 
 187:./Src/i2c.c   ****   }
 188:./Src/i2c.c   **** }
 189:./Src/i2c.c   **** 
 190:./Src/i2c.c   **** 
 191:./Src/i2c.c   **** 
 192:./Src/i2c.c   **** 
ARM GAS  /tmp/cctw59bR.s 			page 8


 193:./Src/i2c.c   **** 
 194:./Src/i2c.c   **** 
 195:./Src/i2c.c   **** 
 196:./Src/i2c.c   **** uint8_t nunchuk_decode_byte (uint8_t x)
 197:./Src/i2c.c   **** {
 213              		.loc 1 197 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL9:
 198:./Src/i2c.c   ****     x = (x ^ 0x17) + 0x17;
 219              		.loc 1 198 0
 220 0000 80F01700 		eor	r0, r0, #23
 221              	.LVL10:
 222 0004 1730     		adds	r0, r0, #23
 223              	.LVL11:
 199:./Src/i2c.c   ****     return x;
 200:./Src/i2c.c   **** }
 224              		.loc 1 200 0
 225 0006 C0B2     		uxtb	r0, r0
 226 0008 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE67:
 230 000a 00BF     		.section	.text.WiiNunchuck_TASK,"ax",%progbits
 231              		.align	2
 232              		.global	WiiNunchuck_TASK
 233              		.thumb
 234              		.thumb_func
 236              	WiiNunchuck_TASK:
 237              	.LFB66:
  66:./Src/i2c.c   ****   uint8_t ai2cBuffer[7];
 238              		.loc 1 66 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 30B5     		push	{r4, r5, lr}
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 5, -8
 247              		.cfi_offset 14, -4
 248 0002 83B0     		sub	sp, sp, #12
 249              	.LCFI7:
 250              		.cfi_def_cfa_offset 24
  70:./Src/i2c.c   ****     case 0:
 251              		.loc 1 70 0
 252 0004 7A4B     		ldr	r3, .L29
 253 0006 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 254 0008 DBB2     		uxtb	r3, r3
 255 000a 0C2B     		cmp	r3, #12
 256 000c 00F2ED80 		bhi	.L12
 257 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 258              	.L15:
 259 0014 0D00     		.2byte	(.L14-.L15)/2
 260 0016 1E00     		.2byte	(.L16-.L15)/2
 261 0018 4800     		.2byte	(.L17-.L15)/2
ARM GAS  /tmp/cctw59bR.s 			page 9


 262 001a 5400     		.2byte	(.L18-.L15)/2
 263 001c 6500     		.2byte	(.L19-.L15)/2
 264 001e EB00     		.2byte	(.L12-.L15)/2
 265 0020 EB00     		.2byte	(.L12-.L15)/2
 266 0022 EB00     		.2byte	(.L12-.L15)/2
 267 0024 EB00     		.2byte	(.L12-.L15)/2
 268 0026 EB00     		.2byte	(.L12-.L15)/2
 269 0028 B700     		.2byte	(.L20-.L15)/2
 270 002a C200     		.2byte	(.L21-.L15)/2
 271 002c CF00     		.2byte	(.L22-.L15)/2
 272              		.p2align 1
 273              	.L14:
  72:./Src/i2c.c   ****       ai2cBuffer[0] = 0x00;
 274              		.loc 1 72 0
 275 002e 704C     		ldr	r4, .L29
 276 0030 0023     		movs	r3, #0
 277 0032 2373     		strb	r3, [r4, #12]
  73:./Src/i2c.c   ****       HAL_I2C_Master_Transmit_DMA(&hi2c2, 0xA4, (uint8_t*)ai2cBuffer, 1);
 278              		.loc 1 73 0
 279 0034 02AA     		add	r2, sp, #8
 280 0036 02F8083D 		strb	r3, [r2, #-8]!
  74:./Src/i2c.c   ****       wii_JOYdati.stato = 12;
 281              		.loc 1 74 0
 282 003a 0123     		movs	r3, #1
 283 003c A421     		movs	r1, #164
 284 003e 6D48     		ldr	r0, .L29+4
 285 0040 FFF7FEFF 		bl	HAL_I2C_Master_Transmit_DMA
 286              	.LVL12:
  75:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 287              		.loc 1 75 0
 288 0044 0C23     		movs	r3, #12
 289 0046 E373     		strb	r3, [r4, #15]
  76:./Src/i2c.c   ****     break;
 290              		.loc 1 76 0
 291 0048 FFF7FEFF 		bl	HAL_GetTick
 292              	.LVL13:
 293 004c 2061     		str	r0, [r4, #16]
  77:./Src/i2c.c   **** 
 294              		.loc 1 77 0
 295 004e CCE0     		b	.L12
 296              	.L16:
  80:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 297              		.loc 1 80 0
 298 0050 FFF7FEFF 		bl	HAL_GetTick
 299              	.LVL14:
 300 0054 664B     		ldr	r3, .L29
 301 0056 1B69     		ldr	r3, [r3, #16]
 302 0058 C01A     		subs	r0, r0, r3
 303 005a 0628     		cmp	r0, #6
 304 005c 06D9     		bls	.L23
  81:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 305              		.loc 1 81 0
 306 005e 644B     		ldr	r3, .L29
 307 0060 0022     		movs	r2, #0
 308 0062 1A73     		strb	r2, [r3, #12]
  82:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 309              		.loc 1 82 0
ARM GAS  /tmp/cctw59bR.s 			page 10


 310 0064 5A73     		strb	r2, [r3, #13]
  83:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 311              		.loc 1 83 0
 312 0066 9A73     		strb	r2, [r3, #14]
  84:./Src/i2c.c   ****       }
 313              		.loc 1 84 0
 314 0068 0A22     		movs	r2, #10
 315 006a DA73     		strb	r2, [r3, #15]
 316              	.L23:
  86:./Src/i2c.c   ****         wii_JOYdati.stato = 2;
 317              		.loc 1 86 0
 318 006c 604B     		ldr	r3, .L29
 319 006e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 320 0070 13F0FF0F 		tst	r3, #255
 321 0074 05D0     		beq	.L24
  87:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 322              		.loc 1 87 0
 323 0076 5E4C     		ldr	r4, .L29
 324 0078 0223     		movs	r3, #2
 325 007a E373     		strb	r3, [r4, #15]
  88:./Src/i2c.c   ****       }
 326              		.loc 1 88 0
 327 007c FFF7FEFF 		bl	HAL_GetTick
 328              	.LVL15:
 329 0080 2061     		str	r0, [r4, #16]
 330              	.L24:
  90:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 331              		.loc 1 90 0
 332 0082 5B4B     		ldr	r3, .L29
 333 0084 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 334 0086 13F0FF0F 		tst	r3, #255
 335 008a 00F0AE80 		beq	.L12
  91:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 336              		.loc 1 91 0
 337 008e 584B     		ldr	r3, .L29
 338 0090 0022     		movs	r2, #0
 339 0092 1A73     		strb	r2, [r3, #12]
  92:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 340              		.loc 1 92 0
 341 0094 5A73     		strb	r2, [r3, #13]
  93:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 342              		.loc 1 93 0
 343 0096 9A73     		strb	r2, [r3, #14]
  94:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 344              		.loc 1 94 0
 345 0098 0A22     		movs	r2, #10
 346 009a DA73     		strb	r2, [r3, #15]
  95:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 347              		.loc 1 95 0
 348 009c 7F22     		movs	r2, #127
 349 009e 5A70     		strb	r2, [r3, #1]
  96:./Src/i2c.c   ****       }
 350              		.loc 1 96 0
 351 00a0 1A70     		strb	r2, [r3]
 352 00a2 A2E0     		b	.L12
 353              	.L17:
 101:./Src/i2c.c   ****         wii_JOYdati.stato = 3;
ARM GAS  /tmp/cctw59bR.s 			page 11


 354              		.loc 1 101 0
 355 00a4 FFF7FEFF 		bl	HAL_GetTick
 356              	.LVL16:
 357 00a8 514B     		ldr	r3, .L29
 358 00aa 1B69     		ldr	r3, [r3, #16]
 359 00ac C01A     		subs	r0, r0, r3
 360 00ae 0128     		cmp	r0, #1
 361 00b0 40F29B80 		bls	.L12
 102:./Src/i2c.c   ****       }
 362              		.loc 1 102 0
 363 00b4 0322     		movs	r2, #3
 364 00b6 4E4B     		ldr	r3, .L29
 365 00b8 DA73     		strb	r2, [r3, #15]
 366 00ba 96E0     		b	.L12
 367              	.L18:
 107:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 368              		.loc 1 107 0
 369 00bc 4C4C     		ldr	r4, .L29
 370 00be 0023     		movs	r3, #0
 371 00c0 2373     		strb	r3, [r4, #12]
 108:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 372              		.loc 1 108 0
 373 00c2 6373     		strb	r3, [r4, #13]
 109:./Src/i2c.c   ****       HAL_I2C_Master_Receive_DMA(&hi2c2, 0xA5, (uint8_t*)wii_JOYdati.ai2cBuffer, 6);
 374              		.loc 1 109 0
 375 00c4 A373     		strb	r3, [r4, #14]
 110:./Src/i2c.c   ****       wii_JOYdati.stato = 4;
 376              		.loc 1 110 0
 377 00c6 0623     		movs	r3, #6
 378 00c8 621D     		adds	r2, r4, #5
 379 00ca A521     		movs	r1, #165
 380 00cc 4948     		ldr	r0, .L29+4
 381 00ce FFF7FEFF 		bl	HAL_I2C_Master_Receive_DMA
 382              	.LVL17:
 111:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 383              		.loc 1 111 0
 384 00d2 0423     		movs	r3, #4
 385 00d4 E373     		strb	r3, [r4, #15]
 112:./Src/i2c.c   ****     break;
 386              		.loc 1 112 0
 387 00d6 FFF7FEFF 		bl	HAL_GetTick
 388              	.LVL18:
 389 00da 2061     		str	r0, [r4, #16]
 113:./Src/i2c.c   **** 
 390              		.loc 1 113 0
 391 00dc 85E0     		b	.L12
 392              	.L19:
 116:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 393              		.loc 1 116 0
 394 00de FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL19:
 396 00e2 434B     		ldr	r3, .L29
 397 00e4 1B69     		ldr	r3, [r3, #16]
 398 00e6 C01A     		subs	r0, r0, r3
 399 00e8 3228     		cmp	r0, #50
 400 00ea 09D9     		bls	.L25
 117:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
ARM GAS  /tmp/cctw59bR.s 			page 12


 401              		.loc 1 117 0
 402 00ec 404B     		ldr	r3, .L29
 403 00ee 0022     		movs	r2, #0
 404 00f0 1A73     		strb	r2, [r3, #12]
 118:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 405              		.loc 1 118 0
 406 00f2 5A73     		strb	r2, [r3, #13]
 119:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 407              		.loc 1 119 0
 408 00f4 9A73     		strb	r2, [r3, #14]
 120:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 409              		.loc 1 120 0
 410 00f6 0A22     		movs	r2, #10
 411 00f8 DA73     		strb	r2, [r3, #15]
 121:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 412              		.loc 1 121 0
 413 00fa 7F22     		movs	r2, #127
 414 00fc 5A70     		strb	r2, [r3, #1]
 122:./Src/i2c.c   ****       }
 415              		.loc 1 122 0
 416 00fe 1A70     		strb	r2, [r3]
 417              	.L25:
 124:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 418              		.loc 1 124 0
 419 0100 3B4B     		ldr	r3, .L29
 420 0102 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 421 0104 13F0FF0F 		tst	r3, #255
 422 0108 09D0     		beq	.L26
 125:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 423              		.loc 1 125 0
 424 010a 394B     		ldr	r3, .L29
 425 010c 0022     		movs	r2, #0
 426 010e 1A73     		strb	r2, [r3, #12]
 126:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 427              		.loc 1 126 0
 428 0110 5A73     		strb	r2, [r3, #13]
 127:./Src/i2c.c   ****         wii_JOYdati.stato = 10;
 429              		.loc 1 127 0
 430 0112 9A73     		strb	r2, [r3, #14]
 128:./Src/i2c.c   ****         wii_JOYdati.ay = 127;
 431              		.loc 1 128 0
 432 0114 0A22     		movs	r2, #10
 433 0116 DA73     		strb	r2, [r3, #15]
 129:./Src/i2c.c   ****         wii_JOYdati.ax = 127;
 434              		.loc 1 129 0
 435 0118 7F22     		movs	r2, #127
 436 011a 5A70     		strb	r2, [r3, #1]
 130:./Src/i2c.c   ****       }
 437              		.loc 1 130 0
 438 011c 1A70     		strb	r2, [r3]
 439              	.L26:
 132:./Src/i2c.c   ****         HAL_NVIC_DisableIRQ(DMA1_Channel5_IRQn);
 440              		.loc 1 132 0
 441 011e 344B     		ldr	r3, .L29
 442 0120 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 443 0122 13F0FF0F 		tst	r3, #255
 444 0126 60D0     		beq	.L12
ARM GAS  /tmp/cctw59bR.s 			page 13


 133:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 445              		.loc 1 133 0
 446 0128 0F20     		movs	r0, #15
 447 012a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 448              	.LVL20:
 134:./Src/i2c.c   ****         //Copia dati
 449              		.loc 1 134 0
 450 012e 304C     		ldr	r4, .L29
 451 0130 0025     		movs	r5, #0
 452 0132 6573     		strb	r5, [r4, #13]
 136:./Src/i2c.c   ****         wii_JOYdati.ax = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[0]);
 453              		.loc 1 136 0
 454 0134 A079     		ldrb	r0, [r4, #6]	@ zero_extendqisi2
 455 0136 FFF7FEFF 		bl	nunchuk_decode_byte
 456              	.LVL21:
 457 013a 6070     		strb	r0, [r4, #1]
 137:./Src/i2c.c   ****         temp = nunchuk_decode_byte(wii_JOYdati.ai2cBuffer[5]);
 458              		.loc 1 137 0
 459 013c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 460 013e FFF7FEFF 		bl	nunchuk_decode_byte
 461              	.LVL22:
 462 0142 2070     		strb	r0, [r4]
 138:./Src/i2c.c   **** 
 463              		.loc 1 138 0
 464 0144 A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
 465 0146 FFF7FEFF 		bl	nunchuk_decode_byte
 466              	.LVL23:
 140:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc >> 1;
 467              		.loc 1 140 0
 468 014a 00F00203 		and	r3, r0, #2
 469 014e DBB2     		uxtb	r3, r3
 470 0150 A370     		strb	r3, [r4, #2]
 141:./Src/i2c.c   ****         wii_JOYdati.bc = wii_JOYdati.bc & 0x01;
 471              		.loc 1 141 0
 472 0152 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 473 0154 5B08     		lsrs	r3, r3, #1
 474 0156 A370     		strb	r3, [r4, #2]
 142:./Src/i2c.c   ****         wii_JOYdati.bz = temp & 0x01;
 475              		.loc 1 142 0
 476 0158 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 477 015a 03F00103 		and	r3, r3, #1
 478 015e A370     		strb	r3, [r4, #2]
 143:./Src/i2c.c   ****         wii_JOYdati.done = 1;
 479              		.loc 1 143 0
 480 0160 00F00100 		and	r0, r0, #1
 481              	.LVL24:
 482 0164 E070     		strb	r0, [r4, #3]
 144:./Src/i2c.c   **** 
 483              		.loc 1 144 0
 484 0166 0123     		movs	r3, #1
 485 0168 2371     		strb	r3, [r4, #4]
 146:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 486              		.loc 1 146 0
 487 016a 0F20     		movs	r0, #15
 488 016c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 489              	.LVL25:
 147:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
ARM GAS  /tmp/cctw59bR.s 			page 14


 490              		.loc 1 147 0
 491 0170 2573     		strb	r5, [r4, #12]
 148:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 492              		.loc 1 148 0
 493 0172 6573     		strb	r5, [r4, #13]
 149:./Src/i2c.c   **** 
 494              		.loc 1 149 0
 495 0174 A573     		strb	r5, [r4, #14]
 151:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 496              		.loc 1 151 0
 497 0176 FFF7FEFF 		bl	HAL_GetTick
 498              	.LVL26:
 499 017a 2061     		str	r0, [r4, #16]
 152:./Src/i2c.c   ****       }
 500              		.loc 1 152 0
 501 017c 0B23     		movs	r3, #11
 502 017e E373     		strb	r3, [r4, #15]
 503 0180 33E0     		b	.L12
 504              	.L20:
 157:./Src/i2c.c   ****       wii_JOYdati.I2CRxDone = 0;
 505              		.loc 1 157 0
 506 0182 1B4C     		ldr	r4, .L29
 507 0184 0023     		movs	r3, #0
 508 0186 2373     		strb	r3, [r4, #12]
 158:./Src/i2c.c   ****       wii_JOYdati.I2CERROR = 0;
 509              		.loc 1 158 0
 510 0188 6373     		strb	r3, [r4, #13]
 159:./Src/i2c.c   ****       wii_JOYdati.stato = 11;
 511              		.loc 1 159 0
 512 018a A373     		strb	r3, [r4, #14]
 160:./Src/i2c.c   ****       wii_JOYdati.mS = HAL_GetTick();
 513              		.loc 1 160 0
 514 018c 0B23     		movs	r3, #11
 515 018e E373     		strb	r3, [r4, #15]
 161:./Src/i2c.c   ****     break;
 516              		.loc 1 161 0
 517 0190 FFF7FEFF 		bl	HAL_GetTick
 518              	.LVL27:
 519 0194 2061     		str	r0, [r4, #16]
 162:./Src/i2c.c   **** 
 520              		.loc 1 162 0
 521 0196 28E0     		b	.L12
 522              	.L21:
 165:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 523              		.loc 1 165 0
 524 0198 FFF7FEFF 		bl	HAL_GetTick
 525              	.LVL28:
 526 019c 144B     		ldr	r3, .L29
 527 019e 1B69     		ldr	r3, [r3, #16]
 528 01a0 9842     		cmp	r0, r3
 529 01a2 22D0     		beq	.L12
 166:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 530              		.loc 1 166 0
 531 01a4 124B     		ldr	r3, .L29
 532 01a6 0022     		movs	r2, #0
 533 01a8 1A73     		strb	r2, [r3, #12]
 167:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
ARM GAS  /tmp/cctw59bR.s 			page 15


 534              		.loc 1 167 0
 535 01aa 5A73     		strb	r2, [r3, #13]
 168:./Src/i2c.c   ****         wii_JOYdati.stato = 0;
 536              		.loc 1 168 0
 537 01ac 9A73     		strb	r2, [r3, #14]
 169:./Src/i2c.c   ****       }
 538              		.loc 1 169 0
 539 01ae DA73     		strb	r2, [r3, #15]
 540 01b0 1BE0     		b	.L12
 541              	.L22:
 174:./Src/i2c.c   ****         wii_JOYdati.stato = 1;
 542              		.loc 1 174 0
 543 01b2 1048     		ldr	r0, .L29+4
 544 01b4 FFF7FEFF 		bl	HAL_I2C_GetState
 545              	.LVL29:
 546 01b8 2028     		cmp	r0, #32
 547 01ba 05D1     		bne	.L27
 175:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 548              		.loc 1 175 0
 549 01bc 0C4C     		ldr	r4, .L29
 550 01be 0123     		movs	r3, #1
 551 01c0 E373     		strb	r3, [r4, #15]
 176:./Src/i2c.c   ****       }
 552              		.loc 1 176 0
 553 01c2 FFF7FEFF 		bl	HAL_GetTick
 554              	.LVL30:
 555 01c6 2061     		str	r0, [r4, #16]
 556              	.L27:
 178:./Src/i2c.c   ****         wii_JOYdati.I2CTxDone = 0;
 557              		.loc 1 178 0
 558 01c8 FFF7FEFF 		bl	HAL_GetTick
 559              	.LVL31:
 560 01cc 084B     		ldr	r3, .L29
 561 01ce 1B69     		ldr	r3, [r3, #16]
 562 01d0 C01A     		subs	r0, r0, r3
 563 01d2 0628     		cmp	r0, #6
 564 01d4 09D9     		bls	.L12
 179:./Src/i2c.c   ****         wii_JOYdati.I2CRxDone = 0;
 565              		.loc 1 179 0
 566 01d6 064C     		ldr	r4, .L29
 567 01d8 0023     		movs	r3, #0
 568 01da 2373     		strb	r3, [r4, #12]
 180:./Src/i2c.c   ****         wii_JOYdati.I2CERROR = 0;
 569              		.loc 1 180 0
 570 01dc 6373     		strb	r3, [r4, #13]
 181:./Src/i2c.c   ****         wii_JOYdati.stato = 11;
 571              		.loc 1 181 0
 572 01de A373     		strb	r3, [r4, #14]
 182:./Src/i2c.c   ****         wii_JOYdati.mS = HAL_GetTick();
 573              		.loc 1 182 0
 574 01e0 0B23     		movs	r3, #11
 575 01e2 E373     		strb	r3, [r4, #15]
 183:./Src/i2c.c   ****       }
 576              		.loc 1 183 0
 577 01e4 FFF7FEFF 		bl	HAL_GetTick
 578              	.LVL32:
 579 01e8 2061     		str	r0, [r4, #16]
ARM GAS  /tmp/cctw59bR.s 			page 16


 580              	.L12:
 188:./Src/i2c.c   **** 
 581              		.loc 1 188 0
 582 01ea 03B0     		add	sp, sp, #12
 583              	.LCFI8:
 584              		.cfi_def_cfa_offset 12
 585              		@ sp needed
 586 01ec 30BD     		pop	{r4, r5, pc}
 587              	.L30:
 588 01ee 00BF     		.align	2
 589              	.L29:
 590 01f0 00000000 		.word	wii_JOYdati
 591 01f4 00000000 		.word	hi2c2
 592              		.cfi_endproc
 593              	.LFE66:
 595              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 596              		.align	2
 597              		.global	HAL_I2C_MasterTxCpltCallback
 598              		.thumb
 599              		.thumb_func
 601              	HAL_I2C_MasterTxCpltCallback:
 602              	.LFB68:
 201:./Src/i2c.c   **** 
 202:./Src/i2c.c   **** 
 203:./Src/i2c.c   **** 
 204:./Src/i2c.c   **** 
 205:./Src/i2c.c   **** 
 206:./Src/i2c.c   **** //HAL_I2C_Master_Transmit_DMA
 207:./Src/i2c.c   **** //HAL_I2C_Master_Receive_DMA
 208:./Src/i2c.c   **** 
 209:./Src/i2c.c   **** void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
 210:./Src/i2c.c   **** {
 603              		.loc 1 210 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL33:
 211:./Src/i2c.c   ****   if(hi2c->Instance == I2C2){
 609              		.loc 1 211 0
 610 0000 0268     		ldr	r2, [r0]
 611 0002 034B     		ldr	r3, .L33
 612 0004 9A42     		cmp	r2, r3
 613 0006 02D1     		bne	.L31
 212:./Src/i2c.c   ****     wii_JOYdati.I2CTxDone = 1;
 614              		.loc 1 212 0
 615 0008 0122     		movs	r2, #1
 616 000a 024B     		ldr	r3, .L33+4
 617 000c 1A73     		strb	r2, [r3, #12]
 618              	.L31:
 619 000e 7047     		bx	lr
 620              	.L34:
 621              		.align	2
 622              	.L33:
 623 0010 00580040 		.word	1073764352
 624 0014 00000000 		.word	wii_JOYdati
 625              		.cfi_endproc
ARM GAS  /tmp/cctw59bR.s 			page 17


 626              	.LFE68:
 628              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 629              		.align	2
 630              		.global	HAL_I2C_MasterRxCpltCallback
 631              		.thumb
 632              		.thumb_func
 634              	HAL_I2C_MasterRxCpltCallback:
 635              	.LFB69:
 213:./Src/i2c.c   ****   }
 214:./Src/i2c.c   **** }
 215:./Src/i2c.c   **** void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c){
 636              		.loc 1 215 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL34:
 216:./Src/i2c.c   ****   if(hi2c->Instance == I2C2){
 642              		.loc 1 216 0
 643 0000 0268     		ldr	r2, [r0]
 644 0002 034B     		ldr	r3, .L37
 645 0004 9A42     		cmp	r2, r3
 646 0006 02D1     		bne	.L35
 217:./Src/i2c.c   ****     wii_JOYdati.I2CRxDone = 1;
 647              		.loc 1 217 0
 648 0008 0122     		movs	r2, #1
 649 000a 024B     		ldr	r3, .L37+4
 650 000c 5A73     		strb	r2, [r3, #13]
 651              	.L35:
 652 000e 7047     		bx	lr
 653              	.L38:
 654              		.align	2
 655              	.L37:
 656 0010 00580040 		.word	1073764352
 657 0014 00000000 		.word	wii_JOYdati
 658              		.cfi_endproc
 659              	.LFE69:
 661              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 662              		.align	2
 663              		.global	HAL_I2C_ErrorCallback
 664              		.thumb
 665              		.thumb_func
 667              	HAL_I2C_ErrorCallback:
 668              	.LFB70:
 218:./Src/i2c.c   ****   }
 219:./Src/i2c.c   **** }
 220:./Src/i2c.c   **** void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
 221:./Src/i2c.c   **** {
 669              		.loc 1 221 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674              	.LVL35:
 675 0000 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE70:
ARM GAS  /tmp/cctw59bR.s 			page 18


 679              		.comm	wii_JOYdati,20,4
 680              		.comm	hdma_i2c2_tx,56,4
 681              		.comm	hdma_i2c2_rx,56,4
 682              		.comm	hi2c2,60,4
 683 0002 00BF     		.text
 684              	.Letext0:
 685              		.file 2 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 686              		.file 3 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 687              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 688              		.file 5 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 689              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 690              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 691              		.file 8 "./Inc/i2c.h"
 692              		.file 9 "./Drivers/CMSIS/Include/core_cm3.h"
 693              		.file 10 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 694              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cctw59bR.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 i2c.c
     /tmp/cctw59bR.s:20     .text.MX_I2C2_Init:00000000 $t
     /tmp/cctw59bR.s:25     .text.MX_I2C2_Init:00000000 MX_I2C2_Init
     /tmp/cctw59bR.s:134    .text.MX_I2C2_Init:0000008c $d
                            *COM*:0000003c hi2c2
                            *COM*:00000014 wii_JOYdati
     /tmp/cctw59bR.s:142    .text.WiiNunchuck_INIT:00000000 $t
     /tmp/cctw59bR.s:147    .text.WiiNunchuck_INIT:00000000 WiiNunchuck_INIT
     /tmp/cctw59bR.s:200    .text.WiiNunchuck_INIT:00000038 $d
     /tmp/cctw59bR.s:206    .text.nunchuk_decode_byte:00000000 $t
     /tmp/cctw59bR.s:211    .text.nunchuk_decode_byte:00000000 nunchuk_decode_byte
     /tmp/cctw59bR.s:231    .text.WiiNunchuck_TASK:00000000 $t
     /tmp/cctw59bR.s:236    .text.WiiNunchuck_TASK:00000000 WiiNunchuck_TASK
     /tmp/cctw59bR.s:259    .text.WiiNunchuck_TASK:00000014 $d
     /tmp/cctw59bR.s:272    .text.WiiNunchuck_TASK:0000002e $t
     /tmp/cctw59bR.s:590    .text.WiiNunchuck_TASK:000001f0 $d
     /tmp/cctw59bR.s:596    .text.HAL_I2C_MasterTxCpltCallback:00000000 $t
     /tmp/cctw59bR.s:601    .text.HAL_I2C_MasterTxCpltCallback:00000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cctw59bR.s:623    .text.HAL_I2C_MasterTxCpltCallback:00000010 $d
     /tmp/cctw59bR.s:629    .text.HAL_I2C_MasterRxCpltCallback:00000000 $t
     /tmp/cctw59bR.s:634    .text.HAL_I2C_MasterRxCpltCallback:00000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cctw59bR.s:656    .text.HAL_I2C_MasterRxCpltCallback:00000010 $d
     /tmp/cctw59bR.s:662    .text.HAL_I2C_ErrorCallback:00000000 $t
     /tmp/cctw59bR.s:667    .text.HAL_I2C_ErrorCallback:00000000 HAL_I2C_ErrorCallback
                            *COM*:00000038 hdma_i2c2_tx
                            *COM*:00000038 hdma_i2c2_rx
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
Error_Handler
HAL_I2C_Master_Transmit_DMA
HAL_Delay
HAL_GetTick
HAL_I2C_Master_Receive_DMA
HAL_NVIC_DisableIRQ
HAL_I2C_GetState
