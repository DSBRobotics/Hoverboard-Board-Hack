ARM GAS  /tmp/ccaGiFjx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_USART2_UART_Init
  22              		.thumb
  23              		.thumb_func
  25              	MX_USART2_UART_Init:
  26              	.LFB64:
  27              		.file 1 "./Src/uart.c"
   1:./Src/uart.c  **** #include "uart.h"
   2:./Src/uart.c  **** #include "stm32f1xx_hal.h"
   3:./Src/uart.c  **** #include "stdio.h"
   4:./Src/uart.c  **** #include "string.h"
   5:./Src/uart.c  **** 
   6:./Src/uart.c  **** 
   7:./Src/uart.c  **** UART_HandleTypeDef huart2;
   8:./Src/uart.c  **** DMA_HandleTypeDef hdma_usart2_rx;
   9:./Src/uart.c  **** DMA_HandleTypeDef hdma_usart2_tx;
  10:./Src/uart.c  **** 
  11:./Src/uart.c  **** volatile __IO struct UART_dati uartDati;
  12:./Src/uart.c  **** 
  13:./Src/uart.c  **** 
  14:./Src/uart.c  **** /* USART2 init function */
  15:./Src/uart.c  **** void MX_USART2_UART_Init(void)
  16:./Src/uart.c  **** {
  28              		.loc 1 16 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39              	.LBB2:
  17:./Src/uart.c  ****   __HAL_RCC_USART2_CLK_ENABLE();
  40              		.loc 1 17 0
  41 0004 1A4B     		ldr	r3, .L4
ARM GAS  /tmp/ccaGiFjx.s 			page 2


  42 0006 DA69     		ldr	r2, [r3, #28]
  43 0008 42F40032 		orr	r2, r2, #131072
  44 000c DA61     		str	r2, [r3, #28]
  45 000e DB69     		ldr	r3, [r3, #28]
  46 0010 03F40033 		and	r3, r3, #131072
  47 0014 0193     		str	r3, [sp, #4]
  48 0016 019B     		ldr	r3, [sp, #4]
  49              	.LBE2:
  18:./Src/uart.c  ****   /* DMA1_Channel6_IRQn interrupt configuration */
  19:./Src/uart.c  ****   HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 5, 6);
  50              		.loc 1 19 0
  51 0018 0622     		movs	r2, #6
  52 001a 0521     		movs	r1, #5
  53 001c 1020     		movs	r0, #16
  54 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  55              	.LVL0:
  20:./Src/uart.c  ****   HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
  56              		.loc 1 20 0
  57 0022 1020     		movs	r0, #16
  58 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  59              	.LVL1:
  21:./Src/uart.c  ****   /* DMA1_Channel7_IRQn interrupt configuration */
  22:./Src/uart.c  ****   HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 5, 7);
  60              		.loc 1 22 0
  61 0028 0722     		movs	r2, #7
  62 002a 0521     		movs	r1, #5
  63 002c 1120     		movs	r0, #17
  64 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  65              	.LVL2:
  23:./Src/uart.c  ****   HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
  66              		.loc 1 23 0
  67 0032 1120     		movs	r0, #17
  68 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  69              	.LVL3:
  24:./Src/uart.c  **** 
  25:./Src/uart.c  ****   huart2.Instance = USART2;
  70              		.loc 1 25 0
  71 0038 0E48     		ldr	r0, .L4+4
  72 003a 0F4B     		ldr	r3, .L4+8
  73 003c 0360     		str	r3, [r0]
  26:./Src/uart.c  ****   huart2.Init.BaudRate = 9600;
  74              		.loc 1 26 0
  75 003e 4FF41653 		mov	r3, #9600
  76 0042 4360     		str	r3, [r0, #4]
  27:./Src/uart.c  ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  77              		.loc 1 27 0
  78 0044 0023     		movs	r3, #0
  79 0046 8360     		str	r3, [r0, #8]
  28:./Src/uart.c  ****   huart2.Init.StopBits = UART_STOPBITS_1;
  80              		.loc 1 28 0
  81 0048 C360     		str	r3, [r0, #12]
  29:./Src/uart.c  ****   huart2.Init.Parity = UART_PARITY_NONE;
  82              		.loc 1 29 0
  83 004a 0361     		str	r3, [r0, #16]
  30:./Src/uart.c  ****   huart2.Init.Mode = UART_MODE_TX_RX;
  84              		.loc 1 30 0
  85 004c 0C22     		movs	r2, #12
ARM GAS  /tmp/ccaGiFjx.s 			page 3


  86 004e 4261     		str	r2, [r0, #20]
  31:./Src/uart.c  ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  87              		.loc 1 31 0
  88 0050 8361     		str	r3, [r0, #24]
  32:./Src/uart.c  ****  // huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  33:./Src/uart.c  ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  89              		.loc 1 33 0
  90 0052 FFF7FEFF 		bl	HAL_UART_Init
  91              	.LVL4:
  92 0056 08B1     		cbz	r0, .L2
  34:./Src/uart.c  ****   {
  35:./Src/uart.c  ****     Error_Handler();
  93              		.loc 1 35 0
  94 0058 FFF7FEFF 		bl	Error_Handler
  95              	.LVL5:
  96              	.L2:
  36:./Src/uart.c  ****   }
  37:./Src/uart.c  ****   
  38:./Src/uart.c  ****   uartDati.UartRxReady = 0;
  97              		.loc 1 38 0
  98 005c 074B     		ldr	r3, .L4+12
  99 005e 0022     		movs	r2, #0
 100 0060 83F87920 		strb	r2, [r3, #121]
  39:./Src/uart.c  ****   uartDati.UarttxReady = 1;
 101              		.loc 1 39 0
 102 0064 0122     		movs	r2, #1
 103 0066 83F87A20 		strb	r2, [r3, #122]
  40:./Src/uart.c  **** }
 104              		.loc 1 40 0
 105 006a 03B0     		add	sp, sp, #12
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 4
 108              		@ sp needed
 109 006c 5DF804FB 		ldr	pc, [sp], #4
 110              	.L5:
 111              		.align	2
 112              	.L4:
 113 0070 00100240 		.word	1073876992
 114 0074 00000000 		.word	huart2
 115 0078 00440040 		.word	1073759232
 116 007c 00000000 		.word	uartDati
 117              		.cfi_endproc
 118              	.LFE64:
 120              		.section	.text.Console_Log,"ax",%progbits
 121              		.align	2
 122              		.global	Console_Log
 123              		.thumb
 124              		.thumb_func
 126              	Console_Log:
 127              	.LFB65:
  41:./Src/uart.c  **** 
  42:./Src/uart.c  **** void Console_Log(char *message)
  43:./Src/uart.c  **** {
 128              		.loc 1 43 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccaGiFjx.s 			page 4


 132              	.LVL6:
 133 0000 10B5     		push	{r4, lr}
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 0446     		mov	r4, r0
 139              	.L7:
  44:./Src/uart.c  ****     while(huart2.State != HAL_UART_STATE_READY);
 140              		.loc 1 44 0 discriminator 1
 141 0004 074B     		ldr	r3, .L9
 142 0006 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
 143 000a DBB2     		uxtb	r3, r3
 144 000c 012B     		cmp	r3, #1
 145 000e F9D1     		bne	.L7
  45:./Src/uart.c  ****     HAL_UART_Transmit_DMA(&huart2, (uint8_t *)message, strlen(message));
 146              		.loc 1 45 0
 147 0010 2046     		mov	r0, r4
 148              	.LVL7:
 149 0012 FFF7FEFF 		bl	strlen
 150              	.LVL8:
 151 0016 82B2     		uxth	r2, r0
 152 0018 2146     		mov	r1, r4
 153 001a 0248     		ldr	r0, .L9
 154 001c FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 155              	.LVL9:
 156 0020 10BD     		pop	{r4, pc}
 157              	.LVL10:
 158              	.L10:
 159 0022 00BF     		.align	2
 160              	.L9:
 161 0024 00000000 		.word	huart2
 162              		.cfi_endproc
 163              	.LFE65:
 165              		.section	.text.Uart2_TX,"ax",%progbits
 166              		.align	2
 167              		.global	Uart2_TX
 168              		.thumb
 169              		.thumb_func
 171              	Uart2_TX:
 172              	.LFB66:
  46:./Src/uart.c  **** //    HAL_UART_Transmit(&huart2, (uint8_t *)message, strlen(message),200);
  47:./Src/uart.c  **** }
  48:./Src/uart.c  **** 
  49:./Src/uart.c  **** void Uart2_TX(char *message)
  50:./Src/uart.c  **** {
 173              		.loc 1 50 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL11:
 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI4:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccaGiFjx.s 			page 5


  51:./Src/uart.c  ****     uartDati.UarttxReady = 0;    //occupato
 184              		.loc 1 51 0
 185 0004 0022     		movs	r2, #0
 186 0006 054B     		ldr	r3, .L13
 187 0008 83F87A20 		strb	r2, [r3, #122]
  52:./Src/uart.c  ****     HAL_UART_Transmit_DMA(&huart2, (uint8_t *)message, strlen(message));
 188              		.loc 1 52 0
 189 000c FFF7FEFF 		bl	strlen
 190              	.LVL12:
 191 0010 82B2     		uxth	r2, r0
 192 0012 2146     		mov	r1, r4
 193 0014 0248     		ldr	r0, .L13+4
 194 0016 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 195              	.LVL13:
 196 001a 10BD     		pop	{r4, pc}
 197              	.LVL14:
 198              	.L14:
 199              		.align	2
 200              	.L13:
 201 001c 00000000 		.word	uartDati
 202 0020 00000000 		.word	huart2
 203              		.cfi_endproc
 204              	.LFE66:
 206              		.section	.text.Uart2_IS_TX_free,"ax",%progbits
 207              		.align	2
 208              		.global	Uart2_IS_TX_free
 209              		.thumb
 210              		.thumb_func
 212              	Uart2_IS_TX_free:
 213              	.LFB67:
  53:./Src/uart.c  **** }
  54:./Src/uart.c  **** uint8_t Uart2_IS_TX_free(void){
 214              		.loc 1 54 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
  55:./Src/uart.c  ****   return (uartDati.UarttxReady); //(huart2.State == HAL_UART_STATE_READY);
 219              		.loc 1 55 0
 220 0000 014B     		ldr	r3, .L16
 221 0002 93F87A00 		ldrb	r0, [r3, #122]	@ zero_extendqisi2
  56:./Src/uart.c  **** }
 222              		.loc 1 56 0
 223 0006 7047     		bx	lr
 224              	.L17:
 225              		.align	2
 226              	.L16:
 227 0008 00000000 		.word	uartDati
 228              		.cfi_endproc
 229              	.LFE67:
 231              		.section	.text.Uart2_IS_RX_available,"ax",%progbits
 232              		.align	2
 233              		.global	Uart2_IS_RX_available
 234              		.thumb
 235              		.thumb_func
 237              	Uart2_IS_RX_available:
 238              	.LFB68:
ARM GAS  /tmp/ccaGiFjx.s 			page 6


  57:./Src/uart.c  **** 
  58:./Src/uart.c  **** uint8_t Uart2_IS_RX_available(void){
 239              		.loc 1 58 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
  59:./Src/uart.c  ****   return (uartDati.UartRxReady); //(huart2.State == HAL_UART_STATE_READY);
 244              		.loc 1 59 0
 245 0000 014B     		ldr	r3, .L19
 246 0002 93F87900 		ldrb	r0, [r3, #121]	@ zero_extendqisi2
  60:./Src/uart.c  **** }
 247              		.loc 1 60 0
 248 0006 7047     		bx	lr
 249              	.L20:
 250              		.align	2
 251              	.L19:
 252 0008 00000000 		.word	uartDati
 253              		.cfi_endproc
 254              	.LFE68:
 256              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 257              		.align	2
 258              		.global	HAL_UART_RxCpltCallback
 259              		.thumb
 260              		.thumb_func
 262              	HAL_UART_RxCpltCallback:
 263              	.LFB69:
  61:./Src/uart.c  **** 
  62:./Src/uart.c  **** 
  63:./Src/uart.c  **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  64:./Src/uart.c  **** {
 264              		.loc 1 64 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL15:
  65:./Src/uart.c  ****      if (huart->Instance == USART2) {
 270              		.loc 1 65 0
 271 0000 0268     		ldr	r2, [r0]
 272 0002 044B     		ldr	r3, .L23
 273 0004 9A42     		cmp	r2, r3
 274 0006 03D1     		bne	.L21
  66:./Src/uart.c  ****         uartDati.UartRxReady = 1;
 275              		.loc 1 66 0
 276 0008 0122     		movs	r2, #1
 277 000a 034B     		ldr	r3, .L23+4
 278 000c 83F87920 		strb	r2, [r3, #121]
 279              	.L21:
 280 0010 7047     		bx	lr
 281              	.L24:
 282 0012 00BF     		.align	2
 283              	.L23:
 284 0014 00440040 		.word	1073759232
 285 0018 00000000 		.word	uartDati
 286              		.cfi_endproc
 287              	.LFE69:
ARM GAS  /tmp/ccaGiFjx.s 			page 7


 289              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 290              		.align	2
 291              		.global	HAL_UART_TxCpltCallback
 292              		.thumb
 293              		.thumb_func
 295              	HAL_UART_TxCpltCallback:
 296              	.LFB70:
  67:./Src/uart.c  ****      }
  68:./Src/uart.c  **** }
  69:./Src/uart.c  **** 
  70:./Src/uart.c  **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 297              		.loc 1 70 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL16:
  71:./Src/uart.c  ****      if (huart->Instance == USART2) {
 303              		.loc 1 71 0
 304 0000 0268     		ldr	r2, [r0]
 305 0002 044B     		ldr	r3, .L27
 306 0004 9A42     		cmp	r2, r3
 307 0006 03D1     		bne	.L25
  72:./Src/uart.c  ****        uartDati.UarttxReady = 1;
 308              		.loc 1 72 0
 309 0008 0122     		movs	r2, #1
 310 000a 034B     		ldr	r3, .L27+4
 311 000c 83F87A20 		strb	r2, [r3, #122]
 312              	.L25:
 313 0010 7047     		bx	lr
 314              	.L28:
 315 0012 00BF     		.align	2
 316              	.L27:
 317 0014 00440040 		.word	1073759232
 318 0018 00000000 		.word	uartDati
 319              		.cfi_endproc
 320              	.LFE70:
 322              		.comm	uartDati,123,4
 323              		.comm	hdma_usart2_tx,56,4
 324              		.comm	hdma_usart2_rx,56,4
 325              		.comm	huart2,64,4
 326              		.text
 327              	.Letext0:
 328              		.file 2 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 329              		.file 3 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 330              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 331              		.file 5 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 332              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 333              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 334              		.file 8 "./Inc/uart.h"
 335              		.file 9 "./Drivers/CMSIS/Include/core_cm3.h"
 336              		.file 10 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 337              		.file 11 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccaGiFjx.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
     /tmp/ccaGiFjx.s:20     .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccaGiFjx.s:25     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccaGiFjx.s:113    .text.MX_USART2_UART_Init:00000070 $d
                            *COM*:00000040 huart2
                            *COM*:0000007b uartDati
     /tmp/ccaGiFjx.s:121    .text.Console_Log:00000000 $t
     /tmp/ccaGiFjx.s:126    .text.Console_Log:00000000 Console_Log
     /tmp/ccaGiFjx.s:161    .text.Console_Log:00000024 $d
     /tmp/ccaGiFjx.s:166    .text.Uart2_TX:00000000 $t
     /tmp/ccaGiFjx.s:171    .text.Uart2_TX:00000000 Uart2_TX
     /tmp/ccaGiFjx.s:201    .text.Uart2_TX:0000001c $d
     /tmp/ccaGiFjx.s:207    .text.Uart2_IS_TX_free:00000000 $t
     /tmp/ccaGiFjx.s:212    .text.Uart2_IS_TX_free:00000000 Uart2_IS_TX_free
     /tmp/ccaGiFjx.s:227    .text.Uart2_IS_TX_free:00000008 $d
     /tmp/ccaGiFjx.s:232    .text.Uart2_IS_RX_available:00000000 $t
     /tmp/ccaGiFjx.s:237    .text.Uart2_IS_RX_available:00000000 Uart2_IS_RX_available
     /tmp/ccaGiFjx.s:252    .text.Uart2_IS_RX_available:00000008 $d
     /tmp/ccaGiFjx.s:257    .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccaGiFjx.s:262    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccaGiFjx.s:284    .text.HAL_UART_RxCpltCallback:00000014 $d
     /tmp/ccaGiFjx.s:290    .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccaGiFjx.s:295    .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccaGiFjx.s:317    .text.HAL_UART_TxCpltCallback:00000014 $d
                            *COM*:00000038 hdma_usart2_tx
                            *COM*:00000038 hdma_usart2_rx
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
Error_Handler
strlen
HAL_UART_Transmit_DMA
