ARM GAS  /tmp/cc9X6SxI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"pid.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PID_init,"ax",%progbits
  19              		.align	2
  20              		.global	PID_init
  21              		.thumb
  22              		.thumb_func
  24              	PID_init:
  25              	.LFB63:
  26              		.file 1 "./Src/pid.c"
   1:./Src/pid.c   **** #include "pid.h"
   2:./Src/pid.c   **** 
   3:./Src/pid.c   **** TIM_HandleTypeDef Tim3PID;
   4:./Src/pid.c   **** 
   5:./Src/pid.c   **** struct PID_dati pid_L_,pid_R_;
   6:./Src/pid.c   **** struct pid_I32_t pid_L_Dati,pid_R_Dati;
   7:./Src/pid.c   **** 
   8:./Src/pid.c   **** #define PID_PERIOD 5    //Hz
   9:./Src/pid.c   **** 
  10:./Src/pid.c   **** void PID_init(uint16_t min, uint16_t max)
  11:./Src/pid.c   **** {
  27              		.loc 1 11 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42 0004 0646     		mov	r6, r0
  43 0006 0D46     		mov	r5, r1
  44              	.LBB2:
  12:./Src/pid.c   ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  13:./Src/pid.c   ****   TIM_MasterConfigTypeDef sMasterConfig;
  14:./Src/pid.c   ****     
ARM GAS  /tmp/cc9X6SxI.s 			page 2


  15:./Src/pid.c   ****   __HAL_RCC_TIM3_CLK_ENABLE();
  45              		.loc 1 15 0
  46 0008 244B     		ldr	r3, .L5
  47 000a DA69     		ldr	r2, [r3, #28]
  48 000c 42F00202 		orr	r2, r2, #2
  49 0010 DA61     		str	r2, [r3, #28]
  50 0012 DB69     		ldr	r3, [r3, #28]
  51 0014 03F00203 		and	r3, r3, #2
  52 0018 0193     		str	r3, [sp, #4]
  53 001a 019B     		ldr	r3, [sp, #4]
  54              	.LBE2:
  16:./Src/pid.c   ****   Tim3PID.Instance = TIM3;
  55              		.loc 1 16 0
  56 001c 204C     		ldr	r4, .L5+4
  57 001e 214B     		ldr	r3, .L5+8
  58 0020 2360     		str	r3, [r4]
  17:./Src/pid.c   ****   Tim3PID.Init.Period = 64500;                
  59              		.loc 1 17 0
  60 0022 4FF6F433 		movw	r3, #64500
  61 0026 E360     		str	r3, [r4, #12]
  18:./Src/pid.c   ****   Tim3PID.Init.Prescaler = 198;
  62              		.loc 1 18 0
  63 0028 C623     		movs	r3, #198
  64 002a 6360     		str	r3, [r4, #4]
  19:./Src/pid.c   ****   Tim3PID.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
  65              		.loc 1 19 0
  66 002c 4FF40073 		mov	r3, #512
  67 0030 2361     		str	r3, [r4, #16]
  20:./Src/pid.c   ****   Tim3PID.Init.CounterMode = TIM_COUNTERMODE_UP;        
  68              		.loc 1 20 0
  69 0032 0023     		movs	r3, #0
  70 0034 A360     		str	r3, [r4, #8]
  21:./Src/pid.c   ****   HAL_TIM_Base_Init(&Tim3PID);
  71              		.loc 1 21 0
  72 0036 2046     		mov	r0, r4
  73              	.LVL1:
  74 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
  75              	.LVL2:
  22:./Src/pid.c   **** 
  23:./Src/pid.c   ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  76              		.loc 1 23 0
  77 003c 08A9     		add	r1, sp, #32
  78 003e 4FF48053 		mov	r3, #4096
  79 0042 41F8103D 		str	r3, [r1, #-16]!
  24:./Src/pid.c   ****   if (HAL_TIM_ConfigClockSource(&Tim3PID, &sClockSourceConfig) != HAL_OK)
  80              		.loc 1 24 0
  81 0046 2046     		mov	r0, r4
  82 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  83              	.LVL3:
  84 004c 08B1     		cbz	r0, .L2
  25:./Src/pid.c   ****   {
  26:./Src/pid.c   ****     Error_Handler();
  85              		.loc 1 26 0
  86 004e FFF7FEFF 		bl	Error_Handler
  87              	.LVL4:
  88              	.L2:
  27:./Src/pid.c   ****   }
ARM GAS  /tmp/cc9X6SxI.s 			page 3


  28:./Src/pid.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  89              		.loc 1 28 0
  90 0052 0023     		movs	r3, #0
  91 0054 0293     		str	r3, [sp, #8]
  29:./Src/pid.c   ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  92              		.loc 1 29 0
  93 0056 0393     		str	r3, [sp, #12]
  30:./Src/pid.c   ****   if (HAL_TIMEx_MasterConfigSynchronization(&Tim3PID, &sMasterConfig) != HAL_OK)
  94              		.loc 1 30 0
  95 0058 1148     		ldr	r0, .L5+4
  96 005a 02A9     		add	r1, sp, #8
  97 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  98              	.LVL5:
  99 0060 08B1     		cbz	r0, .L3
  31:./Src/pid.c   ****   {
  32:./Src/pid.c   ****     Error_Handler();
 100              		.loc 1 32 0
 101 0062 FFF7FEFF 		bl	Error_Handler
 102              	.LVL6:
 103              	.L3:
  33:./Src/pid.c   ****   }
  34:./Src/pid.c   ****   HAL_TIM_Base_Start_IT(&Tim3PID);
 104              		.loc 1 34 0
 105 0066 0E48     		ldr	r0, .L5+4
 106 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 107              	.LVL7:
  35:./Src/pid.c   ****   HAL_NVIC_SetPriority(TIM3_IRQn, 3, 4);
 108              		.loc 1 35 0
 109 006c 1D20     		movs	r0, #29
 110 006e 0321     		movs	r1, #3
 111 0070 0422     		movs	r2, #4
 112 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 113              	.LVL8:
  36:./Src/pid.c   ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);  
 114              		.loc 1 36 0
 115 0076 1D20     		movs	r0, #29
 116 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 117              	.LVL9:
  37:./Src/pid.c   ****  
  38:./Src/pid.c   ****   pid_L_Dati.min = min;
 118              		.loc 1 38 0
 119 007c 0A4B     		ldr	r3, .L5+12
 120 007e 5E60     		str	r6, [r3, #4]
  39:./Src/pid.c   ****   pid_L_Dati.max = max;
 121              		.loc 1 39 0
 122 0080 1D60     		str	r5, [r3]
  40:./Src/pid.c   ****   pid_R_Dati.min = min;
 123              		.loc 1 40 0
 124 0082 0A4B     		ldr	r3, .L5+16
 125 0084 5E60     		str	r6, [r3, #4]
  41:./Src/pid.c   ****   pid_R_Dati.max = max;
 126              		.loc 1 41 0
 127 0086 1D60     		str	r5, [r3]
  42:./Src/pid.c   **** 
  43:./Src/pid.c   ****   pid_L_.mS = HAL_GetTick();
 128              		.loc 1 43 0
 129 0088 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc9X6SxI.s 			page 4


 130              	.LVL10:
 131 008c 084B     		ldr	r3, .L5+20
 132 008e 1860     		str	r0, [r3]
  44:./Src/pid.c   ****   pid_R_.mS = HAL_GetTick();
 133              		.loc 1 44 0
 134 0090 FFF7FEFF 		bl	HAL_GetTick
 135              	.LVL11:
 136 0094 074B     		ldr	r3, .L5+24
 137 0096 1860     		str	r0, [r3]
  45:./Src/pid.c   **** }
 138              		.loc 1 45 0
 139 0098 08B0     		add	sp, sp, #32
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 16
 142              		@ sp needed
 143 009a 70BD     		pop	{r4, r5, r6, pc}
 144              	.L6:
 145              		.align	2
 146              	.L5:
 147 009c 00100240 		.word	1073876992
 148 00a0 00000000 		.word	Tim3PID
 149 00a4 00040040 		.word	1073742848
 150 00a8 00000000 		.word	pid_L_Dati
 151 00ac 00000000 		.word	pid_R_Dati
 152 00b0 00000000 		.word	pid_L_
 153 00b4 00000000 		.word	pid_R_
 154              		.cfi_endproc
 155              	.LFE63:
 157              		.section	.text.PID_set_L_costant,"ax",%progbits
 158              		.align	2
 159              		.global	PID_set_L_costant
 160              		.thumb
 161              		.thumb_func
 163              	PID_set_L_costant:
 164              	.LFB64:
  46:./Src/pid.c   **** 
  47:./Src/pid.c   **** void PID_set_L_costant(float P,float I,float D){
 165              		.loc 1 47 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL12:
  48:./Src/pid.c   ****   pid_L_Dati.kp = P;
 171              		.loc 1 48 0
 172 0000 024B     		ldr	r3, .L8
 173 0002 1861     		str	r0, [r3, #16]	@ float
  49:./Src/pid.c   ****   pid_L_Dati.ki = I;
 174              		.loc 1 49 0
 175 0004 5961     		str	r1, [r3, #20]	@ float
  50:./Src/pid.c   ****   pid_L_Dati.kd = D;
 176              		.loc 1 50 0
 177 0006 9A61     		str	r2, [r3, #24]	@ float
 178 0008 7047     		bx	lr
 179              	.L9:
 180 000a 00BF     		.align	2
 181              	.L8:
ARM GAS  /tmp/cc9X6SxI.s 			page 5


 182 000c 00000000 		.word	pid_L_Dati
 183              		.cfi_endproc
 184              	.LFE64:
 186              		.section	.text.PID_set_R_costant,"ax",%progbits
 187              		.align	2
 188              		.global	PID_set_R_costant
 189              		.thumb
 190              		.thumb_func
 192              	PID_set_R_costant:
 193              	.LFB65:
  51:./Src/pid.c   **** }
  52:./Src/pid.c   **** void PID_set_R_costant(float P,float I,float D){
 194              		.loc 1 52 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              	.LVL13:
  53:./Src/pid.c   ****   pid_R_Dati.kp = P;
 200              		.loc 1 53 0
 201 0000 024B     		ldr	r3, .L11
 202 0002 1861     		str	r0, [r3, #16]	@ float
  54:./Src/pid.c   ****   pid_R_Dati.ki = I;
 203              		.loc 1 54 0
 204 0004 5961     		str	r1, [r3, #20]	@ float
  55:./Src/pid.c   ****   pid_R_Dati.kd = D;
 205              		.loc 1 55 0
 206 0006 9A61     		str	r2, [r3, #24]	@ float
 207 0008 7047     		bx	lr
 208              	.L12:
 209 000a 00BF     		.align	2
 210              	.L11:
 211 000c 00000000 		.word	pid_R_Dati
 212              		.cfi_endproc
 213              	.LFE65:
 215              		.global	__aeabi_fsub
 216              		.global	__aeabi_fadd
 217              		.global	__aeabi_fmul
 218              		.global	__aeabi_fcmpgt
 219              		.global	__aeabi_fcmplt
 220              		.section	.text.pid_update_f,"ax",%progbits
 221              		.align	2
 222              		.global	pid_update_f
 223              		.thumb
 224              		.thumb_func
 226              	pid_update_f:
 227              	.LFB68:
  56:./Src/pid.c   **** }
  57:./Src/pid.c   **** void PID_L_task(int32_t set_speed, int32_t speed){
  58:./Src/pid.c   ****   uint32_t m_S;
  59:./Src/pid.c   ****   
  60:./Src/pid.c   ****   m_S = HAL_GetTick();
  61:./Src/pid.c   ****   if((m_S - pid_L_.mS)>=200){
  62:./Src/pid.c   ****     pid_L_.mS = HAL_GetTick(); 
  63:./Src/pid.c   ****     
  64:./Src/pid.c   ****      //Calculate the new duty cycle
  65:./Src/pid.c   ****     pid_L_.duty = pid_update_I32(set_speed, speed, &pid_L_Dati);
ARM GAS  /tmp/cc9X6SxI.s 			page 6


  66:./Src/pid.c   ****     
  67:./Src/pid.c   ****   }  
  68:./Src/pid.c   **** }
  69:./Src/pid.c   **** 
  70:./Src/pid.c   **** extern volatile __IO int32_t testVelR;
  71:./Src/pid.c   **** void PID_R_task(int32_t set_speed, int32_t speed){
  72:./Src/pid.c   ****   uint32_t m_S;
  73:./Src/pid.c   ****   
  74:./Src/pid.c   ****   m_S = HAL_GetTick();
  75:./Src/pid.c   ****   if((m_S - pid_R_.mS)>=200){
  76:./Src/pid.c   ****     pid_R_.mS = HAL_GetTick(); 
  77:./Src/pid.c   ****     
  78:./Src/pid.c   ****      //Calculate the new duty cycle
  79:./Src/pid.c   ****     pid_R_.duty = pid_update_I32(set_speed, testVelR, &pid_R_Dati);
  80:./Src/pid.c   ****     testVelR = 0;
  81:./Src/pid.c   ****     
  82:./Src/pid.c   ****   }  
  83:./Src/pid.c   **** }
  84:./Src/pid.c   **** 
  85:./Src/pid.c   **** 
  86:./Src/pid.c   **** 
  87:./Src/pid.c   **** 
  88:./Src/pid.c   **** 
  89:./Src/pid.c   **** 
  90:./Src/pid.c   **** 
  91:./Src/pid.c   **** 
  92:./Src/pid.c   **** 
  93:./Src/pid.c   **** 
  94:./Src/pid.c   **** 
  95:./Src/pid.c   **** 
  96:./Src/pid.c   **** 
  97:./Src/pid.c   **** 
  98:./Src/pid.c   **** 
  99:./Src/pid.c   **** //------------------------PRIVATE------------------------
 100:./Src/pid.c   **** 
 101:./Src/pid.c   **** float pid_update_f(float sp /*! The set point */,
 102:./Src/pid.c   ****     float pv /*! The process variable */,
 103:./Src/pid.c   ****     struct pid_f_t * ptr /*! A pointer to the PID constants */){
 228              		.loc 1 103 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL14:
 233 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 32
 236              		.cfi_offset 3, -32
 237              		.cfi_offset 4, -28
 238              		.cfi_offset 5, -24
 239              		.cfi_offset 6, -20
 240              		.cfi_offset 7, -16
 241              		.cfi_offset 8, -12
 242              		.cfi_offset 9, -8
 243              		.cfi_offset 14, -4
 244 0004 1446     		mov	r4, r2
 104:./Src/pid.c   ****       
 105:./Src/pid.c   ****   float e;
ARM GAS  /tmp/cc9X6SxI.s 			page 7


 106:./Src/pid.c   ****   float manp;
 107:./Src/pid.c   ****   float tmpi;
 108:./Src/pid.c   ****   
 109:./Src/pid.c   ****   //errore
 110:./Src/pid.c   ****   e = ptr->e;
 245              		.loc 1 110 0
 246 0006 D2F80890 		ldr	r9, [r2, #8]	@ float
 247              	.LVL15:
 111:./Src/pid.c   ****   ptr->e = sp - pv;
 248              		.loc 1 111 0
 249 000a FFF7FEFF 		bl	__aeabi_fsub
 250              	.LVL16:
 251 000e 0546     		mov	r5, r0
 252 0010 A060     		str	r0, [r4, #8]	@ float
 112:./Src/pid.c   ****   
 113:./Src/pid.c   ****   //integral
 114:./Src/pid.c   ****   tmpi = ptr->i + ptr->e;
 253              		.loc 1 114 0
 254 0012 E168     		ldr	r1, [r4, #12]	@ float
 255 0014 FFF7FEFF 		bl	__aeabi_fadd
 256              	.LVL17:
 257 0018 0746     		mov	r7, r0
 258              	.LVL18:
 115:./Src/pid.c   ****   
 116:./Src/pid.c   ****   //P*I*D
 117:./Src/pid.c   ****   manp = ptr->kp * ptr->e + ptr->ki * tmpi + ptr->kd * (e - ptr->e);
 259              		.loc 1 117 0
 260 001a 2846     		mov	r0, r5
 261              	.LVL19:
 262 001c 2169     		ldr	r1, [r4, #16]	@ float
 263 001e FFF7FEFF 		bl	__aeabi_fmul
 264              	.LVL20:
 265 0022 0646     		mov	r6, r0
 266 0024 6069     		ldr	r0, [r4, #20]	@ float
 267 0026 3946     		mov	r1, r7
 268 0028 FFF7FEFF 		bl	__aeabi_fmul
 269              	.LVL21:
 270 002c 0146     		mov	r1, r0
 271 002e 3046     		mov	r0, r6
 272 0030 FFF7FEFF 		bl	__aeabi_fadd
 273              	.LVL22:
 274 0034 0646     		mov	r6, r0
 275 0036 D4F81880 		ldr	r8, [r4, #24]	@ float
 276 003a 4846     		mov	r0, r9
 277 003c 2946     		mov	r1, r5
 278 003e FFF7FEFF 		bl	__aeabi_fsub
 279              	.LVL23:
 280 0042 0146     		mov	r1, r0
 281 0044 4046     		mov	r0, r8
 282 0046 FFF7FEFF 		bl	__aeabi_fmul
 283              	.LVL24:
 284 004a 0146     		mov	r1, r0
 285 004c 3046     		mov	r0, r6
 286 004e FFF7FEFF 		bl	__aeabi_fadd
 287              	.LVL25:
 288 0052 0646     		mov	r6, r0
 289              	.LVL26:
ARM GAS  /tmp/cc9X6SxI.s 			page 8


 118:./Src/pid.c   ****   
 119:./Src/pid.c   ****   //Limit, max;min
 120:./Src/pid.c   ****   if( (manp < ptr->max) && (manp > ptr->min) ){
 290              		.loc 1 120 0
 291 0054 2568     		ldr	r5, [r4]	@ float
 292 0056 2846     		mov	r0, r5
 293              	.LVL27:
 294 0058 3146     		mov	r1, r6
 295 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 296              	.LVL28:
 297 005e 38B1     		cbz	r0, .L14
 298              		.loc 1 120 0 is_stmt 0 discriminator 1
 299 0060 6068     		ldr	r0, [r4, #4]	@ float
 300 0062 3146     		mov	r1, r6
 301 0064 FFF7FEFF 		bl	__aeabi_fcmplt
 302              	.LVL29:
 303 0068 10B1     		cbz	r0, .L14
 121:./Src/pid.c   ****     ptr->i = tmpi;
 304              		.loc 1 121 0 is_stmt 1
 305 006a E760     		str	r7, [r4, #12]	@ float
 117:./Src/pid.c   ****   
 306              		.loc 1 117 0
 307 006c 3546     		mov	r5, r6
 308              		.loc 1 121 0
 309 006e 0BE0     		b	.L17
 310              	.L14:
 122:./Src/pid.c   ****   } else if ( manp > ptr->max ){
 311              		.loc 1 122 0
 312 0070 3046     		mov	r0, r6
 313 0072 2946     		mov	r1, r5
 314 0074 FFF7FEFF 		bl	__aeabi_fcmpgt
 315              	.LVL30:
 316 0078 30B9     		cbnz	r0, .L17
 123:./Src/pid.c   ****     manp = ptr->max;
 124:./Src/pid.c   ****   } else if ( manp < ptr->min ){
 317              		.loc 1 124 0
 318 007a 6568     		ldr	r5, [r4, #4]	@ float
 319 007c 2846     		mov	r0, r5
 320 007e 3146     		mov	r1, r6
 321 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 322              	.LVL31:
 323 0084 00B9     		cbnz	r0, .L17
 117:./Src/pid.c   ****   
 324              		.loc 1 117 0
 325 0086 3546     		mov	r5, r6
 326              	.L17:
 327              	.LVL32:
 125:./Src/pid.c   ****     manp = ptr->min;
 126:./Src/pid.c   ****   }
 127:./Src/pid.c   ****   return manp;
 128:./Src/pid.c   **** }
 328              		.loc 1 128 0
 329 0088 2846     		mov	r0, r5
 330 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 331              		.cfi_endproc
 332              	.LFE68:
 334              		.global	__aeabi_i2f
ARM GAS  /tmp/cc9X6SxI.s 			page 9


 335              		.global	__aeabi_f2iz
 336 008e 00BF     		.section	.text.pid_update_I32,"ax",%progbits
 337              		.align	2
 338              		.global	pid_update_I32
 339              		.thumb
 340              		.thumb_func
 342              	pid_update_I32:
 343              	.LFB69:
 129:./Src/pid.c   **** 
 130:./Src/pid.c   **** int32_t pid_update_I32(int32_t sp /*! The set point */,
 131:./Src/pid.c   ****     int32_t pv /*! The process variable */,
 132:./Src/pid.c   ****     struct pid_I32_t * ptr /*! A pointer to the PID constants */){
 344              		.loc 1 132 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL33:
 349 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 350              	.LCFI4:
 351              		.cfi_def_cfa_offset 32
 352              		.cfi_offset 3, -32
 353              		.cfi_offset 4, -28
 354              		.cfi_offset 5, -24
 355              		.cfi_offset 6, -20
 356              		.cfi_offset 7, -16
 357              		.cfi_offset 8, -12
 358              		.cfi_offset 9, -8
 359              		.cfi_offset 14, -4
 360 0004 1446     		mov	r4, r2
 133:./Src/pid.c   ****       
 134:./Src/pid.c   ****   int32_t e;
 135:./Src/pid.c   ****   float manp;
 136:./Src/pid.c   ****   int32_t tmpi;
 137:./Src/pid.c   ****   int32_t manpI32;
 138:./Src/pid.c   ****   
 139:./Src/pid.c   ****   //errore
 140:./Src/pid.c   ****   e = ptr->e;
 361              		.loc 1 140 0
 362 0006 D2F80890 		ldr	r9, [r2, #8]
 363              	.LVL34:
 141:./Src/pid.c   ****   ptr->e = sp - pv;
 364              		.loc 1 141 0
 365 000a 451A     		subs	r5, r0, r1
 366 000c 9560     		str	r5, [r2, #8]
 142:./Src/pid.c   ****   
 143:./Src/pid.c   ****   //integral
 144:./Src/pid.c   ****   tmpi = ptr->i + ptr->e;
 367              		.loc 1 144 0
 368 000e D368     		ldr	r3, [r2, #12]
 369 0010 EE18     		adds	r6, r5, r3
 370              	.LVL35:
 145:./Src/pid.c   ****   if(ptr->i > 300){
 371              		.loc 1 145 0
 372 0012 B3F5967F 		cmp	r3, #300
 373 0016 02DD     		ble	.L22
 146:./Src/pid.c   ****     ptr->i = 300;
 374              		.loc 1 146 0
ARM GAS  /tmp/cc9X6SxI.s 			page 10


 375 0018 4FF49673 		mov	r3, #300
 376 001c D360     		str	r3, [r2, #12]
 377              	.L22:
 147:./Src/pid.c   ****   }
 148:./Src/pid.c   ****   if(ptr->i < -300){
 378              		.loc 1 148 0
 379 001e E368     		ldr	r3, [r4, #12]
 380 0020 13F5967F 		cmn	r3, #300
 381 0024 01DA     		bge	.L23
 149:./Src/pid.c   ****     ptr->i = -300;
 382              		.loc 1 149 0
 383 0026 1D4B     		ldr	r3, .L27
 384 0028 E360     		str	r3, [r4, #12]
 385              	.L23:
 150:./Src/pid.c   ****   }
 151:./Src/pid.c   ****   
 152:./Src/pid.c   ****   //P*I*D
 153:./Src/pid.c   ****   manp = (ptr->kp * ptr->e) + (ptr->ki * tmpi) + (ptr->kd * (e - ptr->e));
 386              		.loc 1 153 0
 387 002a 2769     		ldr	r7, [r4, #16]	@ float
 388 002c 2846     		mov	r0, r5
 389              	.LVL36:
 390 002e FFF7FEFF 		bl	__aeabi_i2f
 391              	.LVL37:
 392 0032 0146     		mov	r1, r0
 393 0034 3846     		mov	r0, r7
 394 0036 FFF7FEFF 		bl	__aeabi_fmul
 395              	.LVL38:
 396 003a 0746     		mov	r7, r0
 397 003c D4F81480 		ldr	r8, [r4, #20]	@ float
 398 0040 3046     		mov	r0, r6
 399 0042 FFF7FEFF 		bl	__aeabi_i2f
 400              	.LVL39:
 401 0046 0146     		mov	r1, r0
 402 0048 4046     		mov	r0, r8
 403 004a FFF7FEFF 		bl	__aeabi_fmul
 404              	.LVL40:
 405 004e 0146     		mov	r1, r0
 406 0050 3846     		mov	r0, r7
 407 0052 FFF7FEFF 		bl	__aeabi_fadd
 408              	.LVL41:
 409 0056 0746     		mov	r7, r0
 410 0058 D4F81880 		ldr	r8, [r4, #24]	@ float
 411 005c C5EB0900 		rsb	r0, r5, r9
 412 0060 FFF7FEFF 		bl	__aeabi_i2f
 413              	.LVL42:
 414 0064 0146     		mov	r1, r0
 415 0066 4046     		mov	r0, r8
 416 0068 FFF7FEFF 		bl	__aeabi_fmul
 417              	.LVL43:
 418 006c 0146     		mov	r1, r0
 419 006e 3846     		mov	r0, r7
 420 0070 FFF7FEFF 		bl	__aeabi_fadd
 421              	.LVL44:
 154:./Src/pid.c   ****   manpI32 = (int32_t)manp;
 422              		.loc 1 154 0
 423 0074 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  /tmp/cc9X6SxI.s 			page 11


 424              	.LVL45:
 155:./Src/pid.c   ****   
 156:./Src/pid.c   ****   //Limit, max;min
 157:./Src/pid.c   ****   if( (manpI32 < ptr->max) && (manpI32 > ptr->min) ){
 425              		.loc 1 157 0
 426 0078 2368     		ldr	r3, [r4]
 427 007a 8342     		cmp	r3, r0
 428 007c 05DD     		ble	.L24
 429              		.loc 1 157 0 is_stmt 0 discriminator 1
 430 007e 6268     		ldr	r2, [r4, #4]
 431 0080 8242     		cmp	r2, r0
 432 0082 02DA     		bge	.L24
 158:./Src/pid.c   ****     ptr->i = tmpi;
 433              		.loc 1 158 0 is_stmt 1
 434 0084 E660     		str	r6, [r4, #12]
 154:./Src/pid.c   ****   manpI32 = (int32_t)manp;
 435              		.loc 1 154 0
 436 0086 0346     		mov	r3, r0
 437              		.loc 1 158 0
 438 0088 05E0     		b	.L25
 439              	.L24:
 159:./Src/pid.c   ****   } else if ( manpI32 > ptr->max ){
 440              		.loc 1 159 0
 441 008a 9842     		cmp	r0, r3
 442 008c 03DC     		bgt	.L25
 160:./Src/pid.c   ****     manpI32 = ptr->max;
 161:./Src/pid.c   ****   } else if ( manpI32 < ptr->min ){
 443              		.loc 1 161 0
 444 008e 6368     		ldr	r3, [r4, #4]
 445 0090 8342     		cmp	r3, r0
 446 0092 00DC     		bgt	.L25
 154:./Src/pid.c   ****   
 447              		.loc 1 154 0
 448 0094 0346     		mov	r3, r0
 449              	.L25:
 450              	.LVL46:
 162:./Src/pid.c   ****     manpI32 = ptr->min;
 163:./Src/pid.c   ****   }
 164:./Src/pid.c   ****   return manpI32;
 165:./Src/pid.c   **** }
 451              		.loc 1 165 0
 452 0096 1846     		mov	r0, r3
 453 0098 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 454              	.LVL47:
 455              	.L28:
 456              		.align	2
 457              	.L27:
 458 009c D4FEFFFF 		.word	-300
 459              		.cfi_endproc
 460              	.LFE69:
 462              		.section	.text.PID_L_task,"ax",%progbits
 463              		.align	2
 464              		.global	PID_L_task
 465              		.thumb
 466              		.thumb_func
 468              	PID_L_task:
 469              	.LFB66:
ARM GAS  /tmp/cc9X6SxI.s 			page 12


  57:./Src/pid.c   ****   uint32_t m_S;
 470              		.loc 1 57 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL48:
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              	.LCFI5:
 477              		.cfi_def_cfa_offset 16
 478              		.cfi_offset 4, -16
 479              		.cfi_offset 5, -12
 480              		.cfi_offset 6, -8
 481              		.cfi_offset 14, -4
 482 0002 0546     		mov	r5, r0
 483 0004 0C46     		mov	r4, r1
  60:./Src/pid.c   ****   if((m_S - pid_L_.mS)>=200){
 484              		.loc 1 60 0
 485 0006 FFF7FEFF 		bl	HAL_GetTick
 486              	.LVL49:
  61:./Src/pid.c   ****     pid_L_.mS = HAL_GetTick(); 
 487              		.loc 1 61 0
 488 000a 084B     		ldr	r3, .L32
 489 000c 1B68     		ldr	r3, [r3]
 490 000e C01A     		subs	r0, r0, r3
 491              	.LVL50:
 492 0010 C728     		cmp	r0, #199
 493 0012 09D9     		bls	.L29
  62:./Src/pid.c   ****     
 494              		.loc 1 62 0
 495 0014 FFF7FEFF 		bl	HAL_GetTick
 496              	.LVL51:
 497 0018 044E     		ldr	r6, .L32
 498 001a 3060     		str	r0, [r6]
  65:./Src/pid.c   ****     
 499              		.loc 1 65 0
 500 001c 2846     		mov	r0, r5
 501 001e 2146     		mov	r1, r4
 502 0020 034A     		ldr	r2, .L32+4
 503 0022 FFF7FEFF 		bl	pid_update_I32
 504              	.LVL52:
 505 0026 7060     		str	r0, [r6, #4]
 506              	.L29:
 507 0028 70BD     		pop	{r4, r5, r6, pc}
 508              	.LVL53:
 509              	.L33:
 510 002a 00BF     		.align	2
 511              	.L32:
 512 002c 00000000 		.word	pid_L_
 513 0030 00000000 		.word	pid_L_Dati
 514              		.cfi_endproc
 515              	.LFE66:
 517              		.section	.text.PID_R_task,"ax",%progbits
 518              		.align	2
 519              		.global	PID_R_task
 520              		.thumb
 521              		.thumb_func
 523              	PID_R_task:
ARM GAS  /tmp/cc9X6SxI.s 			page 13


 524              	.LFB67:
  71:./Src/pid.c   ****   uint32_t m_S;
 525              		.loc 1 71 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL54:
 530 0000 70B5     		push	{r4, r5, r6, lr}
 531              	.LCFI6:
 532              		.cfi_def_cfa_offset 16
 533              		.cfi_offset 4, -16
 534              		.cfi_offset 5, -12
 535              		.cfi_offset 6, -8
 536              		.cfi_offset 14, -4
 537 0002 0446     		mov	r4, r0
  74:./Src/pid.c   ****   if((m_S - pid_R_.mS)>=200){
 538              		.loc 1 74 0
 539 0004 FFF7FEFF 		bl	HAL_GetTick
 540              	.LVL55:
  75:./Src/pid.c   ****     pid_R_.mS = HAL_GetTick(); 
 541              		.loc 1 75 0
 542 0008 094B     		ldr	r3, .L37
 543 000a 1B68     		ldr	r3, [r3]
 544 000c C01A     		subs	r0, r0, r3
 545              	.LVL56:
 546 000e C728     		cmp	r0, #199
 547 0010 0CD9     		bls	.L34
  76:./Src/pid.c   ****     
 548              		.loc 1 76 0
 549 0012 FFF7FEFF 		bl	HAL_GetTick
 550              	.LVL57:
 551 0016 064E     		ldr	r6, .L37
 552 0018 3060     		str	r0, [r6]
  79:./Src/pid.c   ****     testVelR = 0;
 553              		.loc 1 79 0
 554 001a 064D     		ldr	r5, .L37+4
 555 001c 2968     		ldr	r1, [r5]
 556 001e 2046     		mov	r0, r4
 557 0020 054A     		ldr	r2, .L37+8
 558 0022 FFF7FEFF 		bl	pid_update_I32
 559              	.LVL58:
 560 0026 7060     		str	r0, [r6, #4]
  80:./Src/pid.c   ****     
 561              		.loc 1 80 0
 562 0028 0023     		movs	r3, #0
 563 002a 2B60     		str	r3, [r5]
 564              	.L34:
 565 002c 70BD     		pop	{r4, r5, r6, pc}
 566              	.LVL59:
 567              	.L38:
 568 002e 00BF     		.align	2
 569              	.L37:
 570 0030 00000000 		.word	pid_R_
 571 0034 00000000 		.word	testVelR
 572 0038 00000000 		.word	pid_R_Dati
 573              		.cfi_endproc
 574              	.LFE67:
ARM GAS  /tmp/cc9X6SxI.s 			page 14


 576              		.comm	pid_R_Dati,28,4
 577              		.comm	pid_L_Dati,28,4
 578              		.comm	pid_R_,8,4
 579              		.comm	pid_L_,8,4
 580              		.comm	Tim3PID,60,4
 581              		.text
 582              	.Letext0:
 583              		.file 2 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 584              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 585              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 586              		.file 5 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 587              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 588              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 589              		.file 8 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 590              		.file 9 "./Inc/pid.h"
 591              		.file 10 "./Drivers/CMSIS/Include/core_cm3.h"
 592              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 593              		.file 12 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc9X6SxI.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pid.c
     /tmp/cc9X6SxI.s:19     .text.PID_init:0000000000000000 $t
     /tmp/cc9X6SxI.s:24     .text.PID_init:0000000000000000 PID_init
     /tmp/cc9X6SxI.s:147    .text.PID_init:000000000000009c $d
                            *COM*:000000000000003c Tim3PID
                            *COM*:000000000000001c pid_L_Dati
                            *COM*:000000000000001c pid_R_Dati
                            *COM*:0000000000000008 pid_L_
                            *COM*:0000000000000008 pid_R_
     /tmp/cc9X6SxI.s:158    .text.PID_set_L_costant:0000000000000000 $t
     /tmp/cc9X6SxI.s:163    .text.PID_set_L_costant:0000000000000000 PID_set_L_costant
     /tmp/cc9X6SxI.s:182    .text.PID_set_L_costant:000000000000000c $d
     /tmp/cc9X6SxI.s:187    .text.PID_set_R_costant:0000000000000000 $t
     /tmp/cc9X6SxI.s:192    .text.PID_set_R_costant:0000000000000000 PID_set_R_costant
     /tmp/cc9X6SxI.s:211    .text.PID_set_R_costant:000000000000000c $d
     /tmp/cc9X6SxI.s:221    .text.pid_update_f:0000000000000000 $t
     /tmp/cc9X6SxI.s:226    .text.pid_update_f:0000000000000000 pid_update_f
     /tmp/cc9X6SxI.s:337    .text.pid_update_I32:0000000000000000 $t
     /tmp/cc9X6SxI.s:342    .text.pid_update_I32:0000000000000000 pid_update_I32
     /tmp/cc9X6SxI.s:458    .text.pid_update_I32:000000000000009c $d
     /tmp/cc9X6SxI.s:463    .text.PID_L_task:0000000000000000 $t
     /tmp/cc9X6SxI.s:468    .text.PID_L_task:0000000000000000 PID_L_task
     /tmp/cc9X6SxI.s:512    .text.PID_L_task:000000000000002c $d
     /tmp/cc9X6SxI.s:518    .text.PID_R_task:0000000000000000 $t
     /tmp/cc9X6SxI.s:523    .text.PID_R_task:0000000000000000 PID_R_task
     /tmp/cc9X6SxI.s:570    .text.PID_R_task:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
Error_Handler
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start_IT
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GetTick
__aeabi_fsub
__aeabi_fadd
__aeabi_fmul
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_i2f
__aeabi_f2iz
testVelR
