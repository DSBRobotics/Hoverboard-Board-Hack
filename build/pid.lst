ARM GAS  /tmp/ccCkOYKZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"pid.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PID_init,"ax",%progbits
  20              		.align	2
  21              		.global	PID_init
  22              		.thumb
  23              		.thumb_func
  25              	PID_init:
  26              	.LFB64:
  27              		.file 1 "./Src/pid.c"
   1:./Src/pid.c   **** #include "pid.h"
   2:./Src/pid.c   **** 
   3:./Src/pid.c   **** TIM_HandleTypeDef Tim3PID;
   4:./Src/pid.c   **** 
   5:./Src/pid.c   **** struct PID_dati pid_L_,pid_R_;
   6:./Src/pid.c   **** struct pid_I32_t pid_L_Dati,pid_R_Dati;
   7:./Src/pid.c   **** 
   8:./Src/pid.c   **** #define PID_PERIOD 5    //Hz
   9:./Src/pid.c   **** 
  10:./Src/pid.c   **** void PID_init(uint16_t min, uint16_t max)
  11:./Src/pid.c   **** {
  28              		.loc 1 11 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 88B0     		sub	sp, sp, #32
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 48
  43 0004 0646     		mov	r6, r0
  44 0006 0D46     		mov	r5, r1
  45              	.LBB2:
  12:./Src/pid.c   ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  13:./Src/pid.c   ****   TIM_MasterConfigTypeDef sMasterConfig;
ARM GAS  /tmp/ccCkOYKZ.s 			page 2


  14:./Src/pid.c   ****     
  15:./Src/pid.c   ****   __HAL_RCC_TIM3_CLK_ENABLE();
  46              		.loc 1 15 0
  47 0008 244B     		ldr	r3, .L5
  48 000a DA69     		ldr	r2, [r3, #28]
  49 000c 42F00202 		orr	r2, r2, #2
  50 0010 DA61     		str	r2, [r3, #28]
  51 0012 DB69     		ldr	r3, [r3, #28]
  52 0014 03F00203 		and	r3, r3, #2
  53 0018 0193     		str	r3, [sp, #4]
  54 001a 019B     		ldr	r3, [sp, #4]
  55              	.LBE2:
  16:./Src/pid.c   ****   Tim3PID.Instance = TIM3;
  56              		.loc 1 16 0
  57 001c 204C     		ldr	r4, .L5+4
  58 001e 214B     		ldr	r3, .L5+8
  59 0020 2360     		str	r3, [r4]
  17:./Src/pid.c   ****   Tim3PID.Init.Period = 64500;                
  60              		.loc 1 17 0
  61 0022 4FF6F433 		movw	r3, #64500
  62 0026 E360     		str	r3, [r4, #12]
  18:./Src/pid.c   ****   Tim3PID.Init.Prescaler = 198;
  63              		.loc 1 18 0
  64 0028 C623     		movs	r3, #198
  65 002a 6360     		str	r3, [r4, #4]
  19:./Src/pid.c   ****   Tim3PID.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
  66              		.loc 1 19 0
  67 002c 4FF40073 		mov	r3, #512
  68 0030 2361     		str	r3, [r4, #16]
  20:./Src/pid.c   ****   Tim3PID.Init.CounterMode = TIM_COUNTERMODE_UP;        
  69              		.loc 1 20 0
  70 0032 0023     		movs	r3, #0
  71 0034 A360     		str	r3, [r4, #8]
  21:./Src/pid.c   ****   HAL_TIM_Base_Init(&Tim3PID);
  72              		.loc 1 21 0
  73 0036 2046     		mov	r0, r4
  74              	.LVL1:
  75 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
  76              	.LVL2:
  22:./Src/pid.c   **** 
  23:./Src/pid.c   ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  77              		.loc 1 23 0
  78 003c 08A9     		add	r1, sp, #32
  79 003e 4FF48053 		mov	r3, #4096
  80 0042 41F8103D 		str	r3, [r1, #-16]!
  24:./Src/pid.c   ****   if (HAL_TIM_ConfigClockSource(&Tim3PID, &sClockSourceConfig) != HAL_OK)
  81              		.loc 1 24 0
  82 0046 2046     		mov	r0, r4
  83 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  84              	.LVL3:
  85 004c 08B1     		cbz	r0, .L2
  25:./Src/pid.c   ****   {
  26:./Src/pid.c   ****     Error_Handler();
  86              		.loc 1 26 0
  87 004e FFF7FEFF 		bl	Error_Handler
  88              	.LVL4:
  89              	.L2:
ARM GAS  /tmp/ccCkOYKZ.s 			page 3


  27:./Src/pid.c   ****   }
  28:./Src/pid.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  90              		.loc 1 28 0
  91 0052 0023     		movs	r3, #0
  92 0054 0293     		str	r3, [sp, #8]
  29:./Src/pid.c   ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  93              		.loc 1 29 0
  94 0056 0393     		str	r3, [sp, #12]
  30:./Src/pid.c   ****   if (HAL_TIMEx_MasterConfigSynchronization(&Tim3PID, &sMasterConfig) != HAL_OK)
  95              		.loc 1 30 0
  96 0058 02A9     		add	r1, sp, #8
  97 005a 1148     		ldr	r0, .L5+4
  98 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  99              	.LVL5:
 100 0060 08B1     		cbz	r0, .L3
  31:./Src/pid.c   ****   {
  32:./Src/pid.c   ****     Error_Handler();
 101              		.loc 1 32 0
 102 0062 FFF7FEFF 		bl	Error_Handler
 103              	.LVL6:
 104              	.L3:
  33:./Src/pid.c   ****   }
  34:./Src/pid.c   ****   HAL_TIM_Base_Start_IT(&Tim3PID);
 105              		.loc 1 34 0
 106 0066 0E48     		ldr	r0, .L5+4
 107 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 108              	.LVL7:
  35:./Src/pid.c   ****   HAL_NVIC_SetPriority(TIM3_IRQn, 3, 4);
 109              		.loc 1 35 0
 110 006c 0422     		movs	r2, #4
 111 006e 0321     		movs	r1, #3
 112 0070 1D20     		movs	r0, #29
 113 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 114              	.LVL8:
  36:./Src/pid.c   ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);  
 115              		.loc 1 36 0
 116 0076 1D20     		movs	r0, #29
 117 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 118              	.LVL9:
  37:./Src/pid.c   ****  
  38:./Src/pid.c   ****   pid_L_Dati.min = min;
 119              		.loc 1 38 0
 120 007c 0A4B     		ldr	r3, .L5+12
 121 007e 5E60     		str	r6, [r3, #4]
  39:./Src/pid.c   ****   pid_L_Dati.max = max;
 122              		.loc 1 39 0
 123 0080 1D60     		str	r5, [r3]
  40:./Src/pid.c   ****   pid_R_Dati.min = min;
 124              		.loc 1 40 0
 125 0082 0A4B     		ldr	r3, .L5+16
 126 0084 5E60     		str	r6, [r3, #4]
  41:./Src/pid.c   ****   pid_R_Dati.max = max;
 127              		.loc 1 41 0
 128 0086 1D60     		str	r5, [r3]
  42:./Src/pid.c   **** 
  43:./Src/pid.c   ****   pid_L_.mS = HAL_GetTick();
 129              		.loc 1 43 0
ARM GAS  /tmp/ccCkOYKZ.s 			page 4


 130 0088 FFF7FEFF 		bl	HAL_GetTick
 131              	.LVL10:
 132 008c 084B     		ldr	r3, .L5+20
 133 008e 1860     		str	r0, [r3]
  44:./Src/pid.c   ****   pid_R_.mS = HAL_GetTick();
 134              		.loc 1 44 0
 135 0090 FFF7FEFF 		bl	HAL_GetTick
 136              	.LVL11:
 137 0094 074B     		ldr	r3, .L5+24
 138 0096 1860     		str	r0, [r3]
  45:./Src/pid.c   **** }
 139              		.loc 1 45 0
 140 0098 08B0     		add	sp, sp, #32
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 16
 143              		@ sp needed
 144 009a 70BD     		pop	{r4, r5, r6, pc}
 145              	.L6:
 146              		.align	2
 147              	.L5:
 148 009c 00100240 		.word	1073876992
 149 00a0 00000000 		.word	Tim3PID
 150 00a4 00040040 		.word	1073742848
 151 00a8 00000000 		.word	pid_L_Dati
 152 00ac 00000000 		.word	pid_R_Dati
 153 00b0 00000000 		.word	pid_L_
 154 00b4 00000000 		.word	pid_R_
 155              		.cfi_endproc
 156              	.LFE64:
 158              		.section	.text.PID_set_L_costant,"ax",%progbits
 159              		.align	2
 160              		.global	PID_set_L_costant
 161              		.thumb
 162              		.thumb_func
 164              	PID_set_L_costant:
 165              	.LFB65:
  46:./Src/pid.c   **** 
  47:./Src/pid.c   **** void PID_set_L_costant(float P,float I,float D){
 166              		.loc 1 47 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL12:
  48:./Src/pid.c   ****   pid_L_Dati.kp = P;
 172              		.loc 1 48 0
 173 0000 024B     		ldr	r3, .L8
 174 0002 1861     		str	r0, [r3, #16]	@ float
  49:./Src/pid.c   ****   pid_L_Dati.ki = I;
 175              		.loc 1 49 0
 176 0004 5961     		str	r1, [r3, #20]	@ float
  50:./Src/pid.c   ****   pid_L_Dati.kd = D;
 177              		.loc 1 50 0
 178 0006 9A61     		str	r2, [r3, #24]	@ float
 179 0008 7047     		bx	lr
 180              	.L9:
 181 000a 00BF     		.align	2
ARM GAS  /tmp/ccCkOYKZ.s 			page 5


 182              	.L8:
 183 000c 00000000 		.word	pid_L_Dati
 184              		.cfi_endproc
 185              	.LFE65:
 187              		.section	.text.PID_set_R_costant,"ax",%progbits
 188              		.align	2
 189              		.global	PID_set_R_costant
 190              		.thumb
 191              		.thumb_func
 193              	PID_set_R_costant:
 194              	.LFB66:
  51:./Src/pid.c   **** }
  52:./Src/pid.c   **** void PID_set_R_costant(float P,float I,float D){
 195              		.loc 1 52 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL13:
  53:./Src/pid.c   ****   pid_R_Dati.kp = P;
 201              		.loc 1 53 0
 202 0000 024B     		ldr	r3, .L11
 203 0002 1861     		str	r0, [r3, #16]	@ float
  54:./Src/pid.c   ****   pid_R_Dati.ki = I;
 204              		.loc 1 54 0
 205 0004 5961     		str	r1, [r3, #20]	@ float
  55:./Src/pid.c   ****   pid_R_Dati.kd = D;
 206              		.loc 1 55 0
 207 0006 9A61     		str	r2, [r3, #24]	@ float
 208 0008 7047     		bx	lr
 209              	.L12:
 210 000a 00BF     		.align	2
 211              	.L11:
 212 000c 00000000 		.word	pid_R_Dati
 213              		.cfi_endproc
 214              	.LFE66:
 216              		.global	__aeabi_fsub
 217              		.global	__aeabi_fadd
 218              		.global	__aeabi_fmul
 219              		.global	__aeabi_fcmplt
 220              		.global	__aeabi_fcmpgt
 221              		.section	.text.pid_update_f,"ax",%progbits
 222              		.align	2
 223              		.global	pid_update_f
 224              		.thumb
 225              		.thumb_func
 227              	pid_update_f:
 228              	.LFB69:
  56:./Src/pid.c   **** }
  57:./Src/pid.c   **** void PID_L_task(int32_t set_speed, int32_t speed){
  58:./Src/pid.c   ****   uint32_t m_S;
  59:./Src/pid.c   ****   
  60:./Src/pid.c   ****   m_S = HAL_GetTick();
  61:./Src/pid.c   ****   if((m_S - pid_L_.mS)>=200){
  62:./Src/pid.c   ****     pid_L_.mS = HAL_GetTick(); 
  63:./Src/pid.c   ****     
  64:./Src/pid.c   ****      //Calculate the new duty cycle
ARM GAS  /tmp/ccCkOYKZ.s 			page 6


  65:./Src/pid.c   ****     pid_L_.duty = pid_update_I32(set_speed, speed, &pid_L_Dati);
  66:./Src/pid.c   ****     
  67:./Src/pid.c   ****   }  
  68:./Src/pid.c   **** }
  69:./Src/pid.c   **** 
  70:./Src/pid.c   **** extern volatile __IO int32_t testVelR;
  71:./Src/pid.c   **** void PID_R_task(int32_t set_speed, int32_t speed){
  72:./Src/pid.c   ****   uint32_t m_S;
  73:./Src/pid.c   ****   
  74:./Src/pid.c   ****   m_S = HAL_GetTick();
  75:./Src/pid.c   ****   if((m_S - pid_R_.mS)>=200){
  76:./Src/pid.c   ****     pid_R_.mS = HAL_GetTick(); 
  77:./Src/pid.c   ****     
  78:./Src/pid.c   ****      //Calculate the new duty cycle
  79:./Src/pid.c   ****     pid_R_.duty = pid_update_I32(set_speed, testVelR, &pid_R_Dati);
  80:./Src/pid.c   ****     testVelR = 0;
  81:./Src/pid.c   ****     
  82:./Src/pid.c   ****   }  
  83:./Src/pid.c   **** }
  84:./Src/pid.c   **** 
  85:./Src/pid.c   **** 
  86:./Src/pid.c   **** 
  87:./Src/pid.c   **** 
  88:./Src/pid.c   **** 
  89:./Src/pid.c   **** 
  90:./Src/pid.c   **** 
  91:./Src/pid.c   **** 
  92:./Src/pid.c   **** 
  93:./Src/pid.c   **** 
  94:./Src/pid.c   **** 
  95:./Src/pid.c   **** 
  96:./Src/pid.c   **** 
  97:./Src/pid.c   **** 
  98:./Src/pid.c   **** 
  99:./Src/pid.c   **** //------------------------PRIVATE------------------------
 100:./Src/pid.c   **** 
 101:./Src/pid.c   **** float pid_update_f(float sp /*! The set point */,
 102:./Src/pid.c   ****     float pv /*! The process variable */,
 103:./Src/pid.c   ****     struct pid_f_t * ptr /*! A pointer to the PID constants */){
 229              		.loc 1 103 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL14:
 234 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 32
 237              		.cfi_offset 3, -32
 238              		.cfi_offset 4, -28
 239              		.cfi_offset 5, -24
 240              		.cfi_offset 6, -20
 241              		.cfi_offset 7, -16
 242              		.cfi_offset 8, -12
 243              		.cfi_offset 9, -8
 244              		.cfi_offset 14, -4
 245 0004 1446     		mov	r4, r2
 104:./Src/pid.c   ****       
ARM GAS  /tmp/ccCkOYKZ.s 			page 7


 105:./Src/pid.c   ****   float e;
 106:./Src/pid.c   ****   float manp;
 107:./Src/pid.c   ****   float tmpi;
 108:./Src/pid.c   ****   
 109:./Src/pid.c   ****   //errore
 110:./Src/pid.c   ****   e = ptr->e;
 246              		.loc 1 110 0
 247 0006 D2F80890 		ldr	r9, [r2, #8]	@ float
 248              	.LVL15:
 111:./Src/pid.c   ****   ptr->e = sp - pv;
 249              		.loc 1 111 0
 250 000a FFF7FEFF 		bl	__aeabi_fsub
 251              	.LVL16:
 252 000e 0546     		mov	r5, r0
 253 0010 A060     		str	r0, [r4, #8]	@ float
 112:./Src/pid.c   ****   
 113:./Src/pid.c   ****   //integral
 114:./Src/pid.c   ****   tmpi = ptr->i + ptr->e;
 254              		.loc 1 114 0
 255 0012 E168     		ldr	r1, [r4, #12]	@ float
 256 0014 FFF7FEFF 		bl	__aeabi_fadd
 257              	.LVL17:
 258 0018 0746     		mov	r7, r0
 259              	.LVL18:
 115:./Src/pid.c   ****   
 116:./Src/pid.c   ****   //P*I*D
 117:./Src/pid.c   ****   manp = ptr->kp * ptr->e + ptr->ki * tmpi + ptr->kd * (e - ptr->e);
 260              		.loc 1 117 0
 261 001a 2169     		ldr	r1, [r4, #16]	@ float
 262 001c 2846     		mov	r0, r5
 263              	.LVL19:
 264 001e FFF7FEFF 		bl	__aeabi_fmul
 265              	.LVL20:
 266 0022 0646     		mov	r6, r0
 267 0024 6169     		ldr	r1, [r4, #20]	@ float
 268 0026 3846     		mov	r0, r7
 269 0028 FFF7FEFF 		bl	__aeabi_fmul
 270              	.LVL21:
 271 002c 0146     		mov	r1, r0
 272 002e 3046     		mov	r0, r6
 273 0030 FFF7FEFF 		bl	__aeabi_fadd
 274              	.LVL22:
 275 0034 0646     		mov	r6, r0
 276 0036 D4F81880 		ldr	r8, [r4, #24]	@ float
 277 003a 2946     		mov	r1, r5
 278 003c 4846     		mov	r0, r9
 279 003e FFF7FEFF 		bl	__aeabi_fsub
 280              	.LVL23:
 281 0042 0146     		mov	r1, r0
 282 0044 4046     		mov	r0, r8
 283 0046 FFF7FEFF 		bl	__aeabi_fmul
 284              	.LVL24:
 285 004a 0146     		mov	r1, r0
 286 004c 3046     		mov	r0, r6
 287 004e FFF7FEFF 		bl	__aeabi_fadd
 288              	.LVL25:
 289 0052 0646     		mov	r6, r0
ARM GAS  /tmp/ccCkOYKZ.s 			page 8


 290              	.LVL26:
 118:./Src/pid.c   ****   
 119:./Src/pid.c   ****   //Limit, max;min
 120:./Src/pid.c   ****   if( (manp < ptr->max) && (manp > ptr->min) ){
 291              		.loc 1 120 0
 292 0054 2568     		ldr	r5, [r4]	@ float
 293 0056 2946     		mov	r1, r5
 294 0058 FFF7FEFF 		bl	__aeabi_fcmplt
 295              	.LVL27:
 296 005c 38B1     		cbz	r0, .L14
 297              		.loc 1 120 0 is_stmt 0 discriminator 1
 298 005e 6168     		ldr	r1, [r4, #4]	@ float
 299 0060 3046     		mov	r0, r6
 300 0062 FFF7FEFF 		bl	__aeabi_fcmpgt
 301              	.LVL28:
 302 0066 10B1     		cbz	r0, .L14
 121:./Src/pid.c   ****     ptr->i = tmpi;
 303              		.loc 1 121 0 is_stmt 1
 304 0068 E760     		str	r7, [r4, #12]	@ float
 117:./Src/pid.c   ****   
 305              		.loc 1 117 0
 306 006a 3546     		mov	r5, r6
 307              		.loc 1 121 0
 308 006c 0BE0     		b	.L17
 309              	.L14:
 122:./Src/pid.c   ****   } else if ( manp > ptr->max ){
 310              		.loc 1 122 0
 311 006e 2946     		mov	r1, r5
 312 0070 3046     		mov	r0, r6
 313 0072 FFF7FEFF 		bl	__aeabi_fcmpgt
 314              	.LVL29:
 315 0076 30B9     		cbnz	r0, .L17
 123:./Src/pid.c   ****     manp = ptr->max;
 124:./Src/pid.c   ****   } else if ( manp < ptr->min ){
 316              		.loc 1 124 0
 317 0078 6568     		ldr	r5, [r4, #4]	@ float
 318 007a 2946     		mov	r1, r5
 319 007c 3046     		mov	r0, r6
 320 007e FFF7FEFF 		bl	__aeabi_fcmplt
 321              	.LVL30:
 322 0082 00B9     		cbnz	r0, .L17
 117:./Src/pid.c   ****   
 323              		.loc 1 117 0
 324 0084 3546     		mov	r5, r6
 325              	.L17:
 326              	.LVL31:
 125:./Src/pid.c   ****     manp = ptr->min;
 126:./Src/pid.c   ****   }
 127:./Src/pid.c   ****   return manp;
 128:./Src/pid.c   **** }
 327              		.loc 1 128 0
 328 0086 2846     		mov	r0, r5
 329 0088 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 330              		.cfi_endproc
 331              	.LFE69:
 333              		.global	__aeabi_i2f
 334              		.global	__aeabi_f2iz
ARM GAS  /tmp/ccCkOYKZ.s 			page 9


 335              		.section	.text.pid_update_I32,"ax",%progbits
 336              		.align	2
 337              		.global	pid_update_I32
 338              		.thumb
 339              		.thumb_func
 341              	pid_update_I32:
 342              	.LFB70:
 129:./Src/pid.c   **** 
 130:./Src/pid.c   **** int32_t pid_update_I32(int32_t sp /*! The set point */,
 131:./Src/pid.c   ****     int32_t pv /*! The process variable */,
 132:./Src/pid.c   ****     struct pid_I32_t * ptr /*! A pointer to the PID constants */){
 343              		.loc 1 132 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              	.LVL32:
 348 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 349              	.LCFI4:
 350              		.cfi_def_cfa_offset 32
 351              		.cfi_offset 3, -32
 352              		.cfi_offset 4, -28
 353              		.cfi_offset 5, -24
 354              		.cfi_offset 6, -20
 355              		.cfi_offset 7, -16
 356              		.cfi_offset 8, -12
 357              		.cfi_offset 9, -8
 358              		.cfi_offset 14, -4
 359 0004 1446     		mov	r4, r2
 133:./Src/pid.c   ****       
 134:./Src/pid.c   ****   int32_t e;
 135:./Src/pid.c   ****   float manp;
 136:./Src/pid.c   ****   int32_t tmpi;
 137:./Src/pid.c   ****   int32_t manpI32;
 138:./Src/pid.c   ****   
 139:./Src/pid.c   ****   //errore
 140:./Src/pid.c   ****   e = ptr->e;
 360              		.loc 1 140 0
 361 0006 D2F80890 		ldr	r9, [r2, #8]
 362              	.LVL33:
 141:./Src/pid.c   ****   ptr->e = sp - pv;
 363              		.loc 1 141 0
 364 000a 451A     		subs	r5, r0, r1
 365 000c 9560     		str	r5, [r2, #8]
 142:./Src/pid.c   ****   
 143:./Src/pid.c   ****   //integral
 144:./Src/pid.c   ****   tmpi = ptr->i + ptr->e;
 366              		.loc 1 144 0
 367 000e D368     		ldr	r3, [r2, #12]
 368 0010 EE18     		adds	r6, r5, r3
 369              	.LVL34:
 145:./Src/pid.c   ****   if(ptr->i > 300){
 370              		.loc 1 145 0
 371 0012 B3F5967F 		cmp	r3, #300
 372 0016 02DD     		ble	.L22
 146:./Src/pid.c   ****     ptr->i = 300;
 373              		.loc 1 146 0
 374 0018 4FF49673 		mov	r3, #300
ARM GAS  /tmp/ccCkOYKZ.s 			page 10


 375 001c D360     		str	r3, [r2, #12]
 376              	.L22:
 147:./Src/pid.c   ****   }
 148:./Src/pid.c   ****   if(ptr->i < -300){
 377              		.loc 1 148 0
 378 001e E368     		ldr	r3, [r4, #12]
 379 0020 13F5967F 		cmn	r3, #300
 380 0024 01DA     		bge	.L23
 149:./Src/pid.c   ****     ptr->i = -300;
 381              		.loc 1 149 0
 382 0026 1C4B     		ldr	r3, .L27
 383 0028 E360     		str	r3, [r4, #12]
 384              	.L23:
 150:./Src/pid.c   ****   }
 151:./Src/pid.c   ****   
 152:./Src/pid.c   ****   //P*I*D
 153:./Src/pid.c   ****   manp = (ptr->kp * ptr->e) + (ptr->ki * tmpi) + (ptr->kd * (e - ptr->e));
 385              		.loc 1 153 0
 386 002a 2769     		ldr	r7, [r4, #16]	@ float
 387 002c 2846     		mov	r0, r5
 388              	.LVL35:
 389 002e FFF7FEFF 		bl	__aeabi_i2f
 390              	.LVL36:
 391 0032 3946     		mov	r1, r7
 392 0034 FFF7FEFF 		bl	__aeabi_fmul
 393              	.LVL37:
 394 0038 0746     		mov	r7, r0
 395 003a D4F81480 		ldr	r8, [r4, #20]	@ float
 396 003e 3046     		mov	r0, r6
 397 0040 FFF7FEFF 		bl	__aeabi_i2f
 398              	.LVL38:
 399 0044 4146     		mov	r1, r8
 400 0046 FFF7FEFF 		bl	__aeabi_fmul
 401              	.LVL39:
 402 004a 0146     		mov	r1, r0
 403 004c 3846     		mov	r0, r7
 404 004e FFF7FEFF 		bl	__aeabi_fadd
 405              	.LVL40:
 406 0052 0746     		mov	r7, r0
 407 0054 D4F81880 		ldr	r8, [r4, #24]	@ float
 408 0058 C5EB0900 		rsb	r0, r5, r9
 409 005c FFF7FEFF 		bl	__aeabi_i2f
 410              	.LVL41:
 411 0060 4146     		mov	r1, r8
 412 0062 FFF7FEFF 		bl	__aeabi_fmul
 413              	.LVL42:
 414 0066 0146     		mov	r1, r0
 415 0068 3846     		mov	r0, r7
 416 006a FFF7FEFF 		bl	__aeabi_fadd
 417              	.LVL43:
 154:./Src/pid.c   ****   manpI32 = (int32_t)manp;
 418              		.loc 1 154 0
 419 006e FFF7FEFF 		bl	__aeabi_f2iz
 420              	.LVL44:
 155:./Src/pid.c   ****   
 156:./Src/pid.c   ****   //Limit, max;min
 157:./Src/pid.c   ****   if( (manpI32 < ptr->max) && (manpI32 > ptr->min) ){
ARM GAS  /tmp/ccCkOYKZ.s 			page 11


 421              		.loc 1 157 0
 422 0072 2368     		ldr	r3, [r4]
 423 0074 9842     		cmp	r0, r3
 424 0076 05DA     		bge	.L24
 425              		.loc 1 157 0 is_stmt 0 discriminator 1
 426 0078 6268     		ldr	r2, [r4, #4]
 427 007a 9042     		cmp	r0, r2
 428 007c 02DD     		ble	.L24
 158:./Src/pid.c   ****     ptr->i = tmpi;
 429              		.loc 1 158 0 is_stmt 1
 430 007e E660     		str	r6, [r4, #12]
 154:./Src/pid.c   ****   manpI32 = (int32_t)manp;
 431              		.loc 1 154 0
 432 0080 0346     		mov	r3, r0
 433              		.loc 1 158 0
 434 0082 05E0     		b	.L25
 435              	.L24:
 159:./Src/pid.c   ****   } else if ( manpI32 > ptr->max ){
 436              		.loc 1 159 0
 437 0084 9842     		cmp	r0, r3
 438 0086 03DC     		bgt	.L25
 160:./Src/pid.c   ****     manpI32 = ptr->max;
 161:./Src/pid.c   ****   } else if ( manpI32 < ptr->min ){
 439              		.loc 1 161 0
 440 0088 6368     		ldr	r3, [r4, #4]
 441 008a 9842     		cmp	r0, r3
 442 008c 00DB     		blt	.L25
 154:./Src/pid.c   ****   
 443              		.loc 1 154 0
 444 008e 0346     		mov	r3, r0
 445              	.L25:
 446              	.LVL45:
 162:./Src/pid.c   ****     manpI32 = ptr->min;
 163:./Src/pid.c   ****   }
 164:./Src/pid.c   ****   return manpI32;
 165:./Src/pid.c   **** }
 447              		.loc 1 165 0
 448 0090 1846     		mov	r0, r3
 449 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 450              	.LVL46:
 451              	.L28:
 452 0096 00BF     		.align	2
 453              	.L27:
 454 0098 D4FEFFFF 		.word	-300
 455              		.cfi_endproc
 456              	.LFE70:
 458              		.section	.text.PID_L_task,"ax",%progbits
 459              		.align	2
 460              		.global	PID_L_task
 461              		.thumb
 462              		.thumb_func
 464              	PID_L_task:
 465              	.LFB67:
  57:./Src/pid.c   ****   uint32_t m_S;
 466              		.loc 1 57 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccCkOYKZ.s 			page 12


 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL47:
 471 0000 70B5     		push	{r4, r5, r6, lr}
 472              	.LCFI5:
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 6, -8
 477              		.cfi_offset 14, -4
 478 0002 0446     		mov	r4, r0
 479 0004 0D46     		mov	r5, r1
  60:./Src/pid.c   ****   if((m_S - pid_L_.mS)>=200){
 480              		.loc 1 60 0
 481 0006 FFF7FEFF 		bl	HAL_GetTick
 482              	.LVL48:
  61:./Src/pid.c   ****     pid_L_.mS = HAL_GetTick(); 
 483              		.loc 1 61 0
 484 000a 084B     		ldr	r3, .L32
 485 000c 1B68     		ldr	r3, [r3]
 486 000e C01A     		subs	r0, r0, r3
 487              	.LVL49:
 488 0010 C728     		cmp	r0, #199
 489 0012 09D9     		bls	.L29
  62:./Src/pid.c   ****     
 490              		.loc 1 62 0
 491 0014 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL50:
 493 0018 044E     		ldr	r6, .L32
 494 001a 3060     		str	r0, [r6]
  65:./Src/pid.c   ****     
 495              		.loc 1 65 0
 496 001c 044A     		ldr	r2, .L32+4
 497 001e 2946     		mov	r1, r5
 498 0020 2046     		mov	r0, r4
 499 0022 FFF7FEFF 		bl	pid_update_I32
 500              	.LVL51:
 501 0026 7060     		str	r0, [r6, #4]
 502              	.L29:
 503 0028 70BD     		pop	{r4, r5, r6, pc}
 504              	.LVL52:
 505              	.L33:
 506 002a 00BF     		.align	2
 507              	.L32:
 508 002c 00000000 		.word	pid_L_
 509 0030 00000000 		.word	pid_L_Dati
 510              		.cfi_endproc
 511              	.LFE67:
 513              		.section	.text.PID_R_task,"ax",%progbits
 514              		.align	2
 515              		.global	PID_R_task
 516              		.thumb
 517              		.thumb_func
 519              	PID_R_task:
 520              	.LFB68:
  71:./Src/pid.c   ****   uint32_t m_S;
 521              		.loc 1 71 0
 522              		.cfi_startproc
ARM GAS  /tmp/ccCkOYKZ.s 			page 13


 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL53:
 526 0000 70B5     		push	{r4, r5, r6, lr}
 527              	.LCFI6:
 528              		.cfi_def_cfa_offset 16
 529              		.cfi_offset 4, -16
 530              		.cfi_offset 5, -12
 531              		.cfi_offset 6, -8
 532              		.cfi_offset 14, -4
 533 0002 0446     		mov	r4, r0
  74:./Src/pid.c   ****   if((m_S - pid_R_.mS)>=200){
 534              		.loc 1 74 0
 535 0004 FFF7FEFF 		bl	HAL_GetTick
 536              	.LVL54:
  75:./Src/pid.c   ****     pid_R_.mS = HAL_GetTick(); 
 537              		.loc 1 75 0
 538 0008 094B     		ldr	r3, .L37
 539 000a 1B68     		ldr	r3, [r3]
 540 000c C01A     		subs	r0, r0, r3
 541              	.LVL55:
 542 000e C728     		cmp	r0, #199
 543 0010 0CD9     		bls	.L34
  76:./Src/pid.c   ****     
 544              		.loc 1 76 0
 545 0012 FFF7FEFF 		bl	HAL_GetTick
 546              	.LVL56:
 547 0016 064E     		ldr	r6, .L37
 548 0018 3060     		str	r0, [r6]
  79:./Src/pid.c   ****     testVelR = 0;
 549              		.loc 1 79 0
 550 001a 064D     		ldr	r5, .L37+4
 551 001c 2968     		ldr	r1, [r5]
 552 001e 064A     		ldr	r2, .L37+8
 553 0020 2046     		mov	r0, r4
 554 0022 FFF7FEFF 		bl	pid_update_I32
 555              	.LVL57:
 556 0026 7060     		str	r0, [r6, #4]
  80:./Src/pid.c   ****     
 557              		.loc 1 80 0
 558 0028 0023     		movs	r3, #0
 559 002a 2B60     		str	r3, [r5]
 560              	.L34:
 561 002c 70BD     		pop	{r4, r5, r6, pc}
 562              	.LVL58:
 563              	.L38:
 564 002e 00BF     		.align	2
 565              	.L37:
 566 0030 00000000 		.word	pid_R_
 567 0034 00000000 		.word	testVelR
 568 0038 00000000 		.word	pid_R_Dati
 569              		.cfi_endproc
 570              	.LFE68:
 572              		.comm	pid_R_Dati,28,4
 573              		.comm	pid_L_Dati,28,4
 574              		.comm	pid_R_,8,4
 575              		.comm	pid_L_,8,4
ARM GAS  /tmp/ccCkOYKZ.s 			page 14


 576              		.comm	Tim3PID,60,4
 577              		.text
 578              	.Letext0:
 579              		.file 2 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 580              		.file 3 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 581              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 582              		.file 5 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 583              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 584              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 585              		.file 8 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 586              		.file 9 "./Inc/pid.h"
 587              		.file 10 "./Drivers/CMSIS/Include/core_cm3.h"
 588              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 589              		.file 12 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccCkOYKZ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 pid.c
     /tmp/ccCkOYKZ.s:20     .text.PID_init:00000000 $t
     /tmp/ccCkOYKZ.s:25     .text.PID_init:00000000 PID_init
     /tmp/ccCkOYKZ.s:148    .text.PID_init:0000009c $d
                            *COM*:0000003c Tim3PID
                            *COM*:0000001c pid_L_Dati
                            *COM*:0000001c pid_R_Dati
                            *COM*:00000008 pid_L_
                            *COM*:00000008 pid_R_
     /tmp/ccCkOYKZ.s:159    .text.PID_set_L_costant:00000000 $t
     /tmp/ccCkOYKZ.s:164    .text.PID_set_L_costant:00000000 PID_set_L_costant
     /tmp/ccCkOYKZ.s:183    .text.PID_set_L_costant:0000000c $d
     /tmp/ccCkOYKZ.s:188    .text.PID_set_R_costant:00000000 $t
     /tmp/ccCkOYKZ.s:193    .text.PID_set_R_costant:00000000 PID_set_R_costant
     /tmp/ccCkOYKZ.s:212    .text.PID_set_R_costant:0000000c $d
     /tmp/ccCkOYKZ.s:222    .text.pid_update_f:00000000 $t
     /tmp/ccCkOYKZ.s:227    .text.pid_update_f:00000000 pid_update_f
     /tmp/ccCkOYKZ.s:336    .text.pid_update_I32:00000000 $t
     /tmp/ccCkOYKZ.s:341    .text.pid_update_I32:00000000 pid_update_I32
     /tmp/ccCkOYKZ.s:454    .text.pid_update_I32:00000098 $d
     /tmp/ccCkOYKZ.s:459    .text.PID_L_task:00000000 $t
     /tmp/ccCkOYKZ.s:464    .text.PID_L_task:00000000 PID_L_task
     /tmp/ccCkOYKZ.s:508    .text.PID_L_task:0000002c $d
     /tmp/ccCkOYKZ.s:514    .text.PID_R_task:00000000 $t
     /tmp/ccCkOYKZ.s:519    .text.PID_R_task:00000000 PID_R_task
     /tmp/ccCkOYKZ.s:566    .text.PID_R_task:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
Error_Handler
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start_IT
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GetTick
__aeabi_fsub
__aeabi_fadd
__aeabi_fmul
__aeabi_fcmplt
__aeabi_fcmpgt
__aeabi_i2f
__aeabi_f2iz
testVelR
