ARM GAS  /tmp/ccFOILL8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Transmit_IT,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	UART_Transmit_IT:
  24              	.LFB98:
  25              		.file 1 "./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @version V1.0.4
   6:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @date    29-April-2016
   7:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  12:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions 
  13:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  15:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  17:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  18:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  19:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  20:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
  21:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  22:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  23:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  24:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  25:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  26:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  27:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (+++) Configure the USART pins (TX as alternate function pull-up, RX as alternate func
  28:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  29:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  30:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  31:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  32:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  33:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  /tmp/ccFOILL8.s 			page 2


  34:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  35:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  36:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  37:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  38:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  39:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  40:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  41:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  42:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  43:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  44:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  46:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  47:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  49:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  50:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  52:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  53:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  54:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  55:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  57:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  58:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  59:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  60:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  61:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  62:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  63:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  64:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  65:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  66:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  67:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customed 
  68:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  69:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  71:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver :
  72:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  73:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  74:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  75:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]    
  76:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  77:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  78:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        
  79:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  80:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  81:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  82:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  83:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  84:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  85:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  86:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  88:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  90:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 3


  91:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
  92:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
  93:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  94:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       
 126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccFOILL8.s 			page 4


 148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** ===============================================================================
 203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================  
ARM GAS  /tmp/ccFOILL8.s 			page 5


 205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /*
 227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       in the data register is transmitted but is changed by the parity bit.
 229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       Depending on the frame length defined by the M bit (8-bits or 9-bits),
 230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       the possible UART frame formats are as listed in the following table:
 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
 243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccFOILL8.s 			page 6


 262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccFOILL8.s 			page 7


 319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance */
 322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccFOILL8.s 			page 8


 376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;  
 392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: UART node address
ARM GAS  /tmp/ccFOILL8.s 			page 9


 433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the UART wakeup method.
 434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wakeup by an idle line detection
 436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wakeup by an address mark
 437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccFOILL8.s 			page 10


 490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the Peripheral */
 515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR1 = 0x0;
 518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_RESET;
 526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit can be implemented in the user file
 545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
 546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  /tmp/ccFOILL8.s 			page 11


 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit can be implemented in the user file
 560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
 561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
 574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
ARM GAS  /tmp/ccFOILL8.s 			page 12


 604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..] 
 616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       
 620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0))
 642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
ARM GAS  /tmp/ccFOILL8.s 			page 13


 661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2;
 676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         { 
 679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1;
 680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
 682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)
 693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 14


 718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t  tmp_state = 0;
 731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
 746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2;
 772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
ARM GAS  /tmp/ccFOILL8.s 			page 15


 775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1;
 777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/ccFOILL8.s 			page 16


 832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /tmp/ccFOILL8.s 			page 17


 889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
 900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
 931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccFOILL8.s 			page 18


 946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX)
 959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
 963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
1000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
ARM GAS  /tmp/ccFOILL8.s 			page 19


1003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
1004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain 
1005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the parity bit (MSB position)     
1006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
1011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
1012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
1015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
1017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
1019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
1023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
1026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX)
1030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
1032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
1036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
1045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
1048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
1050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccFOILL8.s 			page 20


1060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
1078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
1083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (huart->State == HAL_UART_STATE_BUSY_TX_RX)
1088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx & Rx requests */
1090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
1091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR; 
1098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 21


1117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
1118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
1123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_TX_RX)
1130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resumming the Rx transfer*/
1132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx & Rx request */
1134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
1135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR; 
1142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Tx/Rx DMA requests */
1165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_DMAT | USART_CR3_DMAR));
1166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Abort the UART DMA tx channel */
1168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmatx);
1171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Abort the UART DMA rx channel */
1173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
ARM GAS  /tmp/ccFOILL8.s 			page 22


1174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmarx);
1176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_flag = 0, tmp_it_source = 0;
1192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
1194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
1195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART parity error interrupt occurred ------------------------------------*/
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_PE;
1199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_FE);
1202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
1203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART frame error interrupt occurred -------------------------------------*/
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_FE;
1207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_NE);
1210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART noise error interrupt occurred -------------------------------------*/
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_NE;
1214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_ORE);
1217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART Over-Run interrupt occurred ----------------------------------------*/
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_ORE;
1221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);
1224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
1225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
1228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Receive_IT(huart);
1229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/ccFOILL8.s 			page 23


1231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_TXE);
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
1233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
1237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_TC);
1240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
1241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_flag != RESET) && (tmp_it_source != RESET))
1243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
1246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear all the error flag at once */
1250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_PEFLAG(huart);
1251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
1254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
1256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
1257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback can be implemented in the user file
1271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  /tmp/ccFOILL8.s 			page 24


1288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback can be implemented in the user file
1301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback can be implemented in the user file
1331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
ARM GAS  /tmp/ccFOILL8.s 			page 25


1345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
1372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
1399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
ARM GAS  /tmp/ccFOILL8.s 			page 26


1402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
1426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
1450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (uint32_t)(USART_CR1_TE | USART_CR1_RE), USART_CR1_TE);
1455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccFOILL8.s 			page 27


1459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
1476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, (uint32_t)(USART_CR1_TE | USART_CR1_RE), USART_CR1_RE);
1481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
1483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/ccFOILL8.s 			page 28


1516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->State;
1521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @brief  Return the UART error code
1525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
1527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** * @retval UART Error Code
1528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
1532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Private_Functions   UART Private Functions
1543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART Private functions 
1544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)     
1553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
1556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
1557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0;
1559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */    
1565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
1566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State=HAL_UART_STATE_READY;  //<--- i add this line to solve the 
1567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      HAL_UART_TxCpltCallback(huart);
1568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
1570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
ARM GAS  /tmp/ccFOILL8.s 			page 29


1573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
1578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
1587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
1591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
1596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
1599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
1600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0;
1602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
1604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
1609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
1611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
1615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
1618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
1622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
1629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 30


1630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
1631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
1635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
1636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
1637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)   
1640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0;
1643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0;
1644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
1645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
1646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
1647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
1655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
1656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
1659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0;
1661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Get tick */ 
1663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tickstart = HAL_GetTick();
1664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
1666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(Status == RESET)
1667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) == RESET)
1669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
1672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
1677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
1680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
1682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Process Unlocked */
1684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UNLOCK(huart);
1685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccFOILL8.s 			page 31


1687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) != RESET)
1694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
1697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
1702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
1705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
1707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Process Unlocked */
1709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UNLOCK(huart);
1710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
1712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  26              		.loc 1 1726 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
1727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
1728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
1729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State;
  32              		.loc 1 1730 0
  33 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  34 0004 DBB2     		uxtb	r3, r3
  35              	.LVL1:
1731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_BUSY_TX) || (tmp_state == HAL_UART_STATE_BUSY_TX_RX))
  36              		.loc 1 1731 0
  37 0006 122B     		cmp	r3, #18
ARM GAS  /tmp/ccFOILL8.s 			page 32


  38 0008 01D0     		beq	.L2
  39              		.loc 1 1731 0 is_stmt 0 discriminator 1
  40 000a 322B     		cmp	r3, #50
  41 000c 2AD1     		bne	.L7
  42              	.L2:
1732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  43              		.loc 1 1733 0 is_stmt 1
  44 000e 8368     		ldr	r3, [r0, #8]
  45              	.LVL2:
  46 0010 B3F5805F 		cmp	r3, #4096
  47 0014 0FD1     		bne	.L4
1734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
  48              		.loc 1 1735 0
  49 0016 036A     		ldr	r3, [r0, #32]
  50              	.LVL3:
1736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
  51              		.loc 1 1736 0
  52 0018 0268     		ldr	r2, [r0]
  53 001a 1B88     		ldrh	r3, [r3]
  54              	.LVL4:
  55 001c C3F30803 		ubfx	r3, r3, #0, #9
  56 0020 5360     		str	r3, [r2, #4]
  57              	.LVL5:
1737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
  58              		.loc 1 1737 0
  59 0022 0369     		ldr	r3, [r0, #16]
  60 0024 1BB9     		cbnz	r3, .L5
1738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
  61              		.loc 1 1739 0
  62 0026 036A     		ldr	r3, [r0, #32]
  63 0028 0233     		adds	r3, r3, #2
  64 002a 0362     		str	r3, [r0, #32]
  65 002c 09E0     		b	.L6
  66              	.L5:
1740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1;
  67              		.loc 1 1743 0
  68 002e 036A     		ldr	r3, [r0, #32]
  69 0030 0133     		adds	r3, r3, #1
  70 0032 0362     		str	r3, [r0, #32]
  71 0034 05E0     		b	.L6
  72              	.L4:
1744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
1746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
  73              		.loc 1 1748 0
  74 0036 0268     		ldr	r2, [r0]
  75 0038 036A     		ldr	r3, [r0, #32]
  76 003a 591C     		adds	r1, r3, #1
  77 003c 0162     		str	r1, [r0, #32]
ARM GAS  /tmp/ccFOILL8.s 			page 33


  78 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79 0040 5360     		str	r3, [r2, #4]
  80              	.L6:
1749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0)
  81              		.loc 1 1751 0
  82 0042 C38C     		ldrh	r3, [r0, #38]
  83 0044 013B     		subs	r3, r3, #1
  84 0046 9BB2     		uxth	r3, r3
  85 0048 C384     		strh	r3, [r0, #38]	@ movhi
  86 004a 6BB9     		cbnz	r3, .L8
1752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
1754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
  87              		.loc 1 1754 0
  88 004c 0268     		ldr	r2, [r0]
  89 004e D368     		ldr	r3, [r2, #12]
  90 0050 23F08003 		bic	r3, r3, #128
  91 0054 D360     		str	r3, [r2, #12]
1755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
1757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
  92              		.loc 1 1757 0
  93 0056 0268     		ldr	r2, [r0]
  94 0058 D368     		ldr	r3, [r2, #12]
  95 005a 43F04003 		orr	r3, r3, #64
  96 005e D360     		str	r3, [r2, #12]
1758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
  97              		.loc 1 1759 0
  98 0060 0020     		movs	r0, #0
  99              	.LVL6:
 100 0062 7047     		bx	lr
 101              	.LVL7:
 102              	.L7:
1760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 103              		.loc 1 1763 0
 104 0064 0220     		movs	r0, #2
 105              	.LVL8:
 106 0066 7047     		bx	lr
 107              	.LVL9:
 108              	.L8:
1759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 109              		.loc 1 1759 0
 110 0068 0020     		movs	r0, #0
 111              	.LVL10:
1764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 112              		.loc 1 1765 0
 113 006a 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE98:
 117              		.section	.text.UART_SetConfig,"ax",%progbits
ARM GAS  /tmp/ccFOILL8.s 			page 34


 118              		.align	2
 119              		.thumb
 120              		.thumb_func
 122              	UART_SetConfig:
 123              	.LFB101:
1766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
1770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
1777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
1778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if a receive process is ongoing or not */
1780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
1781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_BUSY_RX;
1783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
1787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
1790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
1796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
1803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
1804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_state = huart->State; 
1806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_BUSY_RX) || (tmp_state == HAL_UART_STATE_BUSY_TX_RX))
1807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
1809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
1811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
1812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
1815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  /tmp/ccFOILL8.s 			page 35


1818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
1819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
1820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
1825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
1835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
1837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if a transmit process is ongoing or not */
1839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
1840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->State = HAL_UART_STATE_BUSY_TX;
1842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt */
1846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
1847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
1850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->State = HAL_UART_STATE_READY;
1852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
1854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
1856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY; 
1862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
1867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
1872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 124              		.loc 1 1872 0
 125              		.cfi_startproc
ARM GAS  /tmp/ccFOILL8.s 			page 36


 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL11:
 129 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 130              	.LCFI0:
 131              		.cfi_def_cfa_offset 32
 132              		.cfi_offset 3, -32
 133              		.cfi_offset 4, -28
 134              		.cfi_offset 5, -24
 135              		.cfi_offset 6, -20
 136              		.cfi_offset 7, -16
 137              		.cfi_offset 8, -12
 138              		.cfi_offset 9, -8
 139              		.cfi_offset 14, -4
 140 0004 8146     		mov	r9, r0
 141              	.LVL12:
1873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00;
1874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
1877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
1882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
1883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
1884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 142              		.loc 1 1884 0
 143 0006 0168     		ldr	r1, [r0]
 144 0008 0B69     		ldr	r3, [r1, #16]
 145 000a 23F44052 		bic	r2, r3, #12288
 146 000e C368     		ldr	r3, [r0, #12]
 147 0010 1343     		orrs	r3, r3, r2
 148 0012 0B61     		str	r3, [r1, #16]
1885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
1887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
1888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
1889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
1890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value */
1891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode ;
 149              		.loc 1 1891 0
 150 0014 8268     		ldr	r2, [r0, #8]
 151 0016 0369     		ldr	r3, [r0, #16]
 152 0018 1A43     		orrs	r2, r2, r3
 153 001a 4369     		ldr	r3, [r0, #20]
 154 001c 1343     		orrs	r3, r3, r2
 155              	.LVL13:
1892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 156              		.loc 1 1892 0
 157 001e 0168     		ldr	r1, [r0]
 158 0020 CA68     		ldr	r2, [r1, #12]
 159 0022 22F4B052 		bic	r2, r2, #5632
 160 0026 22F00C02 		bic	r2, r2, #12
 161 002a 1343     		orrs	r3, r3, r2
 162              	.LVL14:
ARM GAS  /tmp/ccFOILL8.s 			page 37


 163 002c CB60     		str	r3, [r1, #12]
 164              	.LVL15:
1893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
1894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
1895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
1897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
1898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 165              		.loc 1 1898 0
 166 002e 0168     		ldr	r1, [r0]
 167 0030 4B69     		ldr	r3, [r1, #20]
 168 0032 23F44072 		bic	r2, r3, #768
 169 0036 8369     		ldr	r3, [r0, #24]
 170 0038 1343     		orrs	r3, r3, r2
 171 003a 4B61     		str	r3, [r1, #20]
1899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : BRR Configuration ------*/
1901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->Instance == USART1))
 172              		.loc 1 1901 0
 173 003c 0568     		ldr	r5, [r0]
 174 003e 5B4B     		ldr	r3, .L13
 175 0040 9D42     		cmp	r5, r3
 176 0042 59D1     		bne	.L10
1902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 177              		.loc 1 1903 0
 178 0044 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 179              	.LVL16:
 180 0048 00EB8000 		add	r0, r0, r0, lsl #2
 181 004c 00EB8000 		add	r0, r0, r0, lsl #2
 182 0050 D9F80440 		ldr	r4, [r9, #4]
 183 0054 A400     		lsls	r4, r4, #2
 184 0056 B0FBF4F4 		udiv	r4, r0, r4
 185 005a 554E     		ldr	r6, .L13+4
 186 005c A6FB0434 		umull	r3, r4, r6, r4
 187 0060 6409     		lsrs	r4, r4, #5
 188 0062 2401     		lsls	r4, r4, #4
 189 0064 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 190              	.LVL17:
 191 0068 00EB8000 		add	r0, r0, r0, lsl #2
 192 006c 00EB8000 		add	r0, r0, r0, lsl #2
 193 0070 D9F80430 		ldr	r3, [r9, #4]
 194 0074 9B00     		lsls	r3, r3, #2
 195 0076 B0FBF3F7 		udiv	r7, r0, r3
 196 007a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 197              	.LVL18:
 198 007e 00EB8000 		add	r0, r0, r0, lsl #2
 199 0082 00EB8000 		add	r0, r0, r0, lsl #2
 200 0086 D9F80430 		ldr	r3, [r9, #4]
 201 008a 9B00     		lsls	r3, r3, #2
 202 008c B0FBF3F3 		udiv	r3, r0, r3
 203 0090 A6FB0323 		umull	r2, r3, r6, r3
 204 0094 5B09     		lsrs	r3, r3, #5
 205 0096 4FF06408 		mov	r8, #100
 206 009a 08FB1373 		mls	r3, r8, r3, r7
 207 009e 1B01     		lsls	r3, r3, #4
 208 00a0 3233     		adds	r3, r3, #50
ARM GAS  /tmp/ccFOILL8.s 			page 38


 209 00a2 A6FB0323 		umull	r2, r3, r6, r3
 210 00a6 5B09     		lsrs	r3, r3, #5
 211 00a8 03F0F003 		and	r3, r3, #240
 212 00ac 1C44     		add	r4, r4, r3
 213 00ae FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 214              	.LVL19:
 215 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 216 00b6 00EB8000 		add	r0, r0, r0, lsl #2
 217 00ba D9F80430 		ldr	r3, [r9, #4]
 218 00be 9B00     		lsls	r3, r3, #2
 219 00c0 B0FBF3F7 		udiv	r7, r0, r3
 220 00c4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 221              	.LVL20:
 222 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 223 00cc 00EB8000 		add	r0, r0, r0, lsl #2
 224 00d0 D9F80430 		ldr	r3, [r9, #4]
 225 00d4 9B00     		lsls	r3, r3, #2
 226 00d6 B0FBF3F3 		udiv	r3, r0, r3
 227 00da A6FB0323 		umull	r2, r3, r6, r3
 228 00de 5B09     		lsrs	r3, r3, #5
 229 00e0 08FB1373 		mls	r3, r8, r3, r7
 230 00e4 1B01     		lsls	r3, r3, #4
 231 00e6 3233     		adds	r3, r3, #50
 232 00e8 A6FB0323 		umull	r2, r3, r6, r3
 233 00ec C3F34313 		ubfx	r3, r3, #5, #4
 234 00f0 1C44     		add	r4, r4, r3
 235 00f2 AC60     		str	r4, [r5, #8]
 236 00f4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 237              	.LVL21:
 238              	.L10:
1904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 239              		.loc 1 1907 0
 240 00f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 241              	.LVL22:
 242 00fc 00EB8000 		add	r0, r0, r0, lsl #2
 243 0100 00EB8000 		add	r0, r0, r0, lsl #2
 244 0104 D9F80440 		ldr	r4, [r9, #4]
 245 0108 A400     		lsls	r4, r4, #2
 246 010a B0FBF4F4 		udiv	r4, r0, r4
 247 010e 284E     		ldr	r6, .L13+4
 248 0110 A6FB0434 		umull	r3, r4, r6, r4
 249 0114 6409     		lsrs	r4, r4, #5
 250 0116 2401     		lsls	r4, r4, #4
 251 0118 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 252              	.LVL23:
 253 011c 00EB8000 		add	r0, r0, r0, lsl #2
 254 0120 00EB8000 		add	r0, r0, r0, lsl #2
 255 0124 D9F80430 		ldr	r3, [r9, #4]
 256 0128 9B00     		lsls	r3, r3, #2
 257 012a B0FBF3F7 		udiv	r7, r0, r3
 258 012e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 259              	.LVL24:
 260 0132 00EB8000 		add	r0, r0, r0, lsl #2
 261 0136 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccFOILL8.s 			page 39


 262 013a D9F80430 		ldr	r3, [r9, #4]
 263 013e 9B00     		lsls	r3, r3, #2
 264 0140 B0FBF3F3 		udiv	r3, r0, r3
 265 0144 A6FB0323 		umull	r2, r3, r6, r3
 266 0148 5B09     		lsrs	r3, r3, #5
 267 014a 4FF06408 		mov	r8, #100
 268 014e 08FB1373 		mls	r3, r8, r3, r7
 269 0152 1B01     		lsls	r3, r3, #4
 270 0154 3233     		adds	r3, r3, #50
 271 0156 A6FB0323 		umull	r2, r3, r6, r3
 272 015a 5B09     		lsrs	r3, r3, #5
 273 015c 03F0F003 		and	r3, r3, #240
 274 0160 1C44     		add	r4, r4, r3
 275 0162 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 276              	.LVL25:
 277 0166 00EB8000 		add	r0, r0, r0, lsl #2
 278 016a 00EB8000 		add	r0, r0, r0, lsl #2
 279 016e D9F80430 		ldr	r3, [r9, #4]
 280 0172 9B00     		lsls	r3, r3, #2
 281 0174 B0FBF3F7 		udiv	r7, r0, r3
 282 0178 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 283              	.LVL26:
 284 017c 00EB8000 		add	r0, r0, r0, lsl #2
 285 0180 00EB8000 		add	r0, r0, r0, lsl #2
 286 0184 D9F80430 		ldr	r3, [r9, #4]
 287 0188 9B00     		lsls	r3, r3, #2
 288 018a B0FBF3F3 		udiv	r3, r0, r3
 289 018e A6FB0323 		umull	r2, r3, r6, r3
 290 0192 5B09     		lsrs	r3, r3, #5
 291 0194 08FB1373 		mls	r3, r8, r3, r7
 292 0198 1B01     		lsls	r3, r3, #4
 293 019a 3233     		adds	r3, r3, #50
 294 019c A6FB0323 		umull	r2, r3, r6, r3
 295 01a0 C3F34313 		ubfx	r3, r3, #5, #4
 296 01a4 1C44     		add	r4, r4, r3
 297 01a6 AC60     		str	r4, [r5, #8]
 298 01a8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 299              	.LVL27:
 300              	.L14:
 301              		.align	2
 302              	.L13:
 303 01ac 00380140 		.word	1073821696
 304 01b0 1F85EB51 		.word	1374389535
 305              		.cfi_endproc
 306              	.LFE101:
 308              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 309              		.align	2
 310              		.thumb
 311              		.thumb_func
 313              	UART_WaitOnFlagUntilTimeout:
 314              	.LFB97:
1659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0;
 315              		.loc 1 1659 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL28:
ARM GAS  /tmp/ccFOILL8.s 			page 40


 320 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 321              	.LCFI1:
 322              		.cfi_def_cfa_offset 24
 323              		.cfi_offset 4, -24
 324              		.cfi_offset 5, -20
 325              		.cfi_offset 6, -16
 326              		.cfi_offset 7, -12
 327              		.cfi_offset 8, -8
 328              		.cfi_offset 14, -4
 329 0004 0646     		mov	r6, r0
 330 0006 0C46     		mov	r4, r1
 331 0008 9046     		mov	r8, r2
 332 000a 1D46     		mov	r5, r3
 333              	.LVL29:
1663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 334              		.loc 1 1663 0
 335 000c FFF7FEFF 		bl	HAL_GetTick
 336              	.LVL30:
 337 0010 0746     		mov	r7, r0
 338              	.LVL31:
1666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 339              		.loc 1 1666 0
 340 0012 B8F1000F 		cmp	r8, #0
 341 0016 26D0     		beq	.L18
 342 0018 53E0     		b	.L22
 343              	.LVL32:
 344              	.L21:
1671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 345              		.loc 1 1671 0
 346 001a B5F1FF3F 		cmp	r5, #-1
 347 001e 22D0     		beq	.L18
1673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 348              		.loc 1 1673 0
 349 0020 25B1     		cbz	r5, .L19
1673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 350              		.loc 1 1673 0 is_stmt 0 discriminator 1
 351 0022 FFF7FEFF 		bl	HAL_GetTick
 352              	.LVL33:
 353 0026 C01B     		subs	r0, r0, r7
 354 0028 A842     		cmp	r0, r5
 355 002a 1CD9     		bls	.L18
 356              	.L19:
1676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 357              		.loc 1 1676 0 is_stmt 1
 358 002c 3268     		ldr	r2, [r6]
 359 002e D368     		ldr	r3, [r2, #12]
 360 0030 23F08003 		bic	r3, r3, #128
 361 0034 D360     		str	r3, [r2, #12]
1677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 362              		.loc 1 1677 0
 363 0036 3268     		ldr	r2, [r6]
 364 0038 D368     		ldr	r3, [r2, #12]
 365 003a 23F02003 		bic	r3, r3, #32
 366 003e D360     		str	r3, [r2, #12]
1678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 367              		.loc 1 1678 0
 368 0040 3268     		ldr	r2, [r6]
ARM GAS  /tmp/ccFOILL8.s 			page 41


 369 0042 D368     		ldr	r3, [r2, #12]
 370 0044 23F48073 		bic	r3, r3, #256
 371 0048 D360     		str	r3, [r2, #12]
1679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 372              		.loc 1 1679 0
 373 004a 3268     		ldr	r2, [r6]
 374 004c 5369     		ldr	r3, [r2, #20]
 375 004e 23F00103 		bic	r3, r3, #1
 376 0052 5361     		str	r3, [r2, #20]
1681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 377              		.loc 1 1681 0
 378 0054 0123     		movs	r3, #1
 379 0056 86F83930 		strb	r3, [r6, #57]
1684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 380              		.loc 1 1684 0
 381 005a 0023     		movs	r3, #0
 382 005c 86F83830 		strb	r3, [r6, #56]
1686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 383              		.loc 1 1686 0
 384 0060 0320     		movs	r0, #3
 385 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 386              	.LVL34:
 387              	.L18:
1668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 388              		.loc 1 1668 0
 389 0066 3368     		ldr	r3, [r6]
 390 0068 1B68     		ldr	r3, [r3]
 391 006a 2340     		ands	r3, r3, r4
 392 006c A342     		cmp	r3, r4
 393 006e D4D1     		bne	.L21
1716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 394              		.loc 1 1716 0
 395 0070 0020     		movs	r0, #0
 396 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 397              	.LVL35:
 398              	.L24:
1696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 399              		.loc 1 1696 0
 400 0076 B5F1FF3F 		cmp	r5, #-1
 401 007a 22D0     		beq	.L22
1698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 402              		.loc 1 1698 0
 403 007c 25B1     		cbz	r5, .L23
1698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 404              		.loc 1 1698 0 is_stmt 0 discriminator 1
 405 007e FFF7FEFF 		bl	HAL_GetTick
 406              	.LVL36:
 407 0082 C01B     		subs	r0, r0, r7
 408 0084 A842     		cmp	r0, r5
 409 0086 1CD9     		bls	.L22
 410              	.L23:
1701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 411              		.loc 1 1701 0 is_stmt 1
 412 0088 3268     		ldr	r2, [r6]
 413 008a D368     		ldr	r3, [r2, #12]
 414 008c 23F08003 		bic	r3, r3, #128
 415 0090 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccFOILL8.s 			page 42


1702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 416              		.loc 1 1702 0
 417 0092 3268     		ldr	r2, [r6]
 418 0094 D368     		ldr	r3, [r2, #12]
 419 0096 23F02003 		bic	r3, r3, #32
 420 009a D360     		str	r3, [r2, #12]
1703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 421              		.loc 1 1703 0
 422 009c 3268     		ldr	r2, [r6]
 423 009e D368     		ldr	r3, [r2, #12]
 424 00a0 23F48073 		bic	r3, r3, #256
 425 00a4 D360     		str	r3, [r2, #12]
1704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 426              		.loc 1 1704 0
 427 00a6 3268     		ldr	r2, [r6]
 428 00a8 5369     		ldr	r3, [r2, #20]
 429 00aa 23F00103 		bic	r3, r3, #1
 430 00ae 5361     		str	r3, [r2, #20]
1706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 431              		.loc 1 1706 0
 432 00b0 0123     		movs	r3, #1
 433 00b2 86F83930 		strb	r3, [r6, #57]
1709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 434              		.loc 1 1709 0
 435 00b6 0023     		movs	r3, #0
 436 00b8 86F83830 		strb	r3, [r6, #56]
1711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 437              		.loc 1 1711 0
 438 00bc 0320     		movs	r0, #3
 439 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 440              	.LVL37:
 441              	.L22:
1693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 442              		.loc 1 1693 0
 443 00c2 3368     		ldr	r3, [r6]
 444 00c4 1B68     		ldr	r3, [r3]
 445 00c6 2340     		ands	r3, r3, r4
 446 00c8 A342     		cmp	r3, r4
 447 00ca D4D0     		beq	.L24
1716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 448              		.loc 1 1716 0
 449 00cc 0020     		movs	r0, #0
1717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 450              		.loc 1 1717 0
 451 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 452              		.cfi_endproc
 453              	.LFE97:
 455 00d2 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 456              		.align	2
 457              		.weak	HAL_UART_MspInit
 458              		.thumb
 459              		.thumb_func
 461              	HAL_UART_MspInit:
 462              	.LFB68:
 540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 463              		.loc 1 540 0
 464              		.cfi_startproc
ARM GAS  /tmp/ccFOILL8.s 			page 43


 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL38:
 469 0000 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE68:
 473 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 474              		.align	2
 475              		.global	HAL_UART_Init
 476              		.thumb
 477              		.thumb_func
 479              	HAL_UART_Init:
 480              	.LFB63:
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 481              		.loc 1 252 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              	.LVL39:
 254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 486              		.loc 1 254 0
 487 0000 58B3     		cbz	r0, .L30
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 488              		.loc 1 252 0
 489 0002 10B5     		push	{r4, lr}
 490              	.LCFI2:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 494 0004 0446     		mov	r4, r0
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 495              		.loc 1 273 0
 496 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 497 000a 13F0FF0F 		tst	r3, #255
 498 000e 04D1     		bne	.L29
 276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 499              		.loc 1 276 0
 500 0010 0023     		movs	r3, #0
 501 0012 80F83830 		strb	r3, [r0, #56]
 279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 502              		.loc 1 279 0
 503 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 504              	.LVL40:
 505              	.L29:
 282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 506              		.loc 1 282 0
 507 001a 0223     		movs	r3, #2
 508 001c 84F83930 		strb	r3, [r4, #57]
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 509              		.loc 1 285 0
 510 0020 2268     		ldr	r2, [r4]
 511 0022 D368     		ldr	r3, [r2, #12]
 512 0024 23F40053 		bic	r3, r3, #8192
 513 0028 D360     		str	r3, [r2, #12]
 288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 514              		.loc 1 288 0
ARM GAS  /tmp/ccFOILL8.s 			page 44


 515 002a 2046     		mov	r0, r4
 516 002c FFF7FEFF 		bl	UART_SetConfig
 517              	.LVL41:
 293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 518              		.loc 1 293 0
 519 0030 2268     		ldr	r2, [r4]
 520 0032 1369     		ldr	r3, [r2, #16]
 521 0034 23F49043 		bic	r3, r3, #18432
 522 0038 1361     		str	r3, [r2, #16]
 294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 523              		.loc 1 294 0
 524 003a 2268     		ldr	r2, [r4]
 525 003c 5369     		ldr	r3, [r2, #20]
 526 003e 23F02A03 		bic	r3, r3, #42
 527 0042 5361     		str	r3, [r2, #20]
 297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 528              		.loc 1 297 0
 529 0044 2268     		ldr	r2, [r4]
 530 0046 D368     		ldr	r3, [r2, #12]
 531 0048 43F40053 		orr	r3, r3, #8192
 532 004c D360     		str	r3, [r2, #12]
 300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 533              		.loc 1 300 0
 534 004e 0020     		movs	r0, #0
 535 0050 E063     		str	r0, [r4, #60]
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 536              		.loc 1 301 0
 537 0052 0123     		movs	r3, #1
 538 0054 84F83930 		strb	r3, [r4, #57]
 303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 539              		.loc 1 303 0
 540 0058 10BD     		pop	{r4, pc}
 541              	.LVL42:
 542              	.L30:
 543              	.LCFI3:
 544              		.cfi_def_cfa_offset 0
 545              		.cfi_restore 4
 546              		.cfi_restore 14
 256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 547              		.loc 1 256 0
 548 005a 0120     		movs	r0, #1
 549              	.LVL43:
 550 005c 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE63:
 554 005e 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 555              		.align	2
 556              		.global	HAL_HalfDuplex_Init
 557              		.thumb
 558              		.thumb_func
 560              	HAL_HalfDuplex_Init:
 561              	.LFB64:
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 562              		.loc 1 314 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFOILL8.s 			page 45


 566              	.LVL44:
 316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 567              		.loc 1 316 0
 568 0000 0028     		cmp	r0, #0
 569 0002 30D0     		beq	.L36
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 570              		.loc 1 314 0
 571 0004 10B5     		push	{r4, lr}
 572              	.LCFI4:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 4, -8
 575              		.cfi_offset 14, -4
 576 0006 0446     		mov	r4, r0
 326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 577              		.loc 1 326 0
 578 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 579 000c 13F0FF0F 		tst	r3, #255
 580 0010 04D1     		bne	.L35
 329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 581              		.loc 1 329 0
 582 0012 0023     		movs	r3, #0
 583 0014 80F83830 		strb	r3, [r0, #56]
 332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 584              		.loc 1 332 0
 585 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 586              	.LVL45:
 587              	.L35:
 335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 588              		.loc 1 335 0
 589 001c 0223     		movs	r3, #2
 590 001e 84F83930 		strb	r3, [r4, #57]
 338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 591              		.loc 1 338 0
 592 0022 2268     		ldr	r2, [r4]
 593 0024 D368     		ldr	r3, [r2, #12]
 594 0026 23F40053 		bic	r3, r3, #8192
 595 002a D360     		str	r3, [r2, #12]
 341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 596              		.loc 1 341 0
 597 002c 2046     		mov	r0, r4
 598 002e FFF7FEFF 		bl	UART_SetConfig
 599              	.LVL46:
 346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 600              		.loc 1 346 0
 601 0032 2268     		ldr	r2, [r4]
 602 0034 1369     		ldr	r3, [r2, #16]
 603 0036 23F49043 		bic	r3, r3, #18432
 604 003a 1361     		str	r3, [r2, #16]
 347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 605              		.loc 1 347 0
 606 003c 2268     		ldr	r2, [r4]
 607 003e 5369     		ldr	r3, [r2, #20]
 608 0040 23F02203 		bic	r3, r3, #34
 609 0044 5361     		str	r3, [r2, #20]
 350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 610              		.loc 1 350 0
 611 0046 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccFOILL8.s 			page 46


 612 0048 5369     		ldr	r3, [r2, #20]
 613 004a 43F00803 		orr	r3, r3, #8
 614 004e 5361     		str	r3, [r2, #20]
 353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 615              		.loc 1 353 0
 616 0050 2268     		ldr	r2, [r4]
 617 0052 D368     		ldr	r3, [r2, #12]
 618 0054 43F40053 		orr	r3, r3, #8192
 619 0058 D360     		str	r3, [r2, #12]
 356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 620              		.loc 1 356 0
 621 005a 0020     		movs	r0, #0
 622 005c E063     		str	r0, [r4, #60]
 357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 623              		.loc 1 357 0
 624 005e 0123     		movs	r3, #1
 625 0060 84F83930 		strb	r3, [r4, #57]
 359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 626              		.loc 1 359 0
 627 0064 10BD     		pop	{r4, pc}
 628              	.LVL47:
 629              	.L36:
 630              	.LCFI5:
 631              		.cfi_def_cfa_offset 0
 632              		.cfi_restore 4
 633              		.cfi_restore 14
 318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 634              		.loc 1 318 0
 635 0066 0120     		movs	r0, #1
 636              	.LVL48:
 637 0068 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE64:
 641 006a 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 642              		.align	2
 643              		.global	HAL_LIN_Init
 644              		.thumb
 645              		.thumb_func
 647              	HAL_LIN_Init:
 648              	.LFB65:
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 649              		.loc 1 374 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL49:
 376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 654              		.loc 1 376 0
 655 0000 0028     		cmp	r0, #0
 656 0002 37D0     		beq	.L42
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 657              		.loc 1 374 0
 658 0004 38B5     		push	{r3, r4, r5, lr}
 659              	.LCFI6:
 660              		.cfi_def_cfa_offset 16
 661              		.cfi_offset 3, -16
 662              		.cfi_offset 4, -12
ARM GAS  /tmp/ccFOILL8.s 			page 47


 663              		.cfi_offset 5, -8
 664              		.cfi_offset 14, -4
 665 0006 0446     		mov	r4, r0
 666 0008 0D46     		mov	r5, r1
 388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 667              		.loc 1 388 0
 668 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 669 000e 13F0FF0F 		tst	r3, #255
 670 0012 04D1     		bne	.L41
 391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 671              		.loc 1 391 0
 672 0014 0023     		movs	r3, #0
 673 0016 80F83830 		strb	r3, [r0, #56]
 394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 674              		.loc 1 394 0
 675 001a FFF7FEFF 		bl	HAL_UART_MspInit
 676              	.LVL50:
 677              	.L41:
 397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 678              		.loc 1 397 0
 679 001e 0223     		movs	r3, #2
 680 0020 84F83930 		strb	r3, [r4, #57]
 400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 681              		.loc 1 400 0
 682 0024 2268     		ldr	r2, [r4]
 683 0026 D368     		ldr	r3, [r2, #12]
 684 0028 23F40053 		bic	r3, r3, #8192
 685 002c D360     		str	r3, [r2, #12]
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 686              		.loc 1 403 0
 687 002e 2046     		mov	r0, r4
 688 0030 FFF7FEFF 		bl	UART_SetConfig
 689              	.LVL51:
 408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 690              		.loc 1 408 0
 691 0034 2268     		ldr	r2, [r4]
 692 0036 1369     		ldr	r3, [r2, #16]
 693 0038 23F40063 		bic	r3, r3, #2048
 694 003c 1361     		str	r3, [r2, #16]
 409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 695              		.loc 1 409 0
 696 003e 2268     		ldr	r2, [r4]
 697 0040 5369     		ldr	r3, [r2, #20]
 698 0042 23F02A03 		bic	r3, r3, #42
 699 0046 5361     		str	r3, [r2, #20]
 412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 700              		.loc 1 412 0
 701 0048 2268     		ldr	r2, [r4]
 702 004a 1369     		ldr	r3, [r2, #16]
 703 004c 43F48043 		orr	r3, r3, #16384
 704 0050 1361     		str	r3, [r2, #16]
 415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 705              		.loc 1 415 0
 706 0052 2368     		ldr	r3, [r4]
 707 0054 1969     		ldr	r1, [r3, #16]
 708 0056 21F02001 		bic	r1, r1, #32
 709 005a 0D43     		orrs	r5, r5, r1
ARM GAS  /tmp/ccFOILL8.s 			page 48


 710              	.LVL52:
 711 005c 1D61     		str	r5, [r3, #16]
 418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 712              		.loc 1 418 0
 713 005e 2268     		ldr	r2, [r4]
 714 0060 D368     		ldr	r3, [r2, #12]
 715 0062 43F40053 		orr	r3, r3, #8192
 716 0066 D360     		str	r3, [r2, #12]
 421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 717              		.loc 1 421 0
 718 0068 0020     		movs	r0, #0
 719 006a E063     		str	r0, [r4, #60]
 422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 720              		.loc 1 422 0
 721 006c 0123     		movs	r3, #1
 722 006e 84F83930 		strb	r3, [r4, #57]
 424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 723              		.loc 1 424 0
 724 0072 38BD     		pop	{r3, r4, r5, pc}
 725              	.LVL53:
 726              	.L42:
 727              	.LCFI7:
 728              		.cfi_def_cfa_offset 0
 729              		.cfi_restore 3
 730              		.cfi_restore 4
 731              		.cfi_restore 5
 732              		.cfi_restore 14
 378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 733              		.loc 1 378 0
 734 0074 0120     		movs	r0, #1
 735              	.LVL54:
 736 0076 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE65:
 740              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 741              		.align	2
 742              		.global	HAL_MultiProcessor_Init
 743              		.thumb
 744              		.thumb_func
 746              	HAL_MultiProcessor_Init:
 747              	.LFB66:
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 748              		.loc 1 440 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              	.LVL55:
 442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 753              		.loc 1 442 0
 754 0000 0028     		cmp	r0, #0
 755 0002 39D0     		beq	.L48
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 756              		.loc 1 440 0
 757 0004 70B5     		push	{r4, r5, r6, lr}
 758              	.LCFI8:
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 4, -16
ARM GAS  /tmp/ccFOILL8.s 			page 49


 761              		.cfi_offset 5, -12
 762              		.cfi_offset 6, -8
 763              		.cfi_offset 14, -4
 764 0006 0446     		mov	r4, r0
 765 0008 1546     		mov	r5, r2
 766 000a 0E46     		mov	r6, r1
 456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {   
 767              		.loc 1 456 0
 768 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 769 0010 13F0FF0F 		tst	r3, #255
 770 0014 04D1     		bne	.L47
 459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 771              		.loc 1 459 0
 772 0016 0023     		movs	r3, #0
 773 0018 80F83830 		strb	r3, [r0, #56]
 462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 774              		.loc 1 462 0
 775 001c FFF7FEFF 		bl	HAL_UART_MspInit
 776              	.LVL56:
 777              	.L47:
 465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 778              		.loc 1 465 0
 779 0020 0223     		movs	r3, #2
 780 0022 84F83930 		strb	r3, [r4, #57]
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 781              		.loc 1 468 0
 782 0026 2268     		ldr	r2, [r4]
 783 0028 D368     		ldr	r3, [r2, #12]
 784 002a 23F40053 		bic	r3, r3, #8192
 785 002e D360     		str	r3, [r2, #12]
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 786              		.loc 1 471 0
 787 0030 2046     		mov	r0, r4
 788 0032 FFF7FEFF 		bl	UART_SetConfig
 789              	.LVL57:
 476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 790              		.loc 1 476 0
 791 0036 2268     		ldr	r2, [r4]
 792 0038 1369     		ldr	r3, [r2, #16]
 793 003a 23F49043 		bic	r3, r3, #18432
 794 003e 1361     		str	r3, [r2, #16]
 477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 795              		.loc 1 477 0
 796 0040 2268     		ldr	r2, [r4]
 797 0042 5369     		ldr	r3, [r2, #20]
 798 0044 23F02A03 		bic	r3, r3, #42
 799 0048 5361     		str	r3, [r2, #20]
 480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 800              		.loc 1 480 0
 801 004a 2368     		ldr	r3, [r4]
 802 004c 1969     		ldr	r1, [r3, #16]
 803 004e 21F00F01 		bic	r1, r1, #15
 804 0052 0E43     		orrs	r6, r6, r1
 805 0054 1E61     		str	r6, [r3, #16]
 483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 806              		.loc 1 483 0
 807 0056 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccFOILL8.s 			page 50


 808 0058 DA68     		ldr	r2, [r3, #12]
 809 005a 22F40062 		bic	r2, r2, #2048
 810 005e 1543     		orrs	r5, r5, r2
 811              	.LVL58:
 812 0060 DD60     		str	r5, [r3, #12]
 486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 813              		.loc 1 486 0
 814 0062 2268     		ldr	r2, [r4]
 815 0064 D368     		ldr	r3, [r2, #12]
 816 0066 43F40053 		orr	r3, r3, #8192
 817 006a D360     		str	r3, [r2, #12]
 489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 818              		.loc 1 489 0
 819 006c 0020     		movs	r0, #0
 820 006e E063     		str	r0, [r4, #60]
 490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 821              		.loc 1 490 0
 822 0070 0123     		movs	r3, #1
 823 0072 84F83930 		strb	r3, [r4, #57]
 492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 824              		.loc 1 492 0
 825 0076 70BD     		pop	{r4, r5, r6, pc}
 826              	.LVL59:
 827              	.L48:
 828              	.LCFI9:
 829              		.cfi_def_cfa_offset 0
 830              		.cfi_restore 4
 831              		.cfi_restore 5
 832              		.cfi_restore 6
 833              		.cfi_restore 14
 444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 834              		.loc 1 444 0
 835 0078 0120     		movs	r0, #1
 836              	.LVL60:
 837 007a 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE66:
 841              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 842              		.align	2
 843              		.weak	HAL_UART_MspDeInit
 844              		.thumb
 845              		.thumb_func
 847              	HAL_UART_MspDeInit:
 848              	.LFB69:
 555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 849              		.loc 1 555 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854              	.LVL61:
 855 0000 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE69:
 859 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 860              		.align	2
 861              		.global	HAL_UART_DeInit
ARM GAS  /tmp/ccFOILL8.s 			page 51


 862              		.thumb
 863              		.thumb_func
 865              	HAL_UART_DeInit:
 866              	.LFB67:
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 867              		.loc 1 502 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL62:
 504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 872              		.loc 1 504 0
 873 0000 C8B1     		cbz	r0, .L54
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 874              		.loc 1 502 0
 875 0002 38B5     		push	{r3, r4, r5, lr}
 876              	.LCFI10:
 877              		.cfi_def_cfa_offset 16
 878              		.cfi_offset 3, -16
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 5, -8
 881              		.cfi_offset 14, -4
 882 0004 0446     		mov	r4, r0
 512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 883              		.loc 1 512 0
 884 0006 0223     		movs	r3, #2
 885 0008 80F83930 		strb	r3, [r0, #57]
 515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 886              		.loc 1 515 0
 887 000c 0268     		ldr	r2, [r0]
 888 000e D368     		ldr	r3, [r2, #12]
 889 0010 23F40053 		bic	r3, r3, #8192
 890 0014 D360     		str	r3, [r2, #12]
 517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 891              		.loc 1 517 0
 892 0016 0368     		ldr	r3, [r0]
 893 0018 0025     		movs	r5, #0
 894 001a DD60     		str	r5, [r3, #12]
 518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 895              		.loc 1 518 0
 896 001c 0368     		ldr	r3, [r0]
 897 001e 1D61     		str	r5, [r3, #16]
 519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 898              		.loc 1 519 0
 899 0020 0368     		ldr	r3, [r0]
 900 0022 5D61     		str	r5, [r3, #20]
 522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 901              		.loc 1 522 0
 902 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 903              	.LVL63:
 524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State = HAL_UART_STATE_RESET;
 904              		.loc 1 524 0
 905 0028 E563     		str	r5, [r4, #60]
 525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 906              		.loc 1 525 0
 907 002a 84F83950 		strb	r5, [r4, #57]
 528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 52


 908              		.loc 1 528 0
 909 002e 84F83850 		strb	r5, [r4, #56]
 530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 910              		.loc 1 530 0
 911 0032 2846     		mov	r0, r5
 912 0034 38BD     		pop	{r3, r4, r5, pc}
 913              	.LVL64:
 914              	.L54:
 915              	.LCFI11:
 916              		.cfi_def_cfa_offset 0
 917              		.cfi_restore 3
 918              		.cfi_restore 4
 919              		.cfi_restore 5
 920              		.cfi_restore 14
 506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 921              		.loc 1 506 0
 922 0036 0120     		movs	r0, #1
 923              	.LVL65:
 924 0038 7047     		bx	lr
 925              		.cfi_endproc
 926              	.LFE67:
 928 003a 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 929              		.align	2
 930              		.global	HAL_UART_Transmit
 931              		.thumb
 932              		.thumb_func
 934              	HAL_UART_Transmit:
 935              	.LFB70:
 634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 936              		.loc 1 634 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              	.LVL66:
 941 0000 70B5     		push	{r4, r5, r6, lr}
 942              	.LCFI12:
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 4, -16
 945              		.cfi_offset 5, -12
 946              		.cfi_offset 6, -8
 947              		.cfi_offset 14, -4
 948 0002 0446     		mov	r4, r0
 949 0004 0D46     		mov	r5, r1
 950 0006 1E46     		mov	r6, r3
 951              	.LVL67:
 638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 952              		.loc 1 638 0
 953 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 954              	.LVL68:
 955 000c DBB2     		uxtb	r3, r3
 956              	.LVL69:
 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 957              		.loc 1 639 0
 958 000e 012B     		cmp	r3, #1
 959 0010 01D0     		beq	.L58
 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 960              		.loc 1 639 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccFOILL8.s 			page 53


 961 0012 222B     		cmp	r3, #34
 962 0014 5AD1     		bne	.L69
 963              	.L58:
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 964              		.loc 1 641 0 is_stmt 1
 965 0016 002D     		cmp	r5, #0
 966 0018 5AD0     		beq	.L70
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 967              		.loc 1 641 0 is_stmt 0 discriminator 1
 968 001a 002A     		cmp	r2, #0
 969 001c 5AD0     		beq	.L71
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 970              		.loc 1 647 0 is_stmt 1
 971 001e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 972              	.LVL70:
 973 0022 012B     		cmp	r3, #1
 974 0024 58D0     		beq	.L72
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 975              		.loc 1 647 0 is_stmt 0 discriminator 2
 976 0026 0123     		movs	r3, #1
 977 0028 84F83830 		strb	r3, [r4, #56]
 649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 978              		.loc 1 649 0 is_stmt 1 discriminator 2
 979 002c 0023     		movs	r3, #0
 980 002e E363     		str	r3, [r4, #60]
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 981              		.loc 1 651 0 discriminator 2
 982 0030 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 983 0034 DBB2     		uxtb	r3, r3
 984 0036 222B     		cmp	r3, #34
 985 0038 03D1     		bne	.L60
 653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 986              		.loc 1 653 0
 987 003a 3223     		movs	r3, #50
 988 003c 84F83930 		strb	r3, [r4, #57]
 989 0040 02E0     		b	.L61
 990              	.L60:
 657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 991              		.loc 1 657 0
 992 0042 1223     		movs	r3, #18
 993 0044 84F83930 		strb	r3, [r4, #57]
 994              	.L61:
 660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 995              		.loc 1 660 0
 996 0048 A284     		strh	r2, [r4, #36]	@ movhi
 661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 997              		.loc 1 661 0
 998 004a E284     		strh	r2, [r4, #38]	@ movhi
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 999              		.loc 1 662 0
 1000 004c 23E0     		b	.L62
 1001              	.LVL71:
 1002              	.L66:
 664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1003              		.loc 1 664 0
 1004 004e 013B     		subs	r3, r3, #1
 1005 0050 E384     		strh	r3, [r4, #38]	@ movhi
ARM GAS  /tmp/ccFOILL8.s 			page 54


 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1006              		.loc 1 665 0
 1007 0052 A368     		ldr	r3, [r4, #8]
 1008 0054 B3F5805F 		cmp	r3, #4096
 1009 0058 12D1     		bne	.L63
 667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1010              		.loc 1 667 0
 1011 005a 2046     		mov	r0, r4
 1012 005c 8021     		movs	r1, #128
 1013 005e 0022     		movs	r2, #0
 1014 0060 3346     		mov	r3, r6
 1015 0062 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1016              	.LVL72:
 1017 0066 0028     		cmp	r0, #0
 1018 0068 38D1     		bne	.L73
 1019              	.LVL73:
 672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1020              		.loc 1 672 0
 1021 006a 2268     		ldr	r2, [r4]
 1022 006c 2B88     		ldrh	r3, [r5]
 1023 006e C3F30803 		ubfx	r3, r3, #0, #9
 1024 0072 5360     		str	r3, [r2, #4]
 673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1025              		.loc 1 673 0
 1026 0074 2369     		ldr	r3, [r4, #16]
 1027 0076 0BB9     		cbnz	r3, .L64
 675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1028              		.loc 1 675 0
 1029 0078 0235     		adds	r5, r5, #2
 1030              	.LVL74:
 1031 007a 0CE0     		b	.L62
 1032              	.LVL75:
 1033              	.L64:
 679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1034              		.loc 1 679 0
 1035 007c 0135     		adds	r5, r5, #1
 1036              	.LVL76:
 1037 007e 0AE0     		b	.L62
 1038              	.LVL77:
 1039              	.L63:
 684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1040              		.loc 1 684 0
 1041 0080 2046     		mov	r0, r4
 1042 0082 8021     		movs	r1, #128
 1043 0084 0022     		movs	r2, #0
 1044 0086 3346     		mov	r3, r6
 1045 0088 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1046              	.LVL78:
 1047 008c 40BB     		cbnz	r0, .L74
 688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1048              		.loc 1 688 0
 1049 008e 2368     		ldr	r3, [r4]
 1050              	.LVL79:
 1051 0090 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1052 0092 5A60     		str	r2, [r3, #4]
 1053 0094 0135     		adds	r5, r5, #1
 1054              	.LVL80:
ARM GAS  /tmp/ccFOILL8.s 			page 55


 1055              	.L62:
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1056              		.loc 1 662 0
 1057 0096 E38C     		ldrh	r3, [r4, #38]
 1058 0098 002B     		cmp	r3, #0
 1059 009a D8D1     		bne	.L66
 692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 1060              		.loc 1 692 0
 1061 009c 2046     		mov	r0, r4
 1062 009e 4021     		movs	r1, #64
 1063 00a0 0022     		movs	r2, #0
 1064 00a2 3346     		mov	r3, r6
 1065 00a4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1066              	.LVL81:
 1067 00a8 0346     		mov	r3, r0
 1068 00aa D8B9     		cbnz	r0, .L75
 698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1069              		.loc 1 698 0
 1070 00ac 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1071 00b0 D2B2     		uxtb	r2, r2
 1072 00b2 322A     		cmp	r2, #50
 1073 00b4 03D1     		bne	.L67
 700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1074              		.loc 1 700 0
 1075 00b6 2222     		movs	r2, #34
 1076 00b8 84F83920 		strb	r2, [r4, #57]
 1077 00bc 02E0     		b	.L68
 1078              	.L67:
 704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1079              		.loc 1 704 0
 1080 00be 0122     		movs	r2, #1
 1081 00c0 84F83920 		strb	r2, [r4, #57]
 1082              	.L68:
 708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1083              		.loc 1 708 0
 1084 00c4 0022     		movs	r2, #0
 1085 00c6 84F83820 		strb	r2, [r4, #56]
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1086              		.loc 1 710 0
 1087 00ca 0CE0     		b	.L59
 1088              	.LVL82:
 1089              	.L69:
 714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1090              		.loc 1 714 0
 1091 00cc 0223     		movs	r3, #2
 1092              	.LVL83:
 1093 00ce 0AE0     		b	.L59
 1094              	.LVL84:
 1095              	.L70:
 643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1096              		.loc 1 643 0
 1097 00d0 0123     		movs	r3, #1
 1098              	.LVL85:
 1099 00d2 08E0     		b	.L59
 1100              	.LVL86:
 1101              	.L71:
 1102 00d4 0123     		movs	r3, #1
ARM GAS  /tmp/ccFOILL8.s 			page 56


 1103              	.LVL87:
 1104 00d6 06E0     		b	.L59
 1105              	.L72:
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1106              		.loc 1 647 0
 1107 00d8 0223     		movs	r3, #2
 1108 00da 04E0     		b	.L59
 1109              	.LVL88:
 1110              	.L73:
 669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1111              		.loc 1 669 0
 1112 00dc 0323     		movs	r3, #3
 1113 00de 02E0     		b	.L59
 1114              	.L74:
 686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1115              		.loc 1 686 0
 1116 00e0 0323     		movs	r3, #3
 1117 00e2 00E0     		b	.L59
 1118              	.L75:
 694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1119              		.loc 1 694 0
 1120 00e4 0323     		movs	r3, #3
 1121              	.L59:
 716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1122              		.loc 1 716 0
 1123 00e6 1846     		mov	r0, r3
 1124 00e8 70BD     		pop	{r4, r5, r6, pc}
 1125              		.cfi_endproc
 1126              	.LFE70:
 1128              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1129              		.align	2
 1130              		.global	HAL_UART_Receive
 1131              		.thumb
 1132              		.thumb_func
 1134              	HAL_UART_Receive:
 1135              	.LFB71:
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1136              		.loc 1 728 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              	.LVL89:
 1141 0000 70B5     		push	{r4, r5, r6, lr}
 1142              	.LCFI13:
 1143              		.cfi_def_cfa_offset 16
 1144              		.cfi_offset 4, -16
 1145              		.cfi_offset 5, -12
 1146              		.cfi_offset 6, -8
 1147              		.cfi_offset 14, -4
 1148 0002 0446     		mov	r4, r0
 1149 0004 0D46     		mov	r5, r1
 1150 0006 1E46     		mov	r6, r3
 1151              	.LVL90:
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 1152              		.loc 1 732 0
 1153 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1154              	.LVL91:
ARM GAS  /tmp/ccFOILL8.s 			page 57


 1155 000c DBB2     		uxtb	r3, r3
 1156              	.LVL92:
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1157              		.loc 1 733 0
 1158 000e 012B     		cmp	r3, #1
 1159 0010 01D0     		beq	.L78
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1160              		.loc 1 733 0 is_stmt 0 discriminator 1
 1161 0012 122B     		cmp	r3, #18
 1162 0014 5FD1     		bne	.L90
 1163              	.L78:
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1164              		.loc 1 735 0 is_stmt 1
 1165 0016 002D     		cmp	r5, #0
 1166 0018 5FD0     		beq	.L91
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1167              		.loc 1 735 0 is_stmt 0 discriminator 1
 1168 001a 002A     		cmp	r2, #0
 1169 001c 5FD0     		beq	.L92
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1170              		.loc 1 741 0 is_stmt 1
 1171 001e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 1172              	.LVL93:
 1173 0022 012B     		cmp	r3, #1
 1174 0024 5DD0     		beq	.L93
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1175              		.loc 1 741 0 is_stmt 0 discriminator 2
 1176 0026 0123     		movs	r3, #1
 1177 0028 84F83830 		strb	r3, [r4, #56]
 743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 1178              		.loc 1 743 0 is_stmt 1 discriminator 2
 1179 002c 0023     		movs	r3, #0
 1180 002e E363     		str	r3, [r4, #60]
 745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1181              		.loc 1 745 0 discriminator 2
 1182 0030 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 1183 0034 DBB2     		uxtb	r3, r3
 1184 0036 122B     		cmp	r3, #18
 1185 0038 03D1     		bne	.L80
 747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1186              		.loc 1 747 0
 1187 003a 3223     		movs	r3, #50
 1188 003c 84F83930 		strb	r3, [r4, #57]
 1189 0040 02E0     		b	.L81
 1190              	.L80:
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1191              		.loc 1 751 0
 1192 0042 2223     		movs	r3, #34
 1193 0044 84F83930 		strb	r3, [r4, #57]
 1194              	.L81:
 754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1195              		.loc 1 754 0
 1196 0048 A285     		strh	r2, [r4, #44]	@ movhi
 755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1197              		.loc 1 755 0
 1198 004a E285     		strh	r2, [r4, #46]	@ movhi
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccFOILL8.s 			page 58


 1199              		.loc 1 758 0
 1200 004c 30E0     		b	.L82
 1201              	.LVL94:
 1202              	.L87:
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1203              		.loc 1 760 0
 1204 004e 013B     		subs	r3, r3, #1
 1205 0050 E385     		strh	r3, [r4, #46]	@ movhi
 761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1206              		.loc 1 761 0
 1207 0052 A368     		ldr	r3, [r4, #8]
 1208 0054 B3F5805F 		cmp	r3, #4096
 1209 0058 16D1     		bne	.L83
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1210              		.loc 1 763 0
 1211 005a 2046     		mov	r0, r4
 1212 005c 2021     		movs	r1, #32
 1213 005e 0022     		movs	r2, #0
 1214 0060 3346     		mov	r3, r6
 1215 0062 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1216              	.LVL95:
 1217 0066 0028     		cmp	r0, #0
 1218 0068 3DD1     		bne	.L94
 1219              	.LVL96:
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1220              		.loc 1 768 0
 1221 006a 2369     		ldr	r3, [r4, #16]
 1222 006c 33B9     		cbnz	r3, .L84
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2;
 1223              		.loc 1 770 0
 1224 006e 2368     		ldr	r3, [r4]
 1225 0070 5B68     		ldr	r3, [r3, #4]
 1226 0072 C3F30803 		ubfx	r3, r3, #0, #9
 1227 0076 25F8023B 		strh	r3, [r5], #2	@ movhi
 1228              	.LVL97:
 1229 007a 19E0     		b	.L82
 1230              	.LVL98:
 1231              	.L84:
 775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1;
 1232              		.loc 1 775 0
 1233 007c 2368     		ldr	r3, [r4]
 1234 007e 5B68     		ldr	r3, [r3, #4]
 1235 0080 DBB2     		uxtb	r3, r3
 1236 0082 25F8013B 		strh	r3, [r5], #1	@ movhi
 1237              	.LVL99:
 1238 0086 13E0     		b	.L82
 1239              	.LVL100:
 1240              	.L83:
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1241              		.loc 1 782 0
 1242 0088 2046     		mov	r0, r4
 1243 008a 2021     		movs	r1, #32
 1244 008c 0022     		movs	r2, #0
 1245 008e 3346     		mov	r3, r6
 1246 0090 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1247              	.LVL101:
 1248 0094 48BB     		cbnz	r0, .L95
ARM GAS  /tmp/ccFOILL8.s 			page 59


 786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1249              		.loc 1 786 0
 1250 0096 2369     		ldr	r3, [r4, #16]
 1251 0098 23B9     		cbnz	r3, .L86
 1252              	.LVL102:
 788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1253              		.loc 1 788 0
 1254 009a 2368     		ldr	r3, [r4]
 1255 009c 5B68     		ldr	r3, [r3, #4]
 1256 009e 2B70     		strb	r3, [r5]
 1257 00a0 0135     		adds	r5, r5, #1
 1258              	.LVL103:
 1259 00a2 05E0     		b	.L82
 1260              	.L86:
 1261              	.LVL104:
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1262              		.loc 1 792 0
 1263 00a4 2368     		ldr	r3, [r4]
 1264 00a6 5B68     		ldr	r3, [r3, #4]
 1265 00a8 03F07F03 		and	r3, r3, #127
 1266 00ac 2B70     		strb	r3, [r5]
 1267 00ae 0135     		adds	r5, r5, #1
 1268              	.LVL105:
 1269              	.L82:
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1270              		.loc 1 758 0
 1271 00b0 E38D     		ldrh	r3, [r4, #46]
 1272 00b2 002B     		cmp	r3, #0
 1273 00b4 CBD1     		bne	.L87
 799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1274              		.loc 1 799 0
 1275 00b6 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 1276 00ba DBB2     		uxtb	r3, r3
 1277 00bc 322B     		cmp	r3, #50
 1278 00be 03D1     		bne	.L88
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1279              		.loc 1 801 0
 1280 00c0 1223     		movs	r3, #18
 1281 00c2 84F83930 		strb	r3, [r4, #57]
 1282 00c6 02E0     		b	.L89
 1283              	.L88:
 805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1284              		.loc 1 805 0
 1285 00c8 0123     		movs	r3, #1
 1286 00ca 84F83930 		strb	r3, [r4, #57]
 1287              	.L89:
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1288              		.loc 1 808 0
 1289 00ce 0020     		movs	r0, #0
 1290 00d0 84F83800 		strb	r0, [r4, #56]
 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1291              		.loc 1 810 0
 1292 00d4 70BD     		pop	{r4, r5, r6, pc}
 1293              	.LVL106:
 1294              	.L90:
 814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1295              		.loc 1 814 0
ARM GAS  /tmp/ccFOILL8.s 			page 60


 1296 00d6 0220     		movs	r0, #2
 1297              	.LVL107:
 1298 00d8 70BD     		pop	{r4, r5, r6, pc}
 1299              	.LVL108:
 1300              	.L91:
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1301              		.loc 1 737 0
 1302 00da 0120     		movs	r0, #1
 1303              	.LVL109:
 1304 00dc 70BD     		pop	{r4, r5, r6, pc}
 1305              	.LVL110:
 1306              	.L92:
 1307 00de 0120     		movs	r0, #1
 1308              	.LVL111:
 1309 00e0 70BD     		pop	{r4, r5, r6, pc}
 1310              	.LVL112:
 1311              	.L93:
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1312              		.loc 1 741 0
 1313 00e2 0220     		movs	r0, #2
 1314              	.LVL113:
 1315 00e4 70BD     		pop	{r4, r5, r6, pc}
 1316              	.LVL114:
 1317              	.L94:
 765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1318              		.loc 1 765 0
 1319 00e6 0320     		movs	r0, #3
 1320 00e8 70BD     		pop	{r4, r5, r6, pc}
 1321              	.LVL115:
 1322              	.L95:
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1323              		.loc 1 784 0
 1324 00ea 0320     		movs	r0, #3
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1325              		.loc 1 816 0
 1326 00ec 70BD     		pop	{r4, r5, r6, pc}
 1327              		.cfi_endproc
 1328              	.LFE71:
 1330 00ee 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1331              		.align	2
 1332              		.global	HAL_UART_Transmit_IT
 1333              		.thumb
 1334              		.thumb_func
 1336              	HAL_UART_Transmit_IT:
 1337              	.LFB72:
 827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1338              		.loc 1 827 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 1343              	.LVL116:
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 1344              		.loc 1 830 0
 1345 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1346 0004 DBB2     		uxtb	r3, r3
 1347              	.LVL117:
ARM GAS  /tmp/ccFOILL8.s 			page 61


 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1348              		.loc 1 831 0
 1349 0006 012B     		cmp	r3, #1
 1350 0008 01D0     		beq	.L98
 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1351              		.loc 1 831 0 is_stmt 0 discriminator 1
 1352 000a 222B     		cmp	r3, #34
 1353 000c 23D1     		bne	.L102
 1354              	.L98:
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1355              		.loc 1 833 0 is_stmt 1
 1356 000e 21B3     		cbz	r1, .L103
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1357              		.loc 1 833 0 is_stmt 0 discriminator 1
 1358 0010 2AB3     		cbz	r2, .L104
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1359              		.loc 1 839 0 is_stmt 1
 1360 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1361              	.LVL118:
 1362 0016 012B     		cmp	r3, #1
 1363 0018 23D0     		beq	.L105
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1364              		.loc 1 839 0 is_stmt 0 discriminator 2
 1365 001a 0123     		movs	r3, #1
 1366 001c 80F83830 		strb	r3, [r0, #56]
 841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1367              		.loc 1 841 0 is_stmt 1 discriminator 2
 1368 0020 0162     		str	r1, [r0, #32]
 842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1369              		.loc 1 842 0 discriminator 2
 1370 0022 8284     		strh	r2, [r0, #36]	@ movhi
 843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1371              		.loc 1 843 0 discriminator 2
 1372 0024 C284     		strh	r2, [r0, #38]	@ movhi
 845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 1373              		.loc 1 845 0 discriminator 2
 1374 0026 0023     		movs	r3, #0
 1375 0028 C363     		str	r3, [r0, #60]
 847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1376              		.loc 1 847 0 discriminator 2
 1377 002a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1378 002e DBB2     		uxtb	r3, r3
 1379 0030 222B     		cmp	r3, #34
 1380 0032 03D1     		bne	.L100
 849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1381              		.loc 1 849 0
 1382 0034 3223     		movs	r3, #50
 1383 0036 80F83930 		strb	r3, [r0, #57]
 1384 003a 02E0     		b	.L101
 1385              	.L100:
 853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1386              		.loc 1 853 0
 1387 003c 1223     		movs	r3, #18
 1388 003e 80F83930 		strb	r3, [r0, #57]
 1389              	.L101:
 857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1390              		.loc 1 857 0
ARM GAS  /tmp/ccFOILL8.s 			page 62


 1391 0042 0023     		movs	r3, #0
 1392 0044 80F83830 		strb	r3, [r0, #56]
 860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1393              		.loc 1 860 0
 1394 0048 0168     		ldr	r1, [r0]
 1395              	.LVL119:
 1396 004a CA68     		ldr	r2, [r1, #12]
 1397              	.LVL120:
 1398 004c 42F08002 		orr	r2, r2, #128
 1399 0050 CA60     		str	r2, [r1, #12]
 1400              	.LVL121:
 862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1401              		.loc 1 862 0
 1402 0052 1846     		mov	r0, r3
 1403              	.LVL122:
 1404 0054 7047     		bx	lr
 1405              	.LVL123:
 1406              	.L102:
 866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1407              		.loc 1 866 0
 1408 0056 0220     		movs	r0, #2
 1409              	.LVL124:
 1410 0058 7047     		bx	lr
 1411              	.LVL125:
 1412              	.L103:
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1413              		.loc 1 835 0
 1414 005a 0120     		movs	r0, #1
 1415              	.LVL126:
 1416 005c 7047     		bx	lr
 1417              	.LVL127:
 1418              	.L104:
 1419 005e 0120     		movs	r0, #1
 1420              	.LVL128:
 1421 0060 7047     		bx	lr
 1422              	.LVL129:
 1423              	.L105:
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1424              		.loc 1 839 0
 1425 0062 0220     		movs	r0, #2
 1426              	.LVL130:
 868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1427              		.loc 1 868 0
 1428 0064 7047     		bx	lr
 1429              		.cfi_endproc
 1430              	.LFE72:
 1432 0066 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1433              		.align	2
 1434              		.global	HAL_UART_Receive_IT
 1435              		.thumb
 1436              		.thumb_func
 1438              	HAL_UART_Receive_IT:
 1439              	.LFB73:
 879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_state = 0;
 1440              		.loc 1 879 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccFOILL8.s 			page 63


 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445              	.LVL131:
 882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 1446              		.loc 1 882 0
 1447 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1448 0004 DBB2     		uxtb	r3, r3
 1449              	.LVL132:
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1450              		.loc 1 883 0
 1451 0006 012B     		cmp	r3, #1
 1452 0008 01D0     		beq	.L107
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1453              		.loc 1 883 0 is_stmt 0 discriminator 1
 1454 000a 122B     		cmp	r3, #18
 1455 000c 2FD1     		bne	.L111
 1456              	.L107:
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1457              		.loc 1 885 0 is_stmt 1
 1458 000e 0029     		cmp	r1, #0
 1459 0010 2FD0     		beq	.L112
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1460              		.loc 1 885 0 is_stmt 0 discriminator 1
 1461 0012 002A     		cmp	r2, #0
 1462 0014 2FD0     		beq	.L113
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1463              		.loc 1 891 0 is_stmt 1
 1464 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1465              	.LVL133:
 1466 001a 012B     		cmp	r3, #1
 1467 001c 2DD0     		beq	.L114
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1468              		.loc 1 891 0 is_stmt 0 discriminator 2
 1469 001e 0123     		movs	r3, #1
 1470 0020 80F83830 		strb	r3, [r0, #56]
 893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1471              		.loc 1 893 0 is_stmt 1 discriminator 2
 1472 0024 8162     		str	r1, [r0, #40]
 894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1473              		.loc 1 894 0 discriminator 2
 1474 0026 8285     		strh	r2, [r0, #44]	@ movhi
 895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1475              		.loc 1 895 0 discriminator 2
 1476 0028 C285     		strh	r2, [r0, #46]	@ movhi
 897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 1477              		.loc 1 897 0 discriminator 2
 1478 002a 0023     		movs	r3, #0
 1479 002c C363     		str	r3, [r0, #60]
 899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1480              		.loc 1 899 0 discriminator 2
 1481 002e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1482 0032 DBB2     		uxtb	r3, r3
 1483 0034 122B     		cmp	r3, #18
 1484 0036 03D1     		bne	.L109
 901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1485              		.loc 1 901 0
 1486 0038 3223     		movs	r3, #50
ARM GAS  /tmp/ccFOILL8.s 			page 64


 1487 003a 80F83930 		strb	r3, [r0, #57]
 1488 003e 02E0     		b	.L110
 1489              	.L109:
 905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1490              		.loc 1 905 0
 1491 0040 2223     		movs	r3, #34
 1492 0042 80F83930 		strb	r3, [r0, #57]
 1493              	.L110:
 909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1494              		.loc 1 909 0
 1495 0046 0023     		movs	r3, #0
 1496 0048 80F83830 		strb	r3, [r0, #56]
 912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1497              		.loc 1 912 0
 1498 004c 0168     		ldr	r1, [r0]
 1499              	.LVL134:
 1500 004e CA68     		ldr	r2, [r1, #12]
 1501              	.LVL135:
 1502 0050 42F48072 		orr	r2, r2, #256
 1503 0054 CA60     		str	r2, [r1, #12]
 1504              	.LVL136:
 915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1505              		.loc 1 915 0
 1506 0056 0168     		ldr	r1, [r0]
 1507 0058 4A69     		ldr	r2, [r1, #20]
 1508 005a 42F00102 		orr	r2, r2, #1
 1509 005e 4A61     		str	r2, [r1, #20]
 918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1510              		.loc 1 918 0
 1511 0060 0168     		ldr	r1, [r0]
 1512 0062 CA68     		ldr	r2, [r1, #12]
 1513 0064 42F02002 		orr	r2, r2, #32
 1514 0068 CA60     		str	r2, [r1, #12]
 920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1515              		.loc 1 920 0
 1516 006a 1846     		mov	r0, r3
 1517              	.LVL137:
 1518 006c 7047     		bx	lr
 1519              	.LVL138:
 1520              	.L111:
 924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1521              		.loc 1 924 0
 1522 006e 0220     		movs	r0, #2
 1523              	.LVL139:
 1524 0070 7047     		bx	lr
 1525              	.LVL140:
 1526              	.L112:
 887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1527              		.loc 1 887 0
 1528 0072 0120     		movs	r0, #1
 1529              	.LVL141:
 1530 0074 7047     		bx	lr
 1531              	.LVL142:
 1532              	.L113:
 1533 0076 0120     		movs	r0, #1
 1534              	.LVL143:
 1535 0078 7047     		bx	lr
ARM GAS  /tmp/ccFOILL8.s 			page 65


 1536              	.LVL144:
 1537              	.L114:
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1538              		.loc 1 891 0
 1539 007a 0220     		movs	r0, #2
 1540              	.LVL145:
 926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1541              		.loc 1 926 0
 1542 007c 7047     		bx	lr
 1543              		.cfi_endproc
 1544              	.LFE73:
 1546 007e 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1547              		.align	2
 1548              		.global	HAL_UART_Transmit_DMA
 1549              		.thumb
 1550              		.thumb_func
 1552              	HAL_UART_Transmit_DMA:
 1553              	.LFB74:
 937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1554              		.loc 1 937 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              	.LVL146:
 1559 0000 10B5     		push	{r4, lr}
 1560              	.LCFI14:
 1561              		.cfi_def_cfa_offset 8
 1562              		.cfi_offset 4, -8
 1563              		.cfi_offset 14, -4
 1564 0002 0446     		mov	r4, r0
 1565 0004 1346     		mov	r3, r2
 1566              	.LVL147:
 941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_RX))
 1567              		.loc 1 941 0
 1568 0006 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 1569              	.LVL148:
 1570 000a D2B2     		uxtb	r2, r2
 1571              	.LVL149:
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1572              		.loc 1 942 0
 1573 000c 012A     		cmp	r2, #1
 1574 000e 01D0     		beq	.L116
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1575              		.loc 1 942 0 is_stmt 0 discriminator 1
 1576 0010 222A     		cmp	r2, #34
 1577 0012 36D1     		bne	.L120
 1578              	.L116:
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1579              		.loc 1 944 0 is_stmt 1
 1580 0014 0029     		cmp	r1, #0
 1581 0016 36D0     		beq	.L121
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1582              		.loc 1 944 0 is_stmt 0 discriminator 1
 1583 0018 002B     		cmp	r3, #0
 1584 001a 36D0     		beq	.L122
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1585              		.loc 1 950 0 is_stmt 1
ARM GAS  /tmp/ccFOILL8.s 			page 66


 1586 001c 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 1587              	.LVL150:
 1588 0020 012A     		cmp	r2, #1
 1589 0022 34D0     		beq	.L123
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1590              		.loc 1 950 0 is_stmt 0 discriminator 2
 1591 0024 0122     		movs	r2, #1
 1592 0026 84F83820 		strb	r2, [r4, #56]
 952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1593              		.loc 1 952 0 is_stmt 1 discriminator 2
 1594 002a 2162     		str	r1, [r4, #32]
 953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1595              		.loc 1 953 0 discriminator 2
 1596 002c A384     		strh	r3, [r4, #36]	@ movhi
 954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1597              		.loc 1 954 0 discriminator 2
 1598 002e E384     		strh	r3, [r4, #38]	@ movhi
 956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 1599              		.loc 1 956 0 discriminator 2
 1600 0030 0022     		movs	r2, #0
 1601 0032 E263     		str	r2, [r4, #60]
 958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1602              		.loc 1 958 0 discriminator 2
 1603 0034 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1604 0038 D2B2     		uxtb	r2, r2
 1605 003a 222A     		cmp	r2, #34
 1606 003c 03D1     		bne	.L118
 960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1607              		.loc 1 960 0
 1608 003e 3222     		movs	r2, #50
 1609 0040 84F83920 		strb	r2, [r4, #57]
 1610 0044 02E0     		b	.L119
 1611              	.L118:
 964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1612              		.loc 1 964 0
 1613 0046 1222     		movs	r2, #18
 1614 0048 84F83920 		strb	r2, [r4, #57]
 1615              	.L119:
 968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1616              		.loc 1 968 0
 1617 004c 226B     		ldr	r2, [r4, #48]
 1618 004e 1148     		ldr	r0, .L125
 1619              	.LVL151:
 1620 0050 9062     		str	r0, [r2, #40]
 971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1621              		.loc 1 971 0
 1622 0052 226B     		ldr	r2, [r4, #48]
 1623 0054 1048     		ldr	r0, .L125+4
 1624 0056 D062     		str	r0, [r2, #44]
 974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1625              		.loc 1 974 0
 1626 0058 226B     		ldr	r2, [r4, #48]
 1627 005a 1048     		ldr	r0, .L125+8
 1628 005c 1063     		str	r0, [r2, #48]
 1629              	.LVL152:
 978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1630              		.loc 1 978 0
ARM GAS  /tmp/ccFOILL8.s 			page 67


 1631 005e 2268     		ldr	r2, [r4]
 1632 0060 206B     		ldr	r0, [r4, #48]
 1633 0062 0432     		adds	r2, r2, #4
 1634 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1635              	.LVL153:
 981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1636              		.loc 1 981 0
 1637 0068 2368     		ldr	r3, [r4]
 1638 006a 6FF04002 		mvn	r2, #64
 1639 006e 1A60     		str	r2, [r3]
 985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1640              		.loc 1 985 0
 1641 0070 2268     		ldr	r2, [r4]
 1642 0072 5369     		ldr	r3, [r2, #20]
 1643 0074 43F08003 		orr	r3, r3, #128
 1644 0078 5361     		str	r3, [r2, #20]
 988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1645              		.loc 1 988 0
 1646 007a 0020     		movs	r0, #0
 1647 007c 84F83800 		strb	r0, [r4, #56]
 990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1648              		.loc 1 990 0
 1649 0080 10BD     		pop	{r4, pc}
 1650              	.LVL154:
 1651              	.L120:
 994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1652              		.loc 1 994 0
 1653 0082 0220     		movs	r0, #2
 1654              	.LVL155:
 1655 0084 10BD     		pop	{r4, pc}
 1656              	.LVL156:
 1657              	.L121:
 946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1658              		.loc 1 946 0
 1659 0086 0120     		movs	r0, #1
 1660              	.LVL157:
 1661 0088 10BD     		pop	{r4, pc}
 1662              	.LVL158:
 1663              	.L122:
 1664 008a 0120     		movs	r0, #1
 1665              	.LVL159:
 1666 008c 10BD     		pop	{r4, pc}
 1667              	.LVL160:
 1668              	.L123:
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1669              		.loc 1 950 0
 1670 008e 0220     		movs	r0, #2
 1671              	.LVL161:
 996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1672              		.loc 1 996 0
 1673 0090 10BD     		pop	{r4, pc}
 1674              	.LVL162:
 1675              	.L126:
 1676 0092 00BF     		.align	2
 1677              	.L125:
 1678 0094 00000000 		.word	UART_DMATransmitCplt
 1679 0098 00000000 		.word	UART_DMATxHalfCplt
ARM GAS  /tmp/ccFOILL8.s 			page 68


 1680 009c 00000000 		.word	UART_DMAError
 1681              		.cfi_endproc
 1682              	.LFE74:
 1684              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1685              		.align	2
 1686              		.global	HAL_UART_Receive_DMA
 1687              		.thumb
 1688              		.thumb_func
 1690              	HAL_UART_Receive_DMA:
 1691              	.LFB75:
1009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1692              		.loc 1 1009 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              	.LVL163:
 1697 0000 38B5     		push	{r3, r4, r5, lr}
 1698              	.LCFI15:
 1699              		.cfi_def_cfa_offset 16
 1700              		.cfi_offset 3, -16
 1701              		.cfi_offset 4, -12
 1702              		.cfi_offset 5, -8
 1703              		.cfi_offset 14, -4
 1704 0002 0446     		mov	r4, r0
 1705 0004 0D46     		mov	r5, r1
 1706 0006 1346     		mov	r3, r2
 1707              	.LVL164:
1013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_READY) || (tmp_state == HAL_UART_STATE_BUSY_TX))
 1708              		.loc 1 1013 0
 1709 0008 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 1710              	.LVL165:
 1711 000c D2B2     		uxtb	r2, r2
 1712              	.LVL166:
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1713              		.loc 1 1014 0
 1714 000e 012A     		cmp	r2, #1
 1715 0010 01D0     		beq	.L128
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1716              		.loc 1 1014 0 is_stmt 0 discriminator 1
 1717 0012 122A     		cmp	r2, #18
 1718 0014 32D1     		bne	.L132
 1719              	.L128:
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1720              		.loc 1 1016 0 is_stmt 1
 1721 0016 002D     		cmp	r5, #0
 1722 0018 32D0     		beq	.L133
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1723              		.loc 1 1016 0 is_stmt 0 discriminator 1
 1724 001a 002B     		cmp	r3, #0
 1725 001c 32D0     		beq	.L134
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1726              		.loc 1 1022 0 is_stmt 1
 1727 001e 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 1728              	.LVL167:
 1729 0022 012A     		cmp	r2, #1
 1730 0024 30D0     		beq	.L135
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 69


 1731              		.loc 1 1022 0 is_stmt 0 discriminator 2
 1732 0026 0122     		movs	r2, #1
 1733 0028 84F83820 		strb	r2, [r4, #56]
1024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1734              		.loc 1 1024 0 is_stmt 1 discriminator 2
 1735 002c A562     		str	r5, [r4, #40]
1025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1736              		.loc 1 1025 0 discriminator 2
 1737 002e A385     		strh	r3, [r4, #44]	@ movhi
1027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 1738              		.loc 1 1027 0 discriminator 2
 1739 0030 0022     		movs	r2, #0
 1740 0032 E263     		str	r2, [r4, #60]
1029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1741              		.loc 1 1029 0 discriminator 2
 1742 0034 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1743 0038 D2B2     		uxtb	r2, r2
 1744 003a 122A     		cmp	r2, #18
 1745 003c 03D1     		bne	.L130
1031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1746              		.loc 1 1031 0
 1747 003e 3222     		movs	r2, #50
 1748 0040 84F83920 		strb	r2, [r4, #57]
 1749 0044 02E0     		b	.L131
 1750              	.L130:
1035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1751              		.loc 1 1035 0
 1752 0046 2222     		movs	r2, #34
 1753 0048 84F83920 		strb	r2, [r4, #57]
 1754              	.L131:
1039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1755              		.loc 1 1039 0
 1756 004c 626B     		ldr	r2, [r4, #52]
 1757 004e 0F49     		ldr	r1, .L137
 1758              	.LVL168:
 1759 0050 9162     		str	r1, [r2, #40]
1042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1760              		.loc 1 1042 0
 1761 0052 626B     		ldr	r2, [r4, #52]
 1762 0054 0E49     		ldr	r1, .L137+4
 1763 0056 D162     		str	r1, [r2, #44]
1045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1764              		.loc 1 1045 0
 1765 0058 626B     		ldr	r2, [r4, #52]
 1766 005a 0E49     		ldr	r1, .L137+8
 1767 005c 1163     		str	r1, [r2, #48]
 1768              	.LVL169:
1049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1769              		.loc 1 1049 0
 1770 005e 2168     		ldr	r1, [r4]
 1771 0060 606B     		ldr	r0, [r4, #52]
 1772              	.LVL170:
 1773 0062 0431     		adds	r1, r1, #4
 1774 0064 2A46     		mov	r2, r5
 1775 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1776              	.LVL171:
1053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 70


 1777              		.loc 1 1053 0
 1778 006a 2268     		ldr	r2, [r4]
 1779 006c 5369     		ldr	r3, [r2, #20]
 1780 006e 43F04003 		orr	r3, r3, #64
 1781 0072 5361     		str	r3, [r2, #20]
1056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1782              		.loc 1 1056 0
 1783 0074 0020     		movs	r0, #0
 1784 0076 84F83800 		strb	r0, [r4, #56]
1058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1785              		.loc 1 1058 0
 1786 007a 38BD     		pop	{r3, r4, r5, pc}
 1787              	.LVL172:
 1788              	.L132:
1062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1789              		.loc 1 1062 0
 1790 007c 0220     		movs	r0, #2
 1791              	.LVL173:
 1792 007e 38BD     		pop	{r3, r4, r5, pc}
 1793              	.LVL174:
 1794              	.L133:
1018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1795              		.loc 1 1018 0
 1796 0080 0120     		movs	r0, #1
 1797              	.LVL175:
 1798 0082 38BD     		pop	{r3, r4, r5, pc}
 1799              	.LVL176:
 1800              	.L134:
 1801 0084 0120     		movs	r0, #1
 1802              	.LVL177:
 1803 0086 38BD     		pop	{r3, r4, r5, pc}
 1804              	.LVL178:
 1805              	.L135:
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1806              		.loc 1 1022 0
 1807 0088 0220     		movs	r0, #2
 1808              	.LVL179:
1064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1809              		.loc 1 1064 0
 1810 008a 38BD     		pop	{r3, r4, r5, pc}
 1811              	.LVL180:
 1812              	.L138:
 1813              		.align	2
 1814              	.L137:
 1815 008c 00000000 		.word	UART_DMAReceiveCplt
 1816 0090 00000000 		.word	UART_DMARxHalfCplt
 1817 0094 00000000 		.word	UART_DMAError
 1818              		.cfi_endproc
 1819              	.LFE75:
 1821              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1822              		.align	2
 1823              		.global	HAL_UART_DMAPause
 1824              		.thumb
 1825              		.thumb_func
 1827              	HAL_UART_DMAPause:
 1828              	.LFB76:
1073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccFOILL8.s 			page 71


 1829              		.loc 1 1073 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834              	.LVL181:
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1835              		.loc 1 1075 0
 1836 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1837 0004 012B     		cmp	r3, #1
 1838 0006 2DD0     		beq	.L145
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1839              		.loc 1 1075 0 is_stmt 0 discriminator 2
 1840 0008 0123     		movs	r3, #1
 1841 000a 80F83830 		strb	r3, [r0, #56]
1077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1842              		.loc 1 1077 0 is_stmt 1 discriminator 2
 1843 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1844 0012 DBB2     		uxtb	r3, r3
 1845 0014 122B     		cmp	r3, #18
 1846 0016 05D1     		bne	.L141
1080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1847              		.loc 1 1080 0
 1848 0018 0268     		ldr	r2, [r0]
 1849 001a 5369     		ldr	r3, [r2, #20]
 1850 001c 23F08003 		bic	r3, r3, #128
 1851 0020 5361     		str	r3, [r2, #20]
 1852 0022 1AE0     		b	.L142
 1853              	.L141:
1082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1854              		.loc 1 1082 0
 1855 0024 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1856 0028 DBB2     		uxtb	r3, r3
 1857 002a 222B     		cmp	r3, #34
 1858 002c 05D1     		bne	.L143
1085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1859              		.loc 1 1085 0
 1860 002e 0268     		ldr	r2, [r0]
 1861 0030 5369     		ldr	r3, [r2, #20]
 1862 0032 23F04003 		bic	r3, r3, #64
 1863 0036 5361     		str	r3, [r2, #20]
 1864 0038 0FE0     		b	.L142
 1865              	.L143:
1087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1866              		.loc 1 1087 0
 1867 003a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1868 003e DBB2     		uxtb	r3, r3
 1869 0040 322B     		cmp	r3, #50
 1870 0042 05D1     		bne	.L144
1090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1871              		.loc 1 1090 0
 1872 0044 0268     		ldr	r2, [r0]
 1873 0046 5369     		ldr	r3, [r2, #20]
 1874 0048 23F0C003 		bic	r3, r3, #192
 1875 004c 5361     		str	r3, [r2, #20]
 1876 004e 04E0     		b	.L142
 1877              	.L144:
ARM GAS  /tmp/ccFOILL8.s 			page 72


1095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1878              		.loc 1 1095 0
 1879 0050 0023     		movs	r3, #0
 1880 0052 80F83830 		strb	r3, [r0, #56]
1097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1881              		.loc 1 1097 0
 1882 0056 0120     		movs	r0, #1
 1883              	.LVL182:
 1884 0058 7047     		bx	lr
 1885              	.LVL183:
 1886              	.L142:
1101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1887              		.loc 1 1101 0
 1888 005a 0023     		movs	r3, #0
 1889 005c 80F83830 		strb	r3, [r0, #56]
1103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1890              		.loc 1 1103 0
 1891 0060 1846     		mov	r0, r3
 1892              	.LVL184:
 1893 0062 7047     		bx	lr
 1894              	.LVL185:
 1895              	.L145:
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1896              		.loc 1 1075 0
 1897 0064 0220     		movs	r0, #2
 1898              	.LVL186:
1104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1899              		.loc 1 1104 0
 1900 0066 7047     		bx	lr
 1901              		.cfi_endproc
 1902              	.LFE76:
 1904              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1905              		.align	2
 1906              		.global	HAL_UART_DMAResume
 1907              		.thumb
 1908              		.thumb_func
 1910              	HAL_UART_DMAResume:
 1911              	.LFB77:
1113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1912              		.loc 1 1113 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 8
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              		@ link register save eliminated.
 1917              	.LVL187:
 1918 0000 82B0     		sub	sp, sp, #8
 1919              	.LCFI16:
 1920              		.cfi_def_cfa_offset 8
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1921              		.loc 1 1115 0
 1922 0002 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1923 0006 012B     		cmp	r3, #1
 1924 0008 37D0     		beq	.L152
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1925              		.loc 1 1115 0 is_stmt 0 discriminator 2
 1926 000a 0123     		movs	r3, #1
 1927 000c 80F83830 		strb	r3, [r0, #56]
ARM GAS  /tmp/ccFOILL8.s 			page 73


1117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1928              		.loc 1 1117 0 is_stmt 1 discriminator 2
 1929 0010 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1930 0014 DBB2     		uxtb	r3, r3
 1931 0016 122B     		cmp	r3, #18
 1932 0018 05D1     		bne	.L148
1120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1933              		.loc 1 1120 0
 1934 001a 0268     		ldr	r2, [r0]
 1935 001c 5369     		ldr	r3, [r2, #20]
 1936 001e 43F08003 		orr	r3, r3, #128
 1937 0022 5361     		str	r3, [r2, #20]
 1938 0024 24E0     		b	.L149
 1939              	.L148:
1122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1940              		.loc 1 1122 0
 1941 0026 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1942 002a DBB2     		uxtb	r3, r3
 1943 002c 222B     		cmp	r3, #34
 1944 002e 0AD1     		bne	.L150
 1945              	.LBB2:
1125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
 1946              		.loc 1 1125 0
 1947 0030 0368     		ldr	r3, [r0]
 1948 0032 1A68     		ldr	r2, [r3]
 1949 0034 0092     		str	r2, [sp]
 1950 0036 5A68     		ldr	r2, [r3, #4]
 1951 0038 0092     		str	r2, [sp]
 1952 003a 009A     		ldr	r2, [sp]
 1953              	.LBE2:
1127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1954              		.loc 1 1127 0
 1955 003c 5A69     		ldr	r2, [r3, #20]
 1956 003e 42F04002 		orr	r2, r2, #64
 1957 0042 5A61     		str	r2, [r3, #20]
 1958 0044 14E0     		b	.L149
 1959              	.L150:
1129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1960              		.loc 1 1129 0
 1961 0046 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1962 004a DBB2     		uxtb	r3, r3
 1963 004c 322B     		cmp	r3, #50
 1964 004e 0AD1     		bne	.L151
 1965              	.LBB3:
1132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx & Rx request */
 1966              		.loc 1 1132 0
 1967 0050 0368     		ldr	r3, [r0]
 1968 0052 1A68     		ldr	r2, [r3]
 1969 0054 0192     		str	r2, [sp, #4]
 1970 0056 5A68     		ldr	r2, [r3, #4]
 1971 0058 0192     		str	r2, [sp, #4]
 1972 005a 019A     		ldr	r2, [sp, #4]
 1973              	.LBE3:
1134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1974              		.loc 1 1134 0
 1975 005c 5A69     		ldr	r2, [r3, #20]
 1976 005e 42F0C002 		orr	r2, r2, #192
ARM GAS  /tmp/ccFOILL8.s 			page 74


 1977 0062 5A61     		str	r2, [r3, #20]
 1978 0064 04E0     		b	.L149
 1979              	.L151:
1139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1980              		.loc 1 1139 0
 1981 0066 0023     		movs	r3, #0
 1982 0068 80F83830 		strb	r3, [r0, #56]
1141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1983              		.loc 1 1141 0
 1984 006c 0120     		movs	r0, #1
 1985              	.LVL188:
 1986 006e 05E0     		b	.L147
 1987              	.LVL189:
 1988              	.L149:
1145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1989              		.loc 1 1145 0
 1990 0070 0023     		movs	r3, #0
 1991 0072 80F83830 		strb	r3, [r0, #56]
1147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1992              		.loc 1 1147 0
 1993 0076 1846     		mov	r0, r3
 1994              	.LVL190:
 1995 0078 00E0     		b	.L147
 1996              	.LVL191:
 1997              	.L152:
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1998              		.loc 1 1115 0
 1999 007a 0220     		movs	r0, #2
 2000              	.LVL192:
 2001              	.L147:
1148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2002              		.loc 1 1148 0
 2003 007c 02B0     		add	sp, sp, #8
 2004              	.LCFI17:
 2005              		.cfi_def_cfa_offset 0
 2006              		@ sp needed
 2007 007e 7047     		bx	lr
 2008              		.cfi_endproc
 2009              	.LFE77:
 2011              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2012              		.align	2
 2013              		.global	HAL_UART_DMAStop
 2014              		.thumb
 2015              		.thumb_func
 2017              	HAL_UART_DMAStop:
 2018              	.LFB78:
1157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 2019              		.loc 1 1157 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 0, uses_anonymous_args = 0
 2023              	.LVL193:
 2024 0000 10B5     		push	{r4, lr}
 2025              	.LCFI18:
 2026              		.cfi_def_cfa_offset 8
 2027              		.cfi_offset 4, -8
 2028              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFOILL8.s 			page 75


 2029 0002 0446     		mov	r4, r0
1165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2030              		.loc 1 1165 0
 2031 0004 0268     		ldr	r2, [r0]
 2032 0006 5369     		ldr	r3, [r2, #20]
 2033 0008 23F0C003 		bic	r3, r3, #192
 2034 000c 5361     		str	r3, [r2, #20]
1168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2035              		.loc 1 1168 0
 2036 000e 006B     		ldr	r0, [r0, #48]
 2037              	.LVL194:
 2038 0010 08B1     		cbz	r0, .L155
1170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2039              		.loc 1 1170 0
 2040 0012 FFF7FEFF 		bl	HAL_DMA_Abort
 2041              	.LVL195:
 2042              	.L155:
1173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2043              		.loc 1 1173 0
 2044 0016 606B     		ldr	r0, [r4, #52]
 2045 0018 08B1     		cbz	r0, .L156
1175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2046              		.loc 1 1175 0
 2047 001a FFF7FEFF 		bl	HAL_DMA_Abort
 2048              	.LVL196:
 2049              	.L156:
1178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2050              		.loc 1 1178 0
 2051 001e 0123     		movs	r3, #1
 2052 0020 84F83930 		strb	r3, [r4, #57]
1181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2053              		.loc 1 1181 0
 2054 0024 0020     		movs	r0, #0
 2055 0026 10BD     		pop	{r4, pc}
 2056              		.cfi_endproc
 2057              	.LFE78:
 2059              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2060              		.align	2
 2061              		.weak	HAL_UART_TxCpltCallback
 2062              		.thumb
 2063              		.thumb_func
 2065              	HAL_UART_TxCpltCallback:
 2066              	.LFB80:
1266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2067              		.loc 1 1266 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 0
 2070              		@ frame_needed = 0, uses_anonymous_args = 0
 2071              		@ link register save eliminated.
 2072              	.LVL197:
 2073 0000 7047     		bx	lr
 2074              		.cfi_endproc
 2075              	.LFE80:
 2077 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2078              		.align	2
 2079              		.thumb
 2080              		.thumb_func
ARM GAS  /tmp/ccFOILL8.s 			page 76


 2082              	UART_DMATransmitCplt:
 2083              	.LFB92:
1553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2084              		.loc 1 1553 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 0
 2087              		@ frame_needed = 0, uses_anonymous_args = 0
 2088              	.LVL198:
1553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2089              		.loc 1 1553 0
 2090 0000 08B5     		push	{r3, lr}
 2091              	.LCFI19:
 2092              		.cfi_def_cfa_offset 8
 2093              		.cfi_offset 3, -8
 2094              		.cfi_offset 14, -4
1554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2095              		.loc 1 1554 0
 2096 0002 436A     		ldr	r3, [r0, #36]
 2097              	.LVL199:
1556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2098              		.loc 1 1556 0
 2099 0004 0268     		ldr	r2, [r0]
 2100 0006 1268     		ldr	r2, [r2]
 2101 0008 12F0200F 		tst	r2, #32
 2102 000c 12D1     		bne	.L160
1558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2103              		.loc 1 1558 0
 2104 000e 0022     		movs	r2, #0
 2105 0010 DA84     		strh	r2, [r3, #38]	@ movhi
1562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2106              		.loc 1 1562 0
 2107 0012 1968     		ldr	r1, [r3]
 2108 0014 4A69     		ldr	r2, [r1, #20]
 2109 0016 22F08002 		bic	r2, r2, #128
 2110 001a 4A61     		str	r2, [r1, #20]
1565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->State=HAL_UART_STATE_READY;  //<--- i add this line to solve the 
 2111              		.loc 1 1565 0
 2112 001c 1968     		ldr	r1, [r3]
 2113 001e CA68     		ldr	r2, [r1, #12]
 2114 0020 42F04002 		orr	r2, r2, #64
 2115 0024 CA60     		str	r2, [r1, #12]
1566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      HAL_UART_TxCpltCallback(huart);
 2116              		.loc 1 1566 0
 2117 0026 0122     		movs	r2, #1
 2118 0028 83F83920 		strb	r2, [r3, #57]
1567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2119              		.loc 1 1567 0
 2120 002c 1846     		mov	r0, r3
 2121              	.LVL200:
 2122 002e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2123              	.LVL201:
 2124 0032 08BD     		pop	{r3, pc}
 2125              	.LVL202:
 2126              	.L160:
1572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2127              		.loc 1 1572 0
 2128 0034 1846     		mov	r0, r3
ARM GAS  /tmp/ccFOILL8.s 			page 77


 2129              	.LVL203:
 2130 0036 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2131              	.LVL204:
 2132 003a 08BD     		pop	{r3, pc}
 2133              		.cfi_endproc
 2134              	.LFE92:
 2136              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2137              		.align	2
 2138              		.thumb
 2139              		.thumb_func
 2141              	UART_EndTransmit_IT:
 2142              	.LFB99:
1775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2143              		.loc 1 1775 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              	.LVL205:
 2148 0000 08B5     		push	{r3, lr}
 2149              	.LCFI20:
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 3, -8
 2152              		.cfi_offset 14, -4
1777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2153              		.loc 1 1777 0
 2154 0002 0268     		ldr	r2, [r0]
 2155 0004 D368     		ldr	r3, [r2, #12]
 2156 0006 23F04003 		bic	r3, r3, #64
 2157 000a D360     		str	r3, [r2, #12]
1780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2158              		.loc 1 1780 0
 2159 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2160 0010 DBB2     		uxtb	r3, r3
 2161 0012 322B     		cmp	r3, #50
 2162 0014 03D1     		bne	.L164
1782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2163              		.loc 1 1782 0
 2164 0016 2223     		movs	r3, #34
 2165 0018 80F83930 		strb	r3, [r0, #57]
 2166 001c 02E0     		b	.L165
 2167              	.L164:
1786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2168              		.loc 1 1786 0
 2169 001e 0123     		movs	r3, #1
 2170 0020 80F83930 		strb	r3, [r0, #57]
 2171              	.L165:
1789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2172              		.loc 1 1789 0
 2173 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2174              	.LVL206:
1792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2175              		.loc 1 1792 0
 2176 0028 0020     		movs	r0, #0
 2177 002a 08BD     		pop	{r3, pc}
 2178              		.cfi_endproc
 2179              	.LFE99:
 2181              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccFOILL8.s 			page 78


 2182              		.align	2
 2183              		.weak	HAL_UART_TxHalfCpltCallback
 2184              		.thumb
 2185              		.thumb_func
 2187              	HAL_UART_TxHalfCpltCallback:
 2188              	.LFB81:
1281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2189              		.loc 1 1281 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
 2194              	.LVL207:
 2195 0000 7047     		bx	lr
 2196              		.cfi_endproc
 2197              	.LFE81:
 2199 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2200              		.align	2
 2201              		.thumb
 2202              		.thumb_func
 2204              	UART_DMATxHalfCplt:
 2205              	.LFB93:
1583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2206              		.loc 1 1583 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210              	.LVL208:
1583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2211              		.loc 1 1583 0
 2212 0000 08B5     		push	{r3, lr}
 2213              	.LCFI21:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 3, -8
 2216              		.cfi_offset 14, -4
 2217              	.LVL209:
1586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2218              		.loc 1 1586 0
 2219 0002 406A     		ldr	r0, [r0, #36]
 2220              	.LVL210:
 2221 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2222              	.LVL211:
 2223 0008 08BD     		pop	{r3, pc}
 2224              		.cfi_endproc
 2225              	.LFE93:
 2227 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2228              		.align	2
 2229              		.weak	HAL_UART_RxCpltCallback
 2230              		.thumb
 2231              		.thumb_func
 2233              	HAL_UART_RxCpltCallback:
 2234              	.LFB82:
1296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2235              		.loc 1 1296 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFOILL8.s 			page 79


 2239              		@ link register save eliminated.
 2240              	.LVL212:
 2241 0000 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE82:
 2245 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2246              		.align	2
 2247              		.thumb
 2248              		.thumb_func
 2250              	UART_DMAReceiveCplt:
 2251              	.LFB94:
1596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2252              		.loc 1 1596 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 0, uses_anonymous_args = 0
 2256              	.LVL213:
1596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2257              		.loc 1 1596 0
 2258 0000 08B5     		push	{r3, lr}
 2259              	.LCFI22:
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 3, -8
 2262              		.cfi_offset 14, -4
1597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2263              		.loc 1 1597 0
 2264 0002 436A     		ldr	r3, [r0, #36]
 2265              	.LVL214:
1599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2266              		.loc 1 1599 0
 2267 0004 0268     		ldr	r2, [r0]
 2268 0006 1268     		ldr	r2, [r2]
 2269 0008 12F0200F 		tst	r2, #32
 2270 000c 12D1     		bne	.L172
1601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2271              		.loc 1 1601 0
 2272 000e 0022     		movs	r2, #0
 2273 0010 DA85     		strh	r2, [r3, #46]	@ movhi
1605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2274              		.loc 1 1605 0
 2275 0012 1968     		ldr	r1, [r3]
 2276 0014 4A69     		ldr	r2, [r1, #20]
 2277 0016 22F04002 		bic	r2, r2, #64
 2278 001a 4A61     		str	r2, [r1, #20]
1608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2279              		.loc 1 1608 0
 2280 001c 93F83920 		ldrb	r2, [r3, #57]	@ zero_extendqisi2
 2281 0020 D2B2     		uxtb	r2, r2
 2282 0022 322A     		cmp	r2, #50
 2283 0024 03D1     		bne	.L173
1610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2284              		.loc 1 1610 0
 2285 0026 1222     		movs	r2, #18
 2286 0028 83F83920 		strb	r2, [r3, #57]
 2287 002c 02E0     		b	.L172
 2288              	.L173:
1614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /tmp/ccFOILL8.s 			page 80


 2289              		.loc 1 1614 0
 2290 002e 0122     		movs	r2, #1
 2291 0030 83F83920 		strb	r2, [r3, #57]
 2292              	.L172:
1617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2293              		.loc 1 1617 0
 2294 0034 1846     		mov	r0, r3
 2295              	.LVL215:
 2296 0036 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2297              	.LVL216:
 2298 003a 08BD     		pop	{r3, pc}
 2299              		.cfi_endproc
 2300              	.LFE94:
 2302              		.section	.text.UART_Receive_IT,"ax",%progbits
 2303              		.align	2
 2304              		.thumb
 2305              		.thumb_func
 2307              	UART_Receive_IT:
 2308              	.LFB100:
1801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 2309              		.loc 1 1801 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313              	.LVL217:
 2314 0000 08B5     		push	{r3, lr}
 2315              	.LCFI23:
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 3, -8
 2318              		.cfi_offset 14, -4
 2319              	.LVL218:
1805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((tmp_state == HAL_UART_STATE_BUSY_RX) || (tmp_state == HAL_UART_STATE_BUSY_TX_RX))
 2320              		.loc 1 1805 0
 2321 0002 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2322 0006 DBB2     		uxtb	r3, r3
 2323              	.LVL219:
1806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2324              		.loc 1 1806 0
 2325 0008 222B     		cmp	r3, #34
 2326 000a 01D0     		beq	.L176
1806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2327              		.loc 1 1806 0 is_stmt 0 discriminator 1
 2328 000c 322B     		cmp	r3, #50
 2329 000e 4CD1     		bne	.L184
 2330              	.L176:
1808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2331              		.loc 1 1808 0 is_stmt 1
 2332 0010 8368     		ldr	r3, [r0, #8]
 2333              	.LVL220:
 2334 0012 B3F5805F 		cmp	r3, #4096
 2335 0016 13D1     		bne	.L178
1810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2336              		.loc 1 1810 0
 2337 0018 836A     		ldr	r3, [r0, #40]
 2338              	.LVL221:
1811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2339              		.loc 1 1811 0
ARM GAS  /tmp/ccFOILL8.s 			page 81


 2340 001a 0269     		ldr	r2, [r0, #16]
 2341 001c 42B9     		cbnz	r2, .L179
1813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
 2342              		.loc 1 1813 0
 2343 001e 0268     		ldr	r2, [r0]
 2344 0020 5268     		ldr	r2, [r2, #4]
 2345 0022 C2F30802 		ubfx	r2, r2, #0, #9
 2346 0026 1A80     		strh	r2, [r3]	@ movhi
1814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2347              		.loc 1 1814 0
 2348 0028 836A     		ldr	r3, [r0, #40]
 2349              	.LVL222:
 2350 002a 0233     		adds	r3, r3, #2
 2351 002c 8362     		str	r3, [r0, #40]
 2352 002e 18E0     		b	.L180
 2353              	.LVL223:
 2354              	.L179:
1818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
 2355              		.loc 1 1818 0
 2356 0030 0268     		ldr	r2, [r0]
 2357 0032 5268     		ldr	r2, [r2, #4]
 2358 0034 D2B2     		uxtb	r2, r2
 2359 0036 1A80     		strh	r2, [r3]	@ movhi
1819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2360              		.loc 1 1819 0
 2361 0038 836A     		ldr	r3, [r0, #40]
 2362              	.LVL224:
 2363 003a 0133     		adds	r3, r3, #1
 2364 003c 8362     		str	r3, [r0, #40]
 2365 003e 10E0     		b	.L180
 2366              	.L178:
1824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2367              		.loc 1 1824 0
 2368 0040 0369     		ldr	r3, [r0, #16]
 2369 0042 33B9     		cbnz	r3, .L181
1826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2370              		.loc 1 1826 0
 2371 0044 836A     		ldr	r3, [r0, #40]
 2372 0046 5A1C     		adds	r2, r3, #1
 2373 0048 8262     		str	r2, [r0, #40]
 2374 004a 0268     		ldr	r2, [r0]
 2375 004c 5268     		ldr	r2, [r2, #4]
 2376 004e 1A70     		strb	r2, [r3]
 2377 0050 07E0     		b	.L180
 2378              	.L181:
1830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2379              		.loc 1 1830 0
 2380 0052 826A     		ldr	r2, [r0, #40]
 2381 0054 531C     		adds	r3, r2, #1
 2382 0056 8362     		str	r3, [r0, #40]
 2383 0058 0368     		ldr	r3, [r0]
 2384 005a 5B68     		ldr	r3, [r3, #4]
 2385 005c 03F07F03 		and	r3, r3, #127
 2386 0060 1370     		strb	r3, [r2]
 2387              	.L180:
1834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2388              		.loc 1 1834 0
ARM GAS  /tmp/ccFOILL8.s 			page 82


 2389 0062 C38D     		ldrh	r3, [r0, #46]
 2390 0064 013B     		subs	r3, r3, #1
 2391 0066 9BB2     		uxth	r3, r3
 2392 0068 C385     		strh	r3, [r0, #46]	@ movhi
 2393 006a 03BB     		cbnz	r3, .L185
1836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2394              		.loc 1 1836 0
 2395 006c 0268     		ldr	r2, [r0]
 2396 006e D368     		ldr	r3, [r2, #12]
 2397 0070 23F02003 		bic	r3, r3, #32
 2398 0074 D360     		str	r3, [r2, #12]
1839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2399              		.loc 1 1839 0
 2400 0076 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2401 007a DBB2     		uxtb	r3, r3
 2402 007c 322B     		cmp	r3, #50
 2403 007e 03D1     		bne	.L182
1841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2404              		.loc 1 1841 0
 2405 0080 1223     		movs	r3, #18
 2406 0082 80F83930 		strb	r3, [r0, #57]
 2407 0086 0CE0     		b	.L183
 2408              	.L182:
1846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2409              		.loc 1 1846 0
 2410 0088 0268     		ldr	r2, [r0]
 2411 008a D368     		ldr	r3, [r2, #12]
 2412 008c 23F48073 		bic	r3, r3, #256
 2413 0090 D360     		str	r3, [r2, #12]
1849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2414              		.loc 1 1849 0
 2415 0092 0268     		ldr	r2, [r0]
 2416 0094 5369     		ldr	r3, [r2, #20]
 2417 0096 23F00103 		bic	r3, r3, #1
 2418 009a 5361     		str	r3, [r2, #20]
1851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2419              		.loc 1 1851 0
 2420 009c 0123     		movs	r3, #1
 2421 009e 80F83930 		strb	r3, [r0, #57]
 2422              	.L183:
1853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2423              		.loc 1 1853 0
 2424 00a2 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2425              	.LVL225:
1855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2426              		.loc 1 1855 0
 2427 00a6 0020     		movs	r0, #0
 2428 00a8 08BD     		pop	{r3, pc}
 2429              	.LVL226:
 2430              	.L184:
1861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2431              		.loc 1 1861 0
 2432 00aa 0220     		movs	r0, #2
 2433              	.LVL227:
 2434 00ac 08BD     		pop	{r3, pc}
 2435              	.LVL228:
 2436              	.L185:
ARM GAS  /tmp/ccFOILL8.s 			page 83


1857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2437              		.loc 1 1857 0
 2438 00ae 0020     		movs	r0, #0
 2439              	.LVL229:
1863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2440              		.loc 1 1863 0
 2441 00b0 08BD     		pop	{r3, pc}
 2442              		.cfi_endproc
 2443              	.LFE100:
 2445 00b2 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2446              		.align	2
 2447              		.weak	HAL_UART_RxHalfCpltCallback
 2448              		.thumb
 2449              		.thumb_func
 2451              	HAL_UART_RxHalfCpltCallback:
 2452              	.LFB83:
1311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2453              		.loc 1 1311 0
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 0
 2456              		@ frame_needed = 0, uses_anonymous_args = 0
 2457              		@ link register save eliminated.
 2458              	.LVL230:
 2459 0000 7047     		bx	lr
 2460              		.cfi_endproc
 2461              	.LFE83:
 2463 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2464              		.align	2
 2465              		.thumb
 2466              		.thumb_func
 2468              	UART_DMARxHalfCplt:
 2469              	.LFB95:
1627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2470              		.loc 1 1627 0
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 0
 2473              		@ frame_needed = 0, uses_anonymous_args = 0
 2474              	.LVL231:
1627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2475              		.loc 1 1627 0
 2476 0000 08B5     		push	{r3, lr}
 2477              	.LCFI24:
 2478              		.cfi_def_cfa_offset 8
 2479              		.cfi_offset 3, -8
 2480              		.cfi_offset 14, -4
 2481              	.LVL232:
1630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2482              		.loc 1 1630 0
 2483 0002 406A     		ldr	r0, [r0, #36]
 2484              	.LVL233:
 2485 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2486              	.LVL234:
 2487 0008 08BD     		pop	{r3, pc}
 2488              		.cfi_endproc
 2489              	.LFE95:
 2491 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2492              		.align	2
ARM GAS  /tmp/ccFOILL8.s 			page 84


 2493              		.weak	HAL_UART_ErrorCallback
 2494              		.thumb
 2495              		.thumb_func
 2497              	HAL_UART_ErrorCallback:
 2498              	.LFB84:
1326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2499              		.loc 1 1326 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503              		@ link register save eliminated.
 2504              	.LVL235:
 2505 0000 7047     		bx	lr
 2506              		.cfi_endproc
 2507              	.LFE84:
 2509 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2510              		.align	2
 2511              		.thumb
 2512              		.thumb_func
 2514              	UART_DMAError:
 2515              	.LFB96:
1640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2516              		.loc 1 1640 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              	.LVL236:
1640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2521              		.loc 1 1640 0
 2522 0000 08B5     		push	{r3, lr}
 2523              	.LCFI25:
 2524              		.cfi_def_cfa_offset 8
 2525              		.cfi_offset 3, -8
 2526              		.cfi_offset 14, -4
1641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0;
 2527              		.loc 1 1641 0
 2528 0002 406A     		ldr	r0, [r0, #36]
 2529              	.LVL237:
1642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0;
 2530              		.loc 1 1642 0
 2531 0004 0023     		movs	r3, #0
 2532 0006 C385     		strh	r3, [r0, #46]	@ movhi
1643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 2533              		.loc 1 1643 0
 2534 0008 C384     		strh	r3, [r0, #38]	@ movhi
1644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 2535              		.loc 1 1644 0
 2536 000a 0123     		movs	r3, #1
 2537 000c 80F83930 		strb	r3, [r0, #57]
1645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2538              		.loc 1 1645 0
 2539 0010 C36B     		ldr	r3, [r0, #60]
 2540 0012 43F01003 		orr	r3, r3, #16
 2541 0016 C363     		str	r3, [r0, #60]
1646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2542              		.loc 1 1646 0
 2543 0018 FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccFOILL8.s 			page 85


 2544              	.LVL238:
 2545 001c 08BD     		pop	{r3, pc}
 2546              		.cfi_endproc
 2547              	.LFE96:
 2549 001e 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2550              		.align	2
 2551              		.global	HAL_UART_IRQHandler
 2552              		.thumb
 2553              		.thumb_func
 2555              	HAL_UART_IRQHandler:
 2556              	.LFB79:
1190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmp_flag = 0, tmp_it_source = 0;
 2557              		.loc 1 1190 0
 2558              		.cfi_startproc
 2559              		@ args = 0, pretend = 0, frame = 8
 2560              		@ frame_needed = 0, uses_anonymous_args = 0
 2561              	.LVL239:
 2562 0000 10B5     		push	{r4, lr}
 2563              	.LCFI26:
 2564              		.cfi_def_cfa_offset 8
 2565              		.cfi_offset 4, -8
 2566              		.cfi_offset 14, -4
 2567 0002 82B0     		sub	sp, sp, #8
 2568              	.LCFI27:
 2569              		.cfi_def_cfa_offset 16
 2570 0004 0446     		mov	r4, r0
 2571              	.LVL240:
1193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
 2572              		.loc 1 1193 0
 2573 0006 0368     		ldr	r3, [r0]
 2574 0008 1968     		ldr	r1, [r3]
 2575              	.LVL241:
1194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART parity error interrupt occurred ------------------------------------*/
 2576              		.loc 1 1194 0
 2577 000a DA68     		ldr	r2, [r3, #12]
 2578 000c 02F48072 		and	r2, r2, #256
 2579              	.LVL242:
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2580              		.loc 1 1196 0
 2581 0010 11F0010F 		tst	r1, #1
 2582 0014 04D0     		beq	.L194
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2583              		.loc 1 1196 0 is_stmt 0 discriminator 1
 2584 0016 1AB1     		cbz	r2, .L194
1198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2585              		.loc 1 1198 0 is_stmt 1
 2586 0018 C26B     		ldr	r2, [r0, #60]
 2587              	.LVL243:
 2588 001a 42F00102 		orr	r2, r2, #1
 2589 001e C263     		str	r2, [r0, #60]
 2590              	.L194:
1201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 2591              		.loc 1 1201 0
 2592 0020 1968     		ldr	r1, [r3]
 2593              	.LVL244:
1202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART frame error interrupt occurred -------------------------------------*/
 2594              		.loc 1 1202 0
ARM GAS  /tmp/ccFOILL8.s 			page 86


 2595 0022 5A69     		ldr	r2, [r3, #20]
 2596 0024 02F00102 		and	r2, r2, #1
 2597              	.LVL245:
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2598              		.loc 1 1204 0
 2599 0028 11F0020F 		tst	r1, #2
 2600 002c 04D0     		beq	.L195
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2601              		.loc 1 1204 0 is_stmt 0 discriminator 1
 2602 002e 1AB1     		cbz	r2, .L195
1206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2603              		.loc 1 1206 0 is_stmt 1
 2604 0030 E16B     		ldr	r1, [r4, #60]
 2605              	.LVL246:
 2606 0032 41F00401 		orr	r1, r1, #4
 2607 0036 E163     		str	r1, [r4, #60]
 2608              	.L195:
1209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART noise error interrupt occurred -------------------------------------*/
 2609              		.loc 1 1209 0
 2610 0038 1968     		ldr	r1, [r3]
 2611              	.LVL247:
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2612              		.loc 1 1211 0
 2613 003a 11F0040F 		tst	r1, #4
 2614 003e 04D0     		beq	.L196
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2615              		.loc 1 1211 0 is_stmt 0 discriminator 1
 2616 0040 1AB1     		cbz	r2, .L196
1213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2617              		.loc 1 1213 0 is_stmt 1
 2618 0042 E16B     		ldr	r1, [r4, #60]
 2619              	.LVL248:
 2620 0044 41F00201 		orr	r1, r1, #2
 2621 0048 E163     		str	r1, [r4, #60]
 2622              	.L196:
1216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART Over-Run interrupt occurred ----------------------------------------*/
 2623              		.loc 1 1216 0
 2624 004a 1968     		ldr	r1, [r3]
 2625              	.LVL249:
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2626              		.loc 1 1218 0
 2627 004c 11F0080F 		tst	r1, #8
 2628 0050 04D0     		beq	.L197
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2629              		.loc 1 1218 0 is_stmt 0 discriminator 1
 2630 0052 1AB1     		cbz	r2, .L197
1220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2631              		.loc 1 1220 0 is_stmt 1
 2632 0054 E26B     		ldr	r2, [r4, #60]
 2633              	.LVL250:
 2634 0056 42F00802 		orr	r2, r2, #8
 2635 005a E263     		str	r2, [r4, #60]
 2636              	.L197:
1223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
 2637              		.loc 1 1223 0
 2638 005c 1A68     		ldr	r2, [r3]
 2639              	.LVL251:
ARM GAS  /tmp/ccFOILL8.s 			page 87


1224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
 2640              		.loc 1 1224 0
 2641 005e DB68     		ldr	r3, [r3, #12]
 2642 0060 03F02003 		and	r3, r3, #32
 2643              	.LVL252:
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2644              		.loc 1 1226 0
 2645 0064 12F0200F 		tst	r2, #32
 2646 0068 03D0     		beq	.L198
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   { 
 2647              		.loc 1 1226 0 is_stmt 0 discriminator 1
 2648 006a 13B1     		cbz	r3, .L198
1228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2649              		.loc 1 1228 0 is_stmt 1
 2650 006c 2046     		mov	r0, r4
 2651              	.LVL253:
 2652 006e FFF7FEFF 		bl	UART_Receive_IT
 2653              	.LVL254:
 2654              	.L198:
1231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
 2655              		.loc 1 1231 0
 2656 0072 2368     		ldr	r3, [r4]
 2657 0074 1A68     		ldr	r2, [r3]
 2658              	.LVL255:
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
 2659              		.loc 1 1232 0
 2660 0076 DB68     		ldr	r3, [r3, #12]
 2661 0078 03F08003 		and	r3, r3, #128
 2662              	.LVL256:
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2663              		.loc 1 1234 0
 2664 007c 12F0800F 		tst	r2, #128
 2665 0080 03D0     		beq	.L199
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2666              		.loc 1 1234 0 is_stmt 0 discriminator 1
 2667 0082 13B1     		cbz	r3, .L199
1236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2668              		.loc 1 1236 0 is_stmt 1
 2669 0084 2046     		mov	r0, r4
 2670 0086 FFF7FEFF 		bl	UART_Transmit_IT
 2671              	.LVL257:
 2672              	.L199:
1239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
 2673              		.loc 1 1239 0
 2674 008a 2368     		ldr	r3, [r4]
 2675 008c 1A68     		ldr	r2, [r3]
 2676              	.LVL258:
1240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
 2677              		.loc 1 1240 0
 2678 008e DB68     		ldr	r3, [r3, #12]
 2679 0090 03F04003 		and	r3, r3, #64
 2680              	.LVL259:
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2681              		.loc 1 1242 0
 2682 0094 12F0400F 		tst	r2, #64
 2683 0098 03D0     		beq	.L200
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccFOILL8.s 			page 88


 2684              		.loc 1 1242 0 is_stmt 0 discriminator 1
 2685 009a 13B1     		cbz	r3, .L200
1244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
 2686              		.loc 1 1244 0 is_stmt 1
 2687 009c 2046     		mov	r0, r4
 2688 009e FFF7FEFF 		bl	UART_EndTransmit_IT
 2689              	.LVL260:
 2690              	.L200:
1247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2691              		.loc 1 1247 0
 2692 00a2 E36B     		ldr	r3, [r4, #60]
 2693 00a4 5BB1     		cbz	r3, .L193
 2694              	.LBB4:
1250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 2695              		.loc 1 1250 0
 2696 00a6 2368     		ldr	r3, [r4]
 2697 00a8 1A68     		ldr	r2, [r3]
 2698 00aa 0192     		str	r2, [sp, #4]
 2699 00ac 5B68     		ldr	r3, [r3, #4]
 2700 00ae 0193     		str	r3, [sp, #4]
 2701 00b0 019B     		ldr	r3, [sp, #4]
 2702              	.LBE4:
1253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 2703              		.loc 1 1253 0
 2704 00b2 0123     		movs	r3, #1
 2705 00b4 84F83930 		strb	r3, [r4, #57]
1255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }  
 2706              		.loc 1 1255 0
 2707 00b8 2046     		mov	r0, r4
 2708 00ba FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2709              	.LVL261:
 2710              	.L193:
1257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2711              		.loc 1 1257 0
 2712 00be 02B0     		add	sp, sp, #8
 2713              	.LCFI28:
 2714              		.cfi_def_cfa_offset 8
 2715              		@ sp needed
 2716 00c0 10BD     		pop	{r4, pc}
 2717              		.cfi_endproc
 2718              	.LFE79:
 2720 00c2 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2721              		.align	2
 2722              		.global	HAL_LIN_SendBreak
 2723              		.thumb
 2724              		.thumb_func
 2726              	HAL_LIN_SendBreak:
 2727              	.LFB85:
1364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 2728              		.loc 1 1364 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 2732              		@ link register save eliminated.
 2733              	.LVL262:
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2734              		.loc 1 1369 0
ARM GAS  /tmp/ccFOILL8.s 			page 89


 2735 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2736 0004 012B     		cmp	r3, #1
 2737 0006 10D0     		beq	.L205
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2738              		.loc 1 1369 0 is_stmt 0 discriminator 2
 2739 0008 0122     		movs	r2, #1
 2740 000a 80F83820 		strb	r2, [r0, #56]
1371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2741              		.loc 1 1371 0 is_stmt 1 discriminator 2
 2742 000e 0223     		movs	r3, #2
 2743 0010 80F83930 		strb	r3, [r0, #57]
1374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 2744              		.loc 1 1374 0 discriminator 2
 2745 0014 0168     		ldr	r1, [r0]
 2746 0016 CB68     		ldr	r3, [r1, #12]
 2747 0018 1343     		orrs	r3, r3, r2
 2748 001a CB60     		str	r3, [r1, #12]
1376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2749              		.loc 1 1376 0 discriminator 2
 2750 001c 80F83920 		strb	r2, [r0, #57]
1379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2751              		.loc 1 1379 0 discriminator 2
 2752 0020 0023     		movs	r3, #0
 2753 0022 80F83830 		strb	r3, [r0, #56]
1381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2754              		.loc 1 1381 0 discriminator 2
 2755 0026 1846     		mov	r0, r3
 2756              	.LVL263:
 2757 0028 7047     		bx	lr
 2758              	.LVL264:
 2759              	.L205:
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2760              		.loc 1 1369 0
 2761 002a 0220     		movs	r0, #2
 2762              	.LVL265:
1382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2763              		.loc 1 1382 0
 2764 002c 7047     		bx	lr
 2765              		.cfi_endproc
 2766              	.LFE85:
 2768 002e 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2769              		.align	2
 2770              		.global	HAL_MultiProcessor_EnterMuteMode
 2771              		.thumb
 2772              		.thumb_func
 2774              	HAL_MultiProcessor_EnterMuteMode:
 2775              	.LFB86:
1391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 2776              		.loc 1 1391 0
 2777              		.cfi_startproc
 2778              		@ args = 0, pretend = 0, frame = 0
 2779              		@ frame_needed = 0, uses_anonymous_args = 0
 2780              		@ link register save eliminated.
 2781              	.LVL266:
1396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2782              		.loc 1 1396 0
 2783 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
ARM GAS  /tmp/ccFOILL8.s 			page 90


 2784 0004 012B     		cmp	r3, #1
 2785 0006 11D0     		beq	.L208
1396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2786              		.loc 1 1396 0 is_stmt 0 discriminator 2
 2787 0008 0122     		movs	r2, #1
 2788 000a 80F83820 		strb	r2, [r0, #56]
1398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2789              		.loc 1 1398 0 is_stmt 1 discriminator 2
 2790 000e 0223     		movs	r3, #2
 2791 0010 80F83930 		strb	r3, [r0, #57]
1401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2792              		.loc 1 1401 0 discriminator 2
 2793 0014 0168     		ldr	r1, [r0]
 2794 0016 CB68     		ldr	r3, [r1, #12]
 2795 0018 43F00203 		orr	r3, r3, #2
 2796 001c CB60     		str	r3, [r1, #12]
1403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2797              		.loc 1 1403 0 discriminator 2
 2798 001e 80F83920 		strb	r2, [r0, #57]
1406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2799              		.loc 1 1406 0 discriminator 2
 2800 0022 0023     		movs	r3, #0
 2801 0024 80F83830 		strb	r3, [r0, #56]
1408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2802              		.loc 1 1408 0 discriminator 2
 2803 0028 1846     		mov	r0, r3
 2804              	.LVL267:
 2805 002a 7047     		bx	lr
 2806              	.LVL268:
 2807              	.L208:
1396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2808              		.loc 1 1396 0
 2809 002c 0220     		movs	r0, #2
 2810              	.LVL269:
1409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2811              		.loc 1 1409 0
 2812 002e 7047     		bx	lr
 2813              		.cfi_endproc
 2814              	.LFE86:
 2816              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 2817              		.align	2
 2818              		.global	HAL_MultiProcessor_ExitMuteMode
 2819              		.thumb
 2820              		.thumb_func
 2822              	HAL_MultiProcessor_ExitMuteMode:
 2823              	.LFB87:
1418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 2824              		.loc 1 1418 0
 2825              		.cfi_startproc
 2826              		@ args = 0, pretend = 0, frame = 0
 2827              		@ frame_needed = 0, uses_anonymous_args = 0
 2828              		@ link register save eliminated.
 2829              	.LVL270:
1423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2830              		.loc 1 1423 0
 2831 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2832 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/ccFOILL8.s 			page 91


 2833 0006 11D0     		beq	.L211
1423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2834              		.loc 1 1423 0 is_stmt 0 discriminator 2
 2835 0008 0122     		movs	r2, #1
 2836 000a 80F83820 		strb	r2, [r0, #56]
1425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2837              		.loc 1 1425 0 is_stmt 1 discriminator 2
 2838 000e 0223     		movs	r3, #2
 2839 0010 80F83930 		strb	r3, [r0, #57]
1428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2840              		.loc 1 1428 0 discriminator 2
 2841 0014 0168     		ldr	r1, [r0]
 2842 0016 CB68     		ldr	r3, [r1, #12]
 2843 0018 23F00203 		bic	r3, r3, #2
 2844 001c CB60     		str	r3, [r1, #12]
1430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2845              		.loc 1 1430 0 discriminator 2
 2846 001e 80F83920 		strb	r2, [r0, #57]
1433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2847              		.loc 1 1433 0 discriminator 2
 2848 0022 0023     		movs	r3, #0
 2849 0024 80F83830 		strb	r3, [r0, #56]
1435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2850              		.loc 1 1435 0 discriminator 2
 2851 0028 1846     		mov	r0, r3
 2852              	.LVL271:
 2853 002a 7047     		bx	lr
 2854              	.LVL272:
 2855              	.L211:
1423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2856              		.loc 1 1423 0
 2857 002c 0220     		movs	r0, #2
 2858              	.LVL273:
1436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2859              		.loc 1 1436 0
 2860 002e 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE87:
 2864              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2865              		.align	2
 2866              		.global	HAL_HalfDuplex_EnableTransmitter
 2867              		.thumb
 2868              		.thumb_func
 2870              	HAL_HalfDuplex_EnableTransmitter:
 2871              	.LFB88:
1445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 2872              		.loc 1 1445 0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
 2876              		@ link register save eliminated.
 2877              	.LVL274:
1447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2878              		.loc 1 1447 0
 2879 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2880 0004 012B     		cmp	r3, #1
 2881 0006 13D0     		beq	.L214
ARM GAS  /tmp/ccFOILL8.s 			page 92


1447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2882              		.loc 1 1447 0 is_stmt 0 discriminator 2
 2883 0008 0122     		movs	r2, #1
 2884 000a 80F83820 		strb	r2, [r0, #56]
1449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2885              		.loc 1 1449 0 is_stmt 1 discriminator 2
 2886 000e 0223     		movs	r3, #2
 2887 0010 80F83930 		strb	r3, [r0, #57]
1454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 2888              		.loc 1 1454 0 discriminator 2
 2889 0014 0168     		ldr	r1, [r0]
 2890 0016 CB68     		ldr	r3, [r1, #12]
 2891 0018 23F00C03 		bic	r3, r3, #12
 2892 001c 43F00803 		orr	r3, r3, #8
 2893 0020 CB60     		str	r3, [r1, #12]
1456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2894              		.loc 1 1456 0 discriminator 2
 2895 0022 80F83920 		strb	r2, [r0, #57]
1459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2896              		.loc 1 1459 0 discriminator 2
 2897 0026 0023     		movs	r3, #0
 2898 0028 80F83830 		strb	r3, [r0, #56]
1461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2899              		.loc 1 1461 0 discriminator 2
 2900 002c 1846     		mov	r0, r3
 2901              	.LVL275:
 2902 002e 7047     		bx	lr
 2903              	.LVL276:
 2904              	.L214:
1447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2905              		.loc 1 1447 0
 2906 0030 0220     		movs	r0, #2
 2907              	.LVL277:
1462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2908              		.loc 1 1462 0
 2909 0032 7047     		bx	lr
 2910              		.cfi_endproc
 2911              	.LFE88:
 2913              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2914              		.align	2
 2915              		.global	HAL_HalfDuplex_EnableReceiver
 2916              		.thumb
 2917              		.thumb_func
 2919              	HAL_HalfDuplex_EnableReceiver:
 2920              	.LFB89:
1471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 2921              		.loc 1 1471 0
 2922              		.cfi_startproc
 2923              		@ args = 0, pretend = 0, frame = 0
 2924              		@ frame_needed = 0, uses_anonymous_args = 0
 2925              		@ link register save eliminated.
 2926              	.LVL278:
1473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2927              		.loc 1 1473 0
 2928 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2929 0004 012B     		cmp	r3, #1
 2930 0006 13D0     		beq	.L217
ARM GAS  /tmp/ccFOILL8.s 			page 93


1473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2931              		.loc 1 1473 0 is_stmt 0 discriminator 2
 2932 0008 0122     		movs	r2, #1
 2933 000a 80F83820 		strb	r2, [r0, #56]
1475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2934              		.loc 1 1475 0 is_stmt 1 discriminator 2
 2935 000e 0223     		movs	r3, #2
 2936 0010 80F83930 		strb	r3, [r0, #57]
1480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2937              		.loc 1 1480 0 discriminator 2
 2938 0014 0168     		ldr	r1, [r0]
 2939 0016 CB68     		ldr	r3, [r1, #12]
 2940 0018 23F00C03 		bic	r3, r3, #12
 2941 001c 43F00403 		orr	r3, r3, #4
 2942 0020 CB60     		str	r3, [r1, #12]
1482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2943              		.loc 1 1482 0 discriminator 2
 2944 0022 80F83920 		strb	r2, [r0, #57]
1485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2945              		.loc 1 1485 0 discriminator 2
 2946 0026 0023     		movs	r3, #0
 2947 0028 80F83830 		strb	r3, [r0, #56]
1487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2948              		.loc 1 1487 0 discriminator 2
 2949 002c 1846     		mov	r0, r3
 2950              	.LVL279:
 2951 002e 7047     		bx	lr
 2952              	.LVL280:
 2953              	.L217:
1473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2954              		.loc 1 1473 0
 2955 0030 0220     		movs	r0, #2
 2956              	.LVL281:
1488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2957              		.loc 1 1488 0
 2958 0032 7047     		bx	lr
 2959              		.cfi_endproc
 2960              	.LFE89:
 2962              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2963              		.align	2
 2964              		.global	HAL_UART_GetState
 2965              		.thumb
 2966              		.thumb_func
 2968              	HAL_UART_GetState:
 2969              	.LFB90:
1519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->State;
 2970              		.loc 1 1519 0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 0
 2973              		@ frame_needed = 0, uses_anonymous_args = 0
 2974              		@ link register save eliminated.
 2975              	.LVL282:
1520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2976              		.loc 1 1520 0
 2977 0000 90F83900 		ldrb	r0, [r0, #57]	@ zero_extendqisi2
 2978              	.LVL283:
1521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccFOILL8.s 			page 94


 2979              		.loc 1 1521 0
 2980 0004 7047     		bx	lr
 2981              		.cfi_endproc
 2982              	.LFE90:
 2984 0006 00BF     		.section	.text.HAL_UART_GetError,"ax",%progbits
 2985              		.align	2
 2986              		.global	HAL_UART_GetError
 2987              		.thumb
 2988              		.thumb_func
 2990              	HAL_UART_GetError:
 2991              	.LFB91:
1530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 2992              		.loc 1 1530 0
 2993              		.cfi_startproc
 2994              		@ args = 0, pretend = 0, frame = 0
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
 2996              		@ link register save eliminated.
 2997              	.LVL284:
1531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2998              		.loc 1 1531 0
 2999 0000 C06B     		ldr	r0, [r0, #60]
 3000              	.LVL285:
1532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3001              		.loc 1 1532 0
 3002 0002 7047     		bx	lr
 3003              		.cfi_endproc
 3004              	.LFE91:
 3006              		.text
 3007              	.Letext0:
 3008              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3009              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3010              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 3011              		.file 5 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3012              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3013              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3014              		.file 8 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 3015              		.file 9 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 3016              		.file 10 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3017              		.file 11 "./Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccFOILL8.s 			page 95


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
     /tmp/ccFOILL8.s:19     .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccFOILL8.s:23     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccFOILL8.s:118    .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccFOILL8.s:122    .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccFOILL8.s:303    .text.UART_SetConfig:00000000000001ac $d
     /tmp/ccFOILL8.s:309    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccFOILL8.s:313    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccFOILL8.s:456    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccFOILL8.s:461    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccFOILL8.s:474    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccFOILL8.s:479    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccFOILL8.s:555    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccFOILL8.s:560    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccFOILL8.s:642    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccFOILL8.s:647    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccFOILL8.s:741    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccFOILL8.s:746    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccFOILL8.s:842    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccFOILL8.s:847    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccFOILL8.s:860    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccFOILL8.s:865    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccFOILL8.s:929    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccFOILL8.s:934    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccFOILL8.s:1129   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccFOILL8.s:1134   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccFOILL8.s:1331   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccFOILL8.s:1336   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccFOILL8.s:1433   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccFOILL8.s:1438   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccFOILL8.s:1547   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccFOILL8.s:1552   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccFOILL8.s:1678   .text.HAL_UART_Transmit_DMA:0000000000000094 $d
     /tmp/ccFOILL8.s:2082   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccFOILL8.s:2204   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccFOILL8.s:2514   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccFOILL8.s:1685   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccFOILL8.s:1690   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccFOILL8.s:1815   .text.HAL_UART_Receive_DMA:000000000000008c $d
     /tmp/ccFOILL8.s:2250   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccFOILL8.s:2468   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccFOILL8.s:1822   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccFOILL8.s:1827   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccFOILL8.s:1905   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccFOILL8.s:1910   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccFOILL8.s:2012   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccFOILL8.s:2017   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccFOILL8.s:2060   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccFOILL8.s:2065   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccFOILL8.s:2078   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccFOILL8.s:2137   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccFOILL8.s:2141   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccFOILL8.s:2182   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccFOILL8.s:2187   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccFOILL8.s:2200   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccFOILL8.s:2228   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccFOILL8.s 			page 96


     /tmp/ccFOILL8.s:2233   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccFOILL8.s:2246   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccFOILL8.s:2303   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccFOILL8.s:2307   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccFOILL8.s:2446   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccFOILL8.s:2451   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccFOILL8.s:2464   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccFOILL8.s:2492   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccFOILL8.s:2497   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccFOILL8.s:2510   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccFOILL8.s:2550   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccFOILL8.s:2555   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccFOILL8.s:2721   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccFOILL8.s:2726   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccFOILL8.s:2769   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccFOILL8.s:2774   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccFOILL8.s:2817   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccFOILL8.s:2822   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccFOILL8.s:2865   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccFOILL8.s:2870   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccFOILL8.s:2914   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccFOILL8.s:2919   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccFOILL8.s:2963   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccFOILL8.s:2968   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccFOILL8.s:2985   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccFOILL8.s:2990   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
