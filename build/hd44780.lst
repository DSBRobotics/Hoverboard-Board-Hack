ARM GAS  /tmp/cc0YzIty.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"hd44780.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LCD_I2C_WriteOut,"ax",%progbits
  20              		.align	2
  21              		.global	LCD_I2C_WriteOut
  22              		.thumb
  23              		.thumb_func
  25              	LCD_I2C_WriteOut:
  26              	.LFB65:
  27              		.file 1 "./Src/hd44780.c"
   1:./Src/hd44780.c **** /*
   2:./Src/hd44780.c ****  *  * hd44780.c
   3:./Src/hd44780.c ****  *
   4:./Src/hd44780.c ****  *  Created on: Feb 20, 2014
   5:./Src/hd44780.c ****  *      Author: Peter
   6:./Src/hd44780.c ****  */
   7:./Src/hd44780.c **** 
   8:./Src/hd44780.c **** #include "hd44780.h"
   9:./Src/hd44780.c **** 
  10:./Src/hd44780.c **** uint32_t PCF8574_Type0Pins[8] = { 4, 5, 6, 7, 0, 1, 2, 3 };
  11:./Src/hd44780.c **** uint8_t LCDerrorFlag = 0;
  12:./Src/hd44780.c **** 
  13:./Src/hd44780.c **** void LCD_WaitForBusyFlag(LCD_PCF8574_HandleTypeDef* handle) {
  14:./Src/hd44780.c **** 	uint8_t flag;
  15:./Src/hd44780.c **** 	LCD_GetBusyFlag(handle, &flag);
  16:./Src/hd44780.c **** 	uint32_t startTick=HAL_GetTick();
  17:./Src/hd44780.c **** 	while (flag == 1 && HAL_GetTick()-startTick<handle->pcf8574.PCF_I2C_TIMEOUT) {
  18:./Src/hd44780.c **** 		LCD_GetBusyFlag(handle, &flag);
  19:./Src/hd44780.c **** 	}
  20:./Src/hd44780.c **** }
  21:./Src/hd44780.c **** 
  22:./Src/hd44780.c **** LCD_RESULT LCD_I2C_WriteOut(LCD_PCF8574_HandleTypeDef* handle) {
  28              		.loc 1 22 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
ARM GAS  /tmp/cc0YzIty.s 			page 2


  37              		.cfi_offset 14, -4
  23:./Src/hd44780.c **** 	if (!LCDerrorFlag) {
  38              		.loc 1 23 0
  39 0002 084B     		ldr	r3, .L6
  40 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  41 0006 4BB9     		cbnz	r3, .L3
  24:./Src/hd44780.c **** 		if (PCF8574_Write(&handle->pcf8574, handle->state) != PCF8574_OK) {
  42              		.loc 1 24 0
  43 0008 90F83410 		ldrb	r1, [r0, #52]	@ zero_extendqisi2
  44 000c 4030     		adds	r0, r0, #64
  45              	.LVL1:
  46 000e FFF7FEFF 		bl	PCF8574_Write
  47              	.LVL2:
  48 0012 28B1     		cbz	r0, .L4
  25:./Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
  26:./Src/hd44780.c **** 			LCDerrorFlag = 1;
  49              		.loc 1 26 0
  50 0014 0120     		movs	r0, #1
  51 0016 034B     		ldr	r3, .L6
  52 0018 1870     		strb	r0, [r3]
  27:./Src/hd44780.c **** 			return LCD_ERROR;
  53              		.loc 1 27 0
  54 001a 08BD     		pop	{r3, pc}
  55              	.LVL3:
  56              	.L3:
  28:./Src/hd44780.c **** 		}
  29:./Src/hd44780.c **** 		return LCD_OK;
  30:./Src/hd44780.c **** 	}
  31:./Src/hd44780.c **** 	return LCD_ERROR;
  57              		.loc 1 31 0
  58 001c 0120     		movs	r0, #1
  59              	.LVL4:
  60 001e 08BD     		pop	{r3, pc}
  61              	.L4:
  29:./Src/hd44780.c **** 	}
  62              		.loc 1 29 0
  63 0020 0020     		movs	r0, #0
  32:./Src/hd44780.c **** }
  64              		.loc 1 32 0
  65 0022 08BD     		pop	{r3, pc}
  66              	.L7:
  67              		.align	2
  68              	.L6:
  69 0024 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE65:
  73              		.section	.text.LCD_StateWriteBit,"ax",%progbits
  74              		.align	2
  75              		.global	LCD_StateWriteBit
  76              		.thumb
  77              		.thumb_func
  79              	LCD_StateWriteBit:
  80              	.LFB67:
  33:./Src/hd44780.c **** 
  34:./Src/hd44780.c **** LCD_RESULT LCD_StateLEDControl(LCD_PCF8574_HandleTypeDef* handle, uint8_t on) {
  35:./Src/hd44780.c **** 	return LCD_StateWriteBit(handle, on & 1, LCD_PIN_LED);
  36:./Src/hd44780.c **** }
ARM GAS  /tmp/cc0YzIty.s 			page 3


  37:./Src/hd44780.c **** 
  38:./Src/hd44780.c **** LCD_RESULT LCD_StateWriteBit(LCD_PCF8574_HandleTypeDef* handle, uint8_t value,
  39:./Src/hd44780.c **** 		LCD_PIN pin) {
  81              		.loc 1 39 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL5:
  86 0000 08B5     		push	{r3, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
  40:./Src/hd44780.c **** 
  41:./Src/hd44780.c **** 	if (value) {
  91              		.loc 1 41 0
  92 0002 51B1     		cbz	r1, .L9
  42:./Src/hd44780.c **** 		handle->state |= 1 << handle->pins[pin];
  93              		.loc 1 42 0
  94 0004 836B     		ldr	r3, [r0, #56]
  95 0006 53F82220 		ldr	r2, [r3, r2, lsl #2]
  96              	.LVL6:
  97 000a 0123     		movs	r3, #1
  98 000c 9340     		lsls	r3, r3, r2
  99 000e 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 100 0012 1343     		orrs	r3, r3, r2
 101 0014 80F83430 		strb	r3, [r0, #52]
 102 0018 0BE0     		b	.L10
 103              	.LVL7:
 104              	.L9:
  43:./Src/hd44780.c **** 	} else {
  44:./Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[pin]);
 105              		.loc 1 44 0
 106 001a 836B     		ldr	r3, [r0, #56]
 107 001c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 108              	.LVL8:
 109 0020 0123     		movs	r3, #1
 110 0022 03FA02F2 		lsl	r2, r3, r2
 111 0026 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 112 002a 23EA0203 		bic	r3, r3, r2
 113 002e 80F83430 		strb	r3, [r0, #52]
 114              	.L10:
  45:./Src/hd44780.c **** 	}
  46:./Src/hd44780.c **** 	return LCD_I2C_WriteOut(handle);
 115              		.loc 1 46 0
 116 0032 FFF7FEFF 		bl	LCD_I2C_WriteOut
 117              	.LVL9:
  47:./Src/hd44780.c **** }
 118              		.loc 1 47 0
 119 0036 08BD     		pop	{r3, pc}
 120              		.cfi_endproc
 121              	.LFE67:
 123              		.section	.text.LCD_StateLEDControl,"ax",%progbits
 124              		.align	2
 125              		.global	LCD_StateLEDControl
 126              		.thumb
 127              		.thumb_func
ARM GAS  /tmp/cc0YzIty.s 			page 4


 129              	LCD_StateLEDControl:
 130              	.LFB66:
  34:./Src/hd44780.c **** 	return LCD_StateWriteBit(handle, on & 1, LCD_PIN_LED);
 131              		.loc 1 34 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL10:
 136 0000 08B5     		push	{r3, lr}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 3, -8
 140              		.cfi_offset 14, -4
  35:./Src/hd44780.c **** }
 141              		.loc 1 35 0
 142 0002 0722     		movs	r2, #7
 143 0004 01F00101 		and	r1, r1, #1
 144              	.LVL11:
 145 0008 FFF7FEFF 		bl	LCD_StateWriteBit
 146              	.LVL12:
  36:./Src/hd44780.c **** 
 147              		.loc 1 36 0
 148 000c 08BD     		pop	{r3, pc}
 149              		.cfi_endproc
 150              	.LFE66:
 152 000e 00BF     		.section	.text.LCD_WriteToDataBus,"ax",%progbits
 153              		.align	2
 154              		.global	LCD_WriteToDataBus
 155              		.thumb
 156              		.thumb_func
 158              	LCD_WriteToDataBus:
 159              	.LFB69:
  48:./Src/hd44780.c **** 
  49:./Src/hd44780.c **** LCD_RESULT LCD_Init(LCD_PCF8574_HandleTypeDef* handle) {
  50:./Src/hd44780.c **** 	handle->D = 1;
  51:./Src/hd44780.c **** 	handle->B = 0;
  52:./Src/hd44780.c **** 	handle->C = 0;
  53:./Src/hd44780.c **** 	if (handle->type == TYPE0) {
  54:./Src/hd44780.c **** 		handle->pins = PCF8574_Type0Pins;
  55:./Src/hd44780.c **** 	} else {
  56:./Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
  57:./Src/hd44780.c **** 		return LCD_ERROR;	// no type of subinterface was specified
  58:./Src/hd44780.c **** 	}
  59:./Src/hd44780.c **** 	if (PCF8574_Init(&handle->pcf8574) != PCF8574_OK) {
  60:./Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
  61:./Src/hd44780.c **** 		return LCD_ERROR;
  62:./Src/hd44780.c **** 	}
  63:./Src/hd44780.c **** 
  64:./Src/hd44780.c **** 	HAL_Delay(50);
  65:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
  66:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
  67:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  68:./Src/hd44780.c **** 
  69:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  70:./Src/hd44780.c **** 
  71:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  72:./Src/hd44780.c **** 	HAL_Delay(1);
ARM GAS  /tmp/cc0YzIty.s 			page 5


  73:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  74:./Src/hd44780.c **** 	HAL_Delay(5);
  75:./Src/hd44780.c **** 
  76:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  77:./Src/hd44780.c **** 
  78:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  79:./Src/hd44780.c **** 	HAL_Delay(1);
  80:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  81:./Src/hd44780.c **** 	HAL_Delay(1);
  82:./Src/hd44780.c **** 
  83:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  84:./Src/hd44780.c **** 
  85:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  86:./Src/hd44780.c **** 	HAL_Delay(1);
  87:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  88:./Src/hd44780.c **** 	HAL_Delay(1);
  89:./Src/hd44780.c **** 
  90:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 2);
  91:./Src/hd44780.c **** 
  92:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  93:./Src/hd44780.c **** 	HAL_Delay(1);
  94:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  95:./Src/hd44780.c **** 	HAL_Delay(1);
  96:./Src/hd44780.c **** 
  97:./Src/hd44780.c **** 	uint8_t cmd = 0;
  98:./Src/hd44780.c **** 	cmd = cmd | (handle->NUMBER_OF_LINES << 3);
  99:./Src/hd44780.c **** 	cmd = cmd | (1 << 5);
 100:./Src/hd44780.c **** 
 101:./Src/hd44780.c **** 	LCD_WriteCMD(handle, cmd);	// setting interface
 102:./Src/hd44780.c **** 
 103:./Src/hd44780.c **** 	cmd = 0;
 104:./Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 105:./Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 106:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 107:./Src/hd44780.c **** 
 108:./Src/hd44780.c **** 	LCD_WriteCMD(handle, cmd);	// setting display/cursor
 109:./Src/hd44780.c **** 
 110:./Src/hd44780.c **** 	LCD_ClearDisplay(handle);
 111:./Src/hd44780.c **** 
 112:./Src/hd44780.c **** 	LCD_EntryModeSet(handle, DIRECTION_INCREMENT, SHIFT_NO);
 113:./Src/hd44780.c **** 
 114:./Src/hd44780.c **** 	LCD_DisplayON(handle);
 115:./Src/hd44780.c **** 
 116:./Src/hd44780.c **** 	LCD_StateLEDControl(handle, 1);	// LED power on
 117:./Src/hd44780.c **** 
 118:./Src/hd44780.c **** 	return LCD_OK;
 119:./Src/hd44780.c **** 
 120:./Src/hd44780.c **** }
 121:./Src/hd44780.c **** 
 122:./Src/hd44780.c **** LCD_RESULT LCD_WriteToDataBus(LCD_PCF8574_HandleTypeDef* handle, uint8_t data) {
 160              		.loc 1 122 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL13:
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI3:
ARM GAS  /tmp/cc0YzIty.s 			page 6


 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 123:./Src/hd44780.c **** 	if ((data & 1) == 1) {
 170              		.loc 1 123 0
 171 0002 11F0010F 		tst	r1, #1
 172 0006 09D0     		beq	.L15
 124:./Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D4];
 173              		.loc 1 124 0
 174 0008 836B     		ldr	r3, [r0, #56]
 175 000a 1A68     		ldr	r2, [r3]
 176 000c 0123     		movs	r3, #1
 177 000e 9340     		lsls	r3, r3, r2
 178 0010 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 179 0014 1343     		orrs	r3, r3, r2
 180 0016 80F83430 		strb	r3, [r0, #52]
 181 001a 0AE0     		b	.L16
 182              	.L15:
 125:./Src/hd44780.c **** 	} else {
 126:./Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D4]);
 183              		.loc 1 126 0
 184 001c 836B     		ldr	r3, [r0, #56]
 185 001e 1A68     		ldr	r2, [r3]
 186 0020 0123     		movs	r3, #1
 187 0022 03FA02F2 		lsl	r2, r3, r2
 188 0026 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 189 002a 23EA0203 		bic	r3, r3, r2
 190 002e 80F83430 		strb	r3, [r0, #52]
 191              	.L16:
 127:./Src/hd44780.c **** 	}
 128:./Src/hd44780.c **** 
 129:./Src/hd44780.c **** 	if ((data & 2) == 2) {
 192              		.loc 1 129 0
 193 0032 11F0020F 		tst	r1, #2
 194 0036 09D0     		beq	.L17
 130:./Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D5];
 195              		.loc 1 130 0
 196 0038 836B     		ldr	r3, [r0, #56]
 197 003a 5A68     		ldr	r2, [r3, #4]
 198 003c 0123     		movs	r3, #1
 199 003e 9340     		lsls	r3, r3, r2
 200 0040 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 201 0044 1343     		orrs	r3, r3, r2
 202 0046 80F83430 		strb	r3, [r0, #52]
 203 004a 0AE0     		b	.L18
 204              	.L17:
 131:./Src/hd44780.c **** 	} else {
 132:./Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D5]);
 205              		.loc 1 132 0
 206 004c 836B     		ldr	r3, [r0, #56]
 207 004e 5A68     		ldr	r2, [r3, #4]
 208 0050 0123     		movs	r3, #1
 209 0052 03FA02F2 		lsl	r2, r3, r2
 210 0056 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 211 005a 23EA0203 		bic	r3, r3, r2
 212 005e 80F83430 		strb	r3, [r0, #52]
 213              	.L18:
ARM GAS  /tmp/cc0YzIty.s 			page 7


 133:./Src/hd44780.c **** 	}
 134:./Src/hd44780.c **** 
 135:./Src/hd44780.c **** 	if ((data & 4) == 4) {
 214              		.loc 1 135 0
 215 0062 11F0040F 		tst	r1, #4
 216 0066 09D0     		beq	.L19
 136:./Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D6];
 217              		.loc 1 136 0
 218 0068 836B     		ldr	r3, [r0, #56]
 219 006a 9A68     		ldr	r2, [r3, #8]
 220 006c 0123     		movs	r3, #1
 221 006e 9340     		lsls	r3, r3, r2
 222 0070 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 223 0074 1343     		orrs	r3, r3, r2
 224 0076 80F83430 		strb	r3, [r0, #52]
 225 007a 0AE0     		b	.L20
 226              	.L19:
 137:./Src/hd44780.c **** 	} else {
 138:./Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D6]);
 227              		.loc 1 138 0
 228 007c 836B     		ldr	r3, [r0, #56]
 229 007e 9A68     		ldr	r2, [r3, #8]
 230 0080 0123     		movs	r3, #1
 231 0082 03FA02F2 		lsl	r2, r3, r2
 232 0086 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 233 008a 23EA0203 		bic	r3, r3, r2
 234 008e 80F83430 		strb	r3, [r0, #52]
 235              	.L20:
 139:./Src/hd44780.c **** 	}
 140:./Src/hd44780.c **** 
 141:./Src/hd44780.c **** 	if ((data & 8) == 8) {
 236              		.loc 1 141 0
 237 0092 11F0080F 		tst	r1, #8
 238 0096 09D0     		beq	.L21
 142:./Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D7];
 239              		.loc 1 142 0
 240 0098 836B     		ldr	r3, [r0, #56]
 241 009a DA68     		ldr	r2, [r3, #12]
 242 009c 0123     		movs	r3, #1
 243 009e 9340     		lsls	r3, r3, r2
 244 00a0 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 245 00a4 1343     		orrs	r3, r3, r2
 246 00a6 80F83430 		strb	r3, [r0, #52]
 247 00aa 0AE0     		b	.L22
 248              	.L21:
 143:./Src/hd44780.c **** 	} else {
 144:./Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D7]);
 249              		.loc 1 144 0
 250 00ac 836B     		ldr	r3, [r0, #56]
 251 00ae DA68     		ldr	r2, [r3, #12]
 252 00b0 0123     		movs	r3, #1
 253 00b2 03FA02F2 		lsl	r2, r3, r2
 254 00b6 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 255 00ba 23EA0203 		bic	r3, r3, r2
 256 00be 80F83430 		strb	r3, [r0, #52]
 257              	.L22:
 145:./Src/hd44780.c **** 	}
ARM GAS  /tmp/cc0YzIty.s 			page 8


 146:./Src/hd44780.c **** 
 147:./Src/hd44780.c **** 	return LCD_I2C_WriteOut(handle);
 258              		.loc 1 147 0
 259 00c2 FFF7FEFF 		bl	LCD_I2C_WriteOut
 260              	.LVL14:
 148:./Src/hd44780.c **** }
 261              		.loc 1 148 0
 262 00c6 08BD     		pop	{r3, pc}
 263              		.cfi_endproc
 264              	.LFE69:
 266              		.section	.text.LCD_GetBusyFlag,"ax",%progbits
 267              		.align	2
 268              		.global	LCD_GetBusyFlag
 269              		.thumb
 270              		.thumb_func
 272              	LCD_GetBusyFlag:
 273              	.LFB70:
 149:./Src/hd44780.c **** 
 150:./Src/hd44780.c **** LCD_RESULT LCD_GetBusyFlag(LCD_PCF8574_HandleTypeDef* handle, uint8_t* flag) {
 274              		.loc 1 150 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL15:
 279 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 20
 282              		.cfi_offset 4, -20
 283              		.cfi_offset 5, -16
 284              		.cfi_offset 6, -12
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 83B0     		sub	sp, sp, #12
 288              	.LCFI5:
 289              		.cfi_def_cfa_offset 32
 290 0004 0446     		mov	r4, r0
 291 0006 0D46     		mov	r5, r1
 151:./Src/hd44780.c **** 
 152:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 292              		.loc 1 152 0
 293 0008 0622     		movs	r2, #6
 294 000a 0021     		movs	r1, #0
 295              	.LVL16:
 296 000c FFF7FEFF 		bl	LCD_StateWriteBit
 297              	.LVL17:
 153:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
 298              		.loc 1 153 0
 299 0010 0422     		movs	r2, #4
 300 0012 0021     		movs	r1, #0
 301 0014 2046     		mov	r0, r4
 302 0016 FFF7FEFF 		bl	LCD_StateWriteBit
 303              	.LVL18:
 154:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_RW);
 304              		.loc 1 154 0
 305 001a 0522     		movs	r2, #5
 306 001c 0121     		movs	r1, #1
 307 001e 2046     		mov	r0, r4
ARM GAS  /tmp/cc0YzIty.s 			page 9


 308 0020 FFF7FEFF 		bl	LCD_StateWriteBit
 309              	.LVL19:
 155:./Src/hd44780.c **** 
 156:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 310              		.loc 1 156 0
 311 0024 0622     		movs	r2, #6
 312 0026 0121     		movs	r1, #1
 313 0028 2046     		mov	r0, r4
 314 002a FFF7FEFF 		bl	LCD_StateWriteBit
 315              	.LVL20:
 157:./Src/hd44780.c **** 
 158:./Src/hd44780.c **** 	PCF8574_Read(&handle->pcf8574, flag);
 316              		.loc 1 158 0
 317 002e 04F14006 		add	r6, r4, #64
 318 0032 2946     		mov	r1, r5
 319 0034 3046     		mov	r0, r6
 320 0036 FFF7FEFF 		bl	PCF8574_Read
 321              	.LVL21:
 159:./Src/hd44780.c **** 
 160:./Src/hd44780.c **** 	*flag &= 1 << handle->pins[LCD_PIN_D7];
 322              		.loc 1 160 0
 323 003a A36B     		ldr	r3, [r4, #56]
 324 003c DB68     		ldr	r3, [r3, #12]
 325 003e 0127     		movs	r7, #1
 326 0040 07FA03F3 		lsl	r3, r7, r3
 327 0044 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 328 0046 1340     		ands	r3, r3, r2
 329 0048 2B70     		strb	r3, [r5]
 161:./Src/hd44780.c **** 	*flag >>= handle->pins[LCD_PIN_D7];
 330              		.loc 1 161 0
 331 004a A26B     		ldr	r2, [r4, #56]
 332 004c D268     		ldr	r2, [r2, #12]
 333 004e 1341     		asrs	r3, r3, r2
 334 0050 2B70     		strb	r3, [r5]
 162:./Src/hd44780.c **** 
 163:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 335              		.loc 1 163 0
 336 0052 0622     		movs	r2, #6
 337 0054 0021     		movs	r1, #0
 338 0056 2046     		mov	r0, r4
 339 0058 FFF7FEFF 		bl	LCD_StateWriteBit
 340              	.LVL22:
 164:./Src/hd44780.c **** 
 165:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 341              		.loc 1 165 0
 342 005c 0622     		movs	r2, #6
 343 005e 3946     		mov	r1, r7
 344 0060 2046     		mov	r0, r4
 345 0062 FFF7FEFF 		bl	LCD_StateWriteBit
 346              	.LVL23:
 166:./Src/hd44780.c **** 
 167:./Src/hd44780.c **** 	uint8_t flag2;
 168:./Src/hd44780.c **** 	PCF8574_Read(&handle->pcf8574, &flag2);
 347              		.loc 1 168 0
 348 0066 0DF10701 		add	r1, sp, #7
 349 006a 3046     		mov	r0, r6
 350 006c FFF7FEFF 		bl	PCF8574_Read
ARM GAS  /tmp/cc0YzIty.s 			page 10


 351              	.LVL24:
 169:./Src/hd44780.c **** 
 170:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 352              		.loc 1 170 0
 353 0070 0622     		movs	r2, #6
 354 0072 0021     		movs	r1, #0
 355 0074 2046     		mov	r0, r4
 356 0076 FFF7FEFF 		bl	LCD_StateWriteBit
 357              	.LVL25:
 171:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
 358              		.loc 1 171 0
 359 007a 0522     		movs	r2, #5
 360 007c 0021     		movs	r1, #0
 361 007e 2046     		mov	r0, r4
 362 0080 FFF7FEFF 		bl	LCD_StateWriteBit
 363              	.LVL26:
 172:./Src/hd44780.c **** 
 173:./Src/hd44780.c **** 	return LCD_OK;
 174:./Src/hd44780.c **** 
 175:./Src/hd44780.c **** }
 364              		.loc 1 175 0
 365 0084 0020     		movs	r0, #0
 366 0086 03B0     		add	sp, sp, #12
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 20
 369              		@ sp needed
 370 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 371              		.cfi_endproc
 372              	.LFE70:
 374 008a 00BF     		.section	.text.LCD_WaitForBusyFlag,"ax",%progbits
 375              		.align	2
 376              		.global	LCD_WaitForBusyFlag
 377              		.thumb
 378              		.thumb_func
 380              	LCD_WaitForBusyFlag:
 381              	.LFB64:
  13:./Src/hd44780.c **** 	uint8_t flag;
 382              		.loc 1 13 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL27:
 387 0000 30B5     		push	{r4, r5, lr}
 388              	.LCFI7:
 389              		.cfi_def_cfa_offset 12
 390              		.cfi_offset 4, -12
 391              		.cfi_offset 5, -8
 392              		.cfi_offset 14, -4
 393 0002 83B0     		sub	sp, sp, #12
 394              	.LCFI8:
 395              		.cfi_def_cfa_offset 24
 396 0004 0446     		mov	r4, r0
  15:./Src/hd44780.c **** 	uint32_t startTick=HAL_GetTick();
 397              		.loc 1 15 0
 398 0006 0DF10701 		add	r1, sp, #7
 399 000a FFF7FEFF 		bl	LCD_GetBusyFlag
 400              	.LVL28:
ARM GAS  /tmp/cc0YzIty.s 			page 11


  16:./Src/hd44780.c **** 	while (flag == 1 && HAL_GetTick()-startTick<handle->pcf8574.PCF_I2C_TIMEOUT) {
 401              		.loc 1 16 0
 402 000e FFF7FEFF 		bl	HAL_GetTick
 403              	.LVL29:
 404 0012 0546     		mov	r5, r0
 405              	.LVL30:
  17:./Src/hd44780.c **** 		LCD_GetBusyFlag(handle, &flag);
 406              		.loc 1 17 0
 407 0014 04E0     		b	.L27
 408              	.LVL31:
 409              	.L29:
  18:./Src/hd44780.c **** 	}
 410              		.loc 1 18 0
 411 0016 0DF10701 		add	r1, sp, #7
 412 001a 2046     		mov	r0, r4
 413 001c FFF7FEFF 		bl	LCD_GetBusyFlag
 414              	.LVL32:
 415              	.L27:
  17:./Src/hd44780.c **** 		LCD_GetBusyFlag(handle, &flag);
 416              		.loc 1 17 0
 417 0020 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 418 0024 012B     		cmp	r3, #1
 419 0026 05D1     		bne	.L26
  17:./Src/hd44780.c **** 		LCD_GetBusyFlag(handle, &flag);
 420              		.loc 1 17 0 is_stmt 0 discriminator 1
 421 0028 FFF7FEFF 		bl	HAL_GetTick
 422              	.LVL33:
 423 002c 401B     		subs	r0, r0, r5
 424 002e 636C     		ldr	r3, [r4, #68]
 425 0030 9842     		cmp	r0, r3
 426 0032 F0D3     		bcc	.L29
 427              	.L26:
  20:./Src/hd44780.c **** 
 428              		.loc 1 20 0 is_stmt 1
 429 0034 03B0     		add	sp, sp, #12
 430              	.LCFI9:
 431              		.cfi_def_cfa_offset 12
 432              		@ sp needed
 433 0036 30BD     		pop	{r4, r5, pc}
 434              		.cfi_endproc
 435              	.LFE64:
 437              		.section	.text.LCD_WriteCMD,"ax",%progbits
 438              		.align	2
 439              		.global	LCD_WriteCMD
 440              		.thumb
 441              		.thumb_func
 443              	LCD_WriteCMD:
 444              	.LFB71:
 176:./Src/hd44780.c **** 
 177:./Src/hd44780.c **** LCD_RESULT LCD_WriteCMD(LCD_PCF8574_HandleTypeDef* handle, uint8_t cmd) {
 445              		.loc 1 177 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL34:
 450 0000 38B5     		push	{r3, r4, r5, lr}
 451              	.LCFI10:
ARM GAS  /tmp/cc0YzIty.s 			page 12


 452              		.cfi_def_cfa_offset 16
 453              		.cfi_offset 3, -16
 454              		.cfi_offset 4, -12
 455              		.cfi_offset 5, -8
 456              		.cfi_offset 14, -4
 178:./Src/hd44780.c **** 	if (!LCDerrorFlag) {
 457              		.loc 1 178 0
 458 0002 184B     		ldr	r3, .L35
 459 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 460 0006 5BBB     		cbnz	r3, .L33
 461 0008 0D46     		mov	r5, r1
 462 000a 0446     		mov	r4, r0
 179:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 463              		.loc 1 179 0
 464 000c 0622     		movs	r2, #6
 465 000e 0021     		movs	r1, #0
 466              	.LVL35:
 467 0010 FFF7FEFF 		bl	LCD_StateWriteBit
 468              	.LVL36:
 180:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
 469              		.loc 1 180 0
 470 0014 0422     		movs	r2, #4
 471 0016 0021     		movs	r1, #0
 472 0018 2046     		mov	r0, r4
 473 001a FFF7FEFF 		bl	LCD_StateWriteBit
 474              	.LVL37:
 181:./Src/hd44780.c **** 
 182:./Src/hd44780.c **** 		LCD_WriteToDataBus(handle, cmd >> 4);
 475              		.loc 1 182 0
 476 001e 2909     		lsrs	r1, r5, #4
 477 0020 2046     		mov	r0, r4
 478 0022 FFF7FEFF 		bl	LCD_WriteToDataBus
 479              	.LVL38:
 183:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 480              		.loc 1 183 0
 481 0026 0622     		movs	r2, #6
 482 0028 0121     		movs	r1, #1
 483 002a 2046     		mov	r0, r4
 484 002c FFF7FEFF 		bl	LCD_StateWriteBit
 485              	.LVL39:
 184:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 486              		.loc 1 184 0
 487 0030 0622     		movs	r2, #6
 488 0032 0021     		movs	r1, #0
 489 0034 2046     		mov	r0, r4
 490 0036 FFF7FEFF 		bl	LCD_StateWriteBit
 491              	.LVL40:
 185:./Src/hd44780.c **** 
 186:./Src/hd44780.c **** 		LCD_WriteToDataBus(handle, cmd);
 492              		.loc 1 186 0
 493 003a 2946     		mov	r1, r5
 494 003c 2046     		mov	r0, r4
 495 003e FFF7FEFF 		bl	LCD_WriteToDataBus
 496              	.LVL41:
 187:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 497              		.loc 1 187 0
 498 0042 0622     		movs	r2, #6
ARM GAS  /tmp/cc0YzIty.s 			page 13


 499 0044 0121     		movs	r1, #1
 500 0046 2046     		mov	r0, r4
 501 0048 FFF7FEFF 		bl	LCD_StateWriteBit
 502              	.LVL42:
 188:./Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 503              		.loc 1 188 0
 504 004c 0622     		movs	r2, #6
 505 004e 0021     		movs	r1, #0
 506 0050 2046     		mov	r0, r4
 507 0052 FFF7FEFF 		bl	LCD_StateWriteBit
 508              	.LVL43:
 189:./Src/hd44780.c **** 
 190:./Src/hd44780.c **** 		LCD_WaitForBusyFlag(handle);
 509              		.loc 1 190 0
 510 0056 2046     		mov	r0, r4
 511 0058 FFF7FEFF 		bl	LCD_WaitForBusyFlag
 512              	.LVL44:
 191:./Src/hd44780.c **** 
 192:./Src/hd44780.c **** 		return LCD_OK;
 513              		.loc 1 192 0
 514 005c 0020     		movs	r0, #0
 515 005e 38BD     		pop	{r3, r4, r5, pc}
 516              	.LVL45:
 517              	.L33:
 193:./Src/hd44780.c **** 	} return LCD_ERROR;
 518              		.loc 1 193 0
 519 0060 0120     		movs	r0, #1
 520              	.LVL46:
 194:./Src/hd44780.c **** 
 195:./Src/hd44780.c **** }
 521              		.loc 1 195 0
 522 0062 38BD     		pop	{r3, r4, r5, pc}
 523              	.L36:
 524              		.align	2
 525              	.L35:
 526 0064 00000000 		.word	.LANCHOR0
 527              		.cfi_endproc
 528              	.LFE71:
 530              		.section	.text.LCD_WriteDATA,"ax",%progbits
 531              		.align	2
 532              		.global	LCD_WriteDATA
 533              		.thumb
 534              		.thumb_func
 536              	LCD_WriteDATA:
 537              	.LFB72:
 196:./Src/hd44780.c **** 
 197:./Src/hd44780.c **** LCD_RESULT LCD_WriteDATA(LCD_PCF8574_HandleTypeDef* handle, uint8_t data) {
 538              		.loc 1 197 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL47:
 543 0000 38B5     		push	{r3, r4, r5, lr}
 544              	.LCFI11:
 545              		.cfi_def_cfa_offset 16
 546              		.cfi_offset 3, -16
 547              		.cfi_offset 4, -12
ARM GAS  /tmp/cc0YzIty.s 			page 14


 548              		.cfi_offset 5, -8
 549              		.cfi_offset 14, -4
 550 0002 0446     		mov	r4, r0
 551 0004 0D46     		mov	r5, r1
 198:./Src/hd44780.c **** 
 199:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 552              		.loc 1 199 0
 553 0006 0622     		movs	r2, #6
 554 0008 0021     		movs	r1, #0
 555              	.LVL48:
 556 000a FFF7FEFF 		bl	LCD_StateWriteBit
 557              	.LVL49:
 200:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_RS);
 558              		.loc 1 200 0
 559 000e 0422     		movs	r2, #4
 560 0010 0121     		movs	r1, #1
 561 0012 2046     		mov	r0, r4
 562 0014 FFF7FEFF 		bl	LCD_StateWriteBit
 563              	.LVL50:
 201:./Src/hd44780.c **** 
 202:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, data >> 4);
 564              		.loc 1 202 0
 565 0018 2909     		lsrs	r1, r5, #4
 566 001a 2046     		mov	r0, r4
 567 001c FFF7FEFF 		bl	LCD_WriteToDataBus
 568              	.LVL51:
 203:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 569              		.loc 1 203 0
 570 0020 0622     		movs	r2, #6
 571 0022 0121     		movs	r1, #1
 572 0024 2046     		mov	r0, r4
 573 0026 FFF7FEFF 		bl	LCD_StateWriteBit
 574              	.LVL52:
 204:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 575              		.loc 1 204 0
 576 002a 0622     		movs	r2, #6
 577 002c 0021     		movs	r1, #0
 578 002e 2046     		mov	r0, r4
 579 0030 FFF7FEFF 		bl	LCD_StateWriteBit
 580              	.LVL53:
 205:./Src/hd44780.c **** 
 206:./Src/hd44780.c **** 	LCD_WriteToDataBus(handle, data);
 581              		.loc 1 206 0
 582 0034 2946     		mov	r1, r5
 583 0036 2046     		mov	r0, r4
 584 0038 FFF7FEFF 		bl	LCD_WriteToDataBus
 585              	.LVL54:
 207:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 586              		.loc 1 207 0
 587 003c 0622     		movs	r2, #6
 588 003e 0121     		movs	r1, #1
 589 0040 2046     		mov	r0, r4
 590 0042 FFF7FEFF 		bl	LCD_StateWriteBit
 591              	.LVL55:
 208:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 592              		.loc 1 208 0
 593 0046 0622     		movs	r2, #6
ARM GAS  /tmp/cc0YzIty.s 			page 15


 594 0048 0021     		movs	r1, #0
 595 004a 2046     		mov	r0, r4
 596 004c FFF7FEFF 		bl	LCD_StateWriteBit
 597              	.LVL56:
 209:./Src/hd44780.c **** 
 210:./Src/hd44780.c **** 	LCD_WaitForBusyFlag(handle);
 598              		.loc 1 210 0
 599 0050 2046     		mov	r0, r4
 600 0052 FFF7FEFF 		bl	LCD_WaitForBusyFlag
 601              	.LVL57:
 211:./Src/hd44780.c **** 
 212:./Src/hd44780.c **** 	return LCD_OK;
 213:./Src/hd44780.c **** 
 214:./Src/hd44780.c **** }
 602              		.loc 1 214 0
 603 0056 0020     		movs	r0, #0
 604 0058 38BD     		pop	{r3, r4, r5, pc}
 605              		.cfi_endproc
 606              	.LFE72:
 608 005a 00BF     		.section	.text.LCD_SetLocation,"ax",%progbits
 609              		.align	2
 610              		.global	LCD_SetLocation
 611              		.thumb
 612              		.thumb_func
 614              	LCD_SetLocation:
 615              	.LFB73:
 215:./Src/hd44780.c **** 
 216:./Src/hd44780.c **** LCD_RESULT LCD_SetLocation(LCD_PCF8574_HandleTypeDef* handle, uint8_t x,
 217:./Src/hd44780.c **** 		uint8_t y) {
 616              		.loc 1 217 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL58:
 621 0000 08B5     		push	{r3, lr}
 622              	.LCFI12:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 3, -8
 625              		.cfi_offset 14, -4
 218:./Src/hd44780.c **** 
 219:./Src/hd44780.c **** 	uint8_t add = 0x40 * y + x;
 626              		.loc 1 219 0
 627 0002 01EB8211 		add	r1, r1, r2, lsl #6
 628              	.LVL59:
 220:./Src/hd44780.c **** 	uint8_t cmd = 1 << 7;
 221:./Src/hd44780.c **** 	cmd = cmd | add;
 629              		.loc 1 221 0
 630 0006 61F07F01 		orn	r1, r1, #127
 631              	.LVL60:
 222:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 632              		.loc 1 222 0
 633 000a C9B2     		uxtb	r1, r1
 634 000c FFF7FEFF 		bl	LCD_WriteCMD
 635              	.LVL61:
 223:./Src/hd44780.c **** 
 224:./Src/hd44780.c **** }
 636              		.loc 1 224 0
ARM GAS  /tmp/cc0YzIty.s 			page 16


 637 0010 08BD     		pop	{r3, pc}
 638              		.cfi_endproc
 639              	.LFE73:
 641 0012 00BF     		.section	.text.LCD_WriteString,"ax",%progbits
 642              		.align	2
 643              		.global	LCD_WriteString
 644              		.thumb
 645              		.thumb_func
 647              	LCD_WriteString:
 648              	.LFB74:
 225:./Src/hd44780.c **** 
 226:./Src/hd44780.c **** LCD_RESULT LCD_WriteString(LCD_PCF8574_HandleTypeDef* handle, char *s) {
 649              		.loc 1 226 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL62:
 227:./Src/hd44780.c **** 	int i = 0;
 228:./Src/hd44780.c **** 
 229:./Src/hd44780.c **** 	if (s != 0) {
 654              		.loc 1 229 0
 655 0000 51B9     		cbnz	r1, .L45
 230:./Src/hd44780.c **** 
 231:./Src/hd44780.c **** 		while (i < 80 && s[i] != 0) {
 232:./Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 233:./Src/hd44780.c **** 			LCD_WriteDATA(handle, s[i]);
 234:./Src/hd44780.c **** 			i++;
 235:./Src/hd44780.c **** 		}
 236:./Src/hd44780.c **** 	}
 237:./Src/hd44780.c **** 	return LCD_OK;
 238:./Src/hd44780.c **** }
 656              		.loc 1 238 0
 657 0002 0020     		movs	r0, #0
 658              	.LVL63:
 659 0004 7047     		bx	lr
 660              	.LVL64:
 661              	.L44:
 662              	.LCFI13:
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
 232:./Src/hd44780.c **** 			LCD_WriteDATA(handle, s[i]);
 668              		.loc 1 232 0
 669 0006 3046     		mov	r0, r6
 670 0008 FFF7FEFF 		bl	LCD_WaitForBusyFlag
 671              	.LVL65:
 233:./Src/hd44780.c **** 			i++;
 672              		.loc 1 233 0
 673 000c 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 674 000e 3046     		mov	r0, r6
 675 0010 FFF7FEFF 		bl	LCD_WriteDATA
 676              	.LVL66:
 234:./Src/hd44780.c **** 		}
 677              		.loc 1 234 0
 678 0014 0134     		adds	r4, r4, #1
ARM GAS  /tmp/cc0YzIty.s 			page 17


 679              	.LVL67:
 680 0016 03E0     		b	.L42
 681              	.LVL68:
 682              	.L45:
 683              	.LCFI14:
 684              		.cfi_def_cfa_offset 0
 685              		.cfi_restore 4
 686              		.cfi_restore 5
 687              		.cfi_restore 6
 688              		.cfi_restore 14
 226:./Src/hd44780.c **** 	int i = 0;
 689              		.loc 1 226 0
 690 0018 70B5     		push	{r4, r5, r6, lr}
 691              	.LCFI15:
 692              		.cfi_def_cfa_offset 16
 693              		.cfi_offset 4, -16
 694              		.cfi_offset 5, -12
 695              		.cfi_offset 6, -8
 696              		.cfi_offset 14, -4
 697 001a 0D46     		mov	r5, r1
 698 001c 0646     		mov	r6, r0
 699 001e 0024     		movs	r4, #0
 700              	.LVL69:
 701              	.L42:
 231:./Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 702              		.loc 1 231 0
 703 0020 4F2C     		cmp	r4, #79
 704 0022 02DC     		bgt	.L43
 231:./Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 705              		.loc 1 231 0 is_stmt 0 discriminator 1
 706 0024 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 707 0026 002B     		cmp	r3, #0
 708 0028 EDD1     		bne	.L44
 709              	.L43:
 710              		.loc 1 238 0 is_stmt 1
 711 002a 0020     		movs	r0, #0
 712 002c 70BD     		pop	{r4, r5, r6, pc}
 713              		.cfi_endproc
 714              	.LFE74:
 716 002e 00BF     		.section	.text.LCD_ClearDisplay,"ax",%progbits
 717              		.align	2
 718              		.global	LCD_ClearDisplay
 719              		.thumb
 720              		.thumb_func
 722              	LCD_ClearDisplay:
 723              	.LFB75:
 239:./Src/hd44780.c **** 
 240:./Src/hd44780.c **** LCD_RESULT LCD_ClearDisplay(LCD_PCF8574_HandleTypeDef* handle) {
 724              		.loc 1 240 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              	.LVL70:
 729 0000 08B5     		push	{r3, lr}
 730              	.LCFI16:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 3, -8
ARM GAS  /tmp/cc0YzIty.s 			page 18


 733              		.cfi_offset 14, -4
 241:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, 1);
 734              		.loc 1 241 0
 735 0002 0121     		movs	r1, #1
 736 0004 FFF7FEFF 		bl	LCD_WriteCMD
 737              	.LVL71:
 242:./Src/hd44780.c **** }
 738              		.loc 1 242 0
 739 0008 08BD     		pop	{r3, pc}
 740              		.cfi_endproc
 741              	.LFE75:
 743 000a 00BF     		.section	.text.LCD_DisplayON,"ax",%progbits
 744              		.align	2
 745              		.global	LCD_DisplayON
 746              		.thumb
 747              		.thumb_func
 749              	LCD_DisplayON:
 750              	.LFB76:
 243:./Src/hd44780.c **** 
 244:./Src/hd44780.c **** LCD_RESULT LCD_DisplayON(LCD_PCF8574_HandleTypeDef* handle) {
 751              		.loc 1 244 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL72:
 756 0000 08B5     		push	{r3, lr}
 757              	.LCFI17:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 3, -8
 760              		.cfi_offset 14, -4
 245:./Src/hd44780.c **** 	handle->D = 1;
 761              		.loc 1 245 0
 762 0002 0123     		movs	r3, #1
 763 0004 4370     		strb	r3, [r0, #1]
 764              	.LVL73:
 246:./Src/hd44780.c **** 	uint8_t cmd = 0;
 247:./Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 248:./Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 249:./Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 765              		.loc 1 249 0
 766 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 767 0008 5B00     		lsls	r3, r3, #1
 768 000a 43F00C03 		orr	r3, r3, #12
 769 000e DBB2     		uxtb	r3, r3
 770              	.LVL74:
 250:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 771              		.loc 1 250 0
 772 0010 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 773              	.LVL75:
 251:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 774              		.loc 1 251 0
 775 0012 1943     		orrs	r1, r1, r3
 776              	.LVL76:
 777 0014 FFF7FEFF 		bl	LCD_WriteCMD
 778              	.LVL77:
 252:./Src/hd44780.c **** }
 779              		.loc 1 252 0
ARM GAS  /tmp/cc0YzIty.s 			page 19


 780 0018 08BD     		pop	{r3, pc}
 781              		.cfi_endproc
 782              	.LFE76:
 784 001a 00BF     		.section	.text.LCD_DisplayOFF,"ax",%progbits
 785              		.align	2
 786              		.global	LCD_DisplayOFF
 787              		.thumb
 788              		.thumb_func
 790              	LCD_DisplayOFF:
 791              	.LFB77:
 253:./Src/hd44780.c **** 
 254:./Src/hd44780.c **** LCD_RESULT LCD_DisplayOFF(LCD_PCF8574_HandleTypeDef* handle) {
 792              		.loc 1 254 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL78:
 797 0000 08B5     		push	{r3, lr}
 798              	.LCFI18:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 3, -8
 801              		.cfi_offset 14, -4
 255:./Src/hd44780.c **** 	handle->D = 0;
 802              		.loc 1 255 0
 803 0002 0023     		movs	r3, #0
 804 0004 4370     		strb	r3, [r0, #1]
 805              	.LVL79:
 256:./Src/hd44780.c **** 	uint8_t cmd = 0;
 257:./Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 258:./Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 259:./Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 806              		.loc 1 259 0
 807 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 808 0008 5B00     		lsls	r3, r3, #1
 809 000a 43F00803 		orr	r3, r3, #8
 810 000e DBB2     		uxtb	r3, r3
 811              	.LVL80:
 260:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 812              		.loc 1 260 0
 813 0010 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 814              	.LVL81:
 261:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 815              		.loc 1 261 0
 816 0012 1943     		orrs	r1, r1, r3
 817              	.LVL82:
 818 0014 FFF7FEFF 		bl	LCD_WriteCMD
 819              	.LVL83:
 262:./Src/hd44780.c **** }
 820              		.loc 1 262 0
 821 0018 08BD     		pop	{r3, pc}
 822              		.cfi_endproc
 823              	.LFE77:
 825 001a 00BF     		.section	.text.LCD_CursorON,"ax",%progbits
 826              		.align	2
 827              		.global	LCD_CursorON
 828              		.thumb
 829              		.thumb_func
ARM GAS  /tmp/cc0YzIty.s 			page 20


 831              	LCD_CursorON:
 832              	.LFB78:
 263:./Src/hd44780.c **** 
 264:./Src/hd44780.c **** LCD_RESULT LCD_CursorON(LCD_PCF8574_HandleTypeDef* handle, uint8_t blink) {
 833              		.loc 1 264 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL84:
 838 0000 08B5     		push	{r3, lr}
 839              	.LCFI19:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 3, -8
 842              		.cfi_offset 14, -4
 265:./Src/hd44780.c **** 	handle->C = 1;
 843              		.loc 1 265 0
 844 0002 0122     		movs	r2, #1
 845 0004 8270     		strb	r2, [r0, #2]
 266:./Src/hd44780.c **** 	blink &= 1;
 846              		.loc 1 266 0
 847 0006 1140     		ands	r1, r1, r2
 848              	.LVL85:
 267:./Src/hd44780.c **** 	handle->B = blink;
 849              		.loc 1 267 0
 850 0008 C170     		strb	r1, [r0, #3]
 851              	.LVL86:
 268:./Src/hd44780.c **** 	uint8_t cmd = 0;
 269:./Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 270:./Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 852              		.loc 1 270 0
 853 000a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 854 000c 9B00     		lsls	r3, r3, #2
 855 000e 43F00803 		orr	r3, r3, #8
 856 0012 5BB2     		sxtb	r3, r3
 857              	.LVL87:
 271:./Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 858              		.loc 1 271 0
 859 0014 43F00203 		orr	r3, r3, #2
 860              	.LVL88:
 861 0018 DBB2     		uxtb	r3, r3
 862              	.LVL89:
 272:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 273:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 863              		.loc 1 273 0
 864 001a 1943     		orrs	r1, r1, r3
 865              	.LVL90:
 866 001c FFF7FEFF 		bl	LCD_WriteCMD
 867              	.LVL91:
 274:./Src/hd44780.c **** }
 868              		.loc 1 274 0
 869 0020 08BD     		pop	{r3, pc}
 870              		.cfi_endproc
 871              	.LFE78:
 873 0022 00BF     		.section	.text.LCD_CursorOFF,"ax",%progbits
 874              		.align	2
 875              		.global	LCD_CursorOFF
 876              		.thumb
ARM GAS  /tmp/cc0YzIty.s 			page 21


 877              		.thumb_func
 879              	LCD_CursorOFF:
 880              	.LFB79:
 275:./Src/hd44780.c **** 
 276:./Src/hd44780.c **** LCD_RESULT LCD_CursorOFF(LCD_PCF8574_HandleTypeDef* handle) {
 881              		.loc 1 276 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL92:
 886 0000 08B5     		push	{r3, lr}
 887              	.LCFI20:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
 277:./Src/hd44780.c **** 	handle->C = 0;
 891              		.loc 1 277 0
 892 0002 0023     		movs	r3, #0
 893 0004 8370     		strb	r3, [r0, #2]
 894              	.LVL93:
 278:./Src/hd44780.c **** 	uint8_t cmd = 0;
 279:./Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 280:./Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 895              		.loc 1 280 0
 896 0006 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 897 0008 9B00     		lsls	r3, r3, #2
 898 000a 43F00803 		orr	r3, r3, #8
 899              	.LVL94:
 281:./Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 900              		.loc 1 281 0
 901 000e 03F0FC03 		and	r3, r3, #252
 902              	.LVL95:
 282:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 903              		.loc 1 282 0
 904 0012 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 905              	.LVL96:
 283:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 906              		.loc 1 283 0
 907 0014 1943     		orrs	r1, r1, r3
 908              	.LVL97:
 909 0016 FFF7FEFF 		bl	LCD_WriteCMD
 910              	.LVL98:
 284:./Src/hd44780.c **** }
 911              		.loc 1 284 0
 912 001a 08BD     		pop	{r3, pc}
 913              		.cfi_endproc
 914              	.LFE79:
 916              		.section	.text.LCD_ShiftCursor,"ax",%progbits
 917              		.align	2
 918              		.global	LCD_ShiftCursor
 919              		.thumb
 920              		.thumb_func
 922              	LCD_ShiftCursor:
 923              	.LFB80:
 285:./Src/hd44780.c **** 
 286:./Src/hd44780.c **** LCD_RESULT LCD_ShiftCursor(LCD_PCF8574_HandleTypeDef* handle, uint8_t direction,
 287:./Src/hd44780.c **** 		uint8_t steps) {
ARM GAS  /tmp/cc0YzIty.s 			page 22


 924              		.loc 1 287 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL99:
 929 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 930              	.LCFI21:
 931              		.cfi_def_cfa_offset 24
 932              		.cfi_offset 3, -24
 933              		.cfi_offset 4, -20
 934              		.cfi_offset 5, -16
 935              		.cfi_offset 6, -12
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 0746     		mov	r7, r0
 939 0004 1646     		mov	r6, r2
 288:./Src/hd44780.c **** 	direction &= 1;
 940              		.loc 1 288 0
 941 0006 01F00101 		and	r1, r1, #1
 942              	.LVL100:
 289:./Src/hd44780.c **** 
 290:./Src/hd44780.c **** 	uint8_t cmd = 0;
 291:./Src/hd44780.c **** 	cmd |= 1 << 4;
 292:./Src/hd44780.c **** 	cmd |= direction << 2;
 943              		.loc 1 292 0
 944 000a 8D00     		lsls	r5, r1, #2
 945 000c 45F01005 		orr	r5, r5, #16
 946 0010 EDB2     		uxtb	r5, r5
 947              	.LVL101:
 293:./Src/hd44780.c **** 
 294:./Src/hd44780.c **** 	int i = 0;
 295:./Src/hd44780.c **** 	for (i = 0; i < steps; i++) {
 948              		.loc 1 295 0
 949 0012 0024     		movs	r4, #0
 950 0014 05E0     		b	.L58
 951              	.LVL102:
 952              	.L60:
 296:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 953              		.loc 1 296 0
 954 0016 2946     		mov	r1, r5
 955 0018 3846     		mov	r0, r7
 956 001a FFF7FEFF 		bl	LCD_WriteCMD
 957              	.LVL103:
 958 001e 20B9     		cbnz	r0, .L61
 295:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 959              		.loc 1 295 0 discriminator 2
 960 0020 0134     		adds	r4, r4, #1
 961              	.LVL104:
 962              	.L58:
 295:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 963              		.loc 1 295 0 is_stmt 0 discriminator 1
 964 0022 B442     		cmp	r4, r6
 965 0024 F7DB     		blt	.L60
 297:./Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
 298:./Src/hd44780.c **** 			return LCD_ERROR;
 299:./Src/hd44780.c **** 		}
 300:./Src/hd44780.c **** 	}
ARM GAS  /tmp/cc0YzIty.s 			page 23


 301:./Src/hd44780.c **** 	return LCD_OK;
 966              		.loc 1 301 0 is_stmt 1
 967 0026 0020     		movs	r0, #0
 968 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 969              	.LVL105:
 970              	.L61:
 298:./Src/hd44780.c **** 		}
 971              		.loc 1 298 0
 972 002a 0120     		movs	r0, #1
 302:./Src/hd44780.c **** }
 973              		.loc 1 302 0
 974 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 975              		.cfi_endproc
 976              	.LFE80:
 978 002e 00BF     		.section	.text.LCD_ShiftDisplay,"ax",%progbits
 979              		.align	2
 980              		.global	LCD_ShiftDisplay
 981              		.thumb
 982              		.thumb_func
 984              	LCD_ShiftDisplay:
 985              	.LFB81:
 303:./Src/hd44780.c **** 
 304:./Src/hd44780.c **** LCD_RESULT LCD_ShiftDisplay(LCD_PCF8574_HandleTypeDef* handle,
 305:./Src/hd44780.c **** 		uint8_t direction, uint8_t steps) {
 986              		.loc 1 305 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              	.LVL106:
 991 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 992              	.LCFI22:
 993              		.cfi_def_cfa_offset 24
 994              		.cfi_offset 3, -24
 995              		.cfi_offset 4, -20
 996              		.cfi_offset 5, -16
 997              		.cfi_offset 6, -12
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 0746     		mov	r7, r0
 1001 0004 1646     		mov	r6, r2
 306:./Src/hd44780.c **** 	direction &= 1;
 1002              		.loc 1 306 0
 1003 0006 01F00101 		and	r1, r1, #1
 1004              	.LVL107:
 307:./Src/hd44780.c **** 
 308:./Src/hd44780.c **** 	uint8_t cmd = 0;
 309:./Src/hd44780.c **** 	cmd |= 1 << 4;
 310:./Src/hd44780.c **** 	cmd |= 1 << 3;
 311:./Src/hd44780.c **** 	cmd |= direction << 2;
 1005              		.loc 1 311 0
 1006 000a 8D00     		lsls	r5, r1, #2
 1007 000c 45F01805 		orr	r5, r5, #24
 1008 0010 EDB2     		uxtb	r5, r5
 1009              	.LVL108:
 312:./Src/hd44780.c **** 
 313:./Src/hd44780.c **** 	int i = 0;
 314:./Src/hd44780.c **** 	for (i = 0; i < steps; i++) {
ARM GAS  /tmp/cc0YzIty.s 			page 24


 1010              		.loc 1 314 0
 1011 0012 0024     		movs	r4, #0
 1012 0014 05E0     		b	.L64
 1013              	.LVL109:
 1014              	.L66:
 315:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 1015              		.loc 1 315 0
 1016 0016 2946     		mov	r1, r5
 1017 0018 3846     		mov	r0, r7
 1018 001a FFF7FEFF 		bl	LCD_WriteCMD
 1019              	.LVL110:
 1020 001e 20B9     		cbnz	r0, .L67
 314:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 1021              		.loc 1 314 0 discriminator 2
 1022 0020 0134     		adds	r4, r4, #1
 1023              	.LVL111:
 1024              	.L64:
 314:./Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 1025              		.loc 1 314 0 is_stmt 0 discriminator 1
 1026 0022 B442     		cmp	r4, r6
 1027 0024 F7DB     		blt	.L66
 316:./Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
 317:./Src/hd44780.c **** 			return LCD_ERROR;
 318:./Src/hd44780.c **** 		}
 319:./Src/hd44780.c **** 	}
 320:./Src/hd44780.c **** 	return LCD_OK;
 1028              		.loc 1 320 0 is_stmt 1
 1029 0026 0020     		movs	r0, #0
 1030 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1031              	.LVL112:
 1032              	.L67:
 317:./Src/hd44780.c **** 		}
 1033              		.loc 1 317 0
 1034 002a 0120     		movs	r0, #1
 321:./Src/hd44780.c **** }
 1035              		.loc 1 321 0
 1036 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1037              		.cfi_endproc
 1038              	.LFE81:
 1040 002e 00BF     		.section	.text.LCD_WriteNumber,"ax",%progbits
 1041              		.align	2
 1042              		.global	LCD_WriteNumber
 1043              		.thumb
 1044              		.thumb_func
 1046              	LCD_WriteNumber:
 1047              	.LFB82:
 322:./Src/hd44780.c **** 
 323:./Src/hd44780.c **** LCD_RESULT LCD_WriteNumber(LCD_PCF8574_HandleTypeDef* handle, unsigned long n,
 324:./Src/hd44780.c **** 		uint8_t base) {
 1048              		.loc 1 324 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 40
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              	.LVL113:
 1053 0000 10B5     		push	{r4, lr}
 1054              	.LCFI23:
 1055              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc0YzIty.s 			page 25


 1056              		.cfi_offset 4, -8
 1057              		.cfi_offset 14, -4
 1058 0002 8AB0     		sub	sp, sp, #40
 1059              	.LCFI24:
 1060              		.cfi_def_cfa_offset 48
 1061 0004 0B46     		mov	r3, r1
 1062              	.LVL114:
 325:./Src/hd44780.c **** 
 326:./Src/hd44780.c **** 	char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
 327:./Src/hd44780.c **** 	char *str = &buf[sizeof(buf) - 1];
 328:./Src/hd44780.c **** 
 329:./Src/hd44780.c **** 	*str = '\0';
 1063              		.loc 1 329 0
 1064 0006 0021     		movs	r1, #0
 1065              	.LVL115:
 1066 0008 8DF82410 		strb	r1, [sp, #36]
 330:./Src/hd44780.c **** 
 331:./Src/hd44780.c **** 	// prevent crash if called with base == 1
 332:./Src/hd44780.c **** 	if (base < 2)
 1067              		.loc 1 332 0
 1068 000c 012A     		cmp	r2, #1
 1069 000e 00D8     		bhi	.L70
 333:./Src/hd44780.c **** 		base = 10;
 1070              		.loc 1 333 0
 1071 0010 0A22     		movs	r2, #10
 1072              	.LVL116:
 1073              	.L70:
 1074 0012 09A9     		add	r1, sp, #36
 1075              	.LVL117:
 1076              	.L73:
 1077              	.LBB2:
 334:./Src/hd44780.c **** 
 335:./Src/hd44780.c **** 	do {
 336:./Src/hd44780.c **** 		unsigned long m = n;
 337:./Src/hd44780.c **** 		n /= base;
 1078              		.loc 1 337 0
 1079 0014 B3FBF2F4 		udiv	r4, r3, r2
 1080              	.LVL118:
 338:./Src/hd44780.c **** 		char c = m - base * n;
 1081              		.loc 1 338 0
 1082 0018 04FB1233 		mls	r3, r4, r2, r3
 1083              	.LVL119:
 1084 001c DBB2     		uxtb	r3, r3
 1085              	.LVL120:
 339:./Src/hd44780.c **** 		*--str = c < 10 ? c + '0' : c + 'A' - 10;
 1086              		.loc 1 339 0
 1087 001e 0139     		subs	r1, r1, #1
 1088              	.LVL121:
 1089 0020 092B     		cmp	r3, #9
 1090 0022 02D8     		bhi	.L71
 1091              		.loc 1 339 0 is_stmt 0 discriminator 1
 1092 0024 3033     		adds	r3, r3, #48
 1093              	.LVL122:
 1094 0026 DBB2     		uxtb	r3, r3
 1095              	.LVL123:
 1096 0028 01E0     		b	.L72
 1097              	.LVL124:
ARM GAS  /tmp/cc0YzIty.s 			page 26


 1098              	.L71:
 1099              		.loc 1 339 0 discriminator 2
 1100 002a 3733     		adds	r3, r3, #55
 1101              	.LVL125:
 1102 002c DBB2     		uxtb	r3, r3
 1103              	.LVL126:
 1104              	.L72:
 1105              		.loc 1 339 0 discriminator 4
 1106 002e 0B70     		strb	r3, [r1]
 337:./Src/hd44780.c **** 		char c = m - base * n;
 1107              		.loc 1 337 0 is_stmt 1 discriminator 4
 1108 0030 2346     		mov	r3, r4
 1109              	.LBE2:
 340:./Src/hd44780.c **** 	} while (n);
 1110              		.loc 1 340 0 discriminator 4
 1111 0032 002C     		cmp	r4, #0
 1112 0034 EED1     		bne	.L73
 1113              	.LVL127:
 341:./Src/hd44780.c **** 	return LCD_WriteString(handle, str);
 1114              		.loc 1 341 0
 1115 0036 FFF7FEFF 		bl	LCD_WriteString
 1116              	.LVL128:
 342:./Src/hd44780.c **** }
 1117              		.loc 1 342 0
 1118 003a 0AB0     		add	sp, sp, #40
 1119              	.LCFI25:
 1120              		.cfi_def_cfa_offset 8
 1121              		@ sp needed
 1122 003c 10BD     		pop	{r4, pc}
 1123              		.cfi_endproc
 1124              	.LFE82:
 1126              		.global	__aeabi_dcmplt
 1127              		.global	__aeabi_ddiv
 1128              		.global	__aeabi_dadd
 1129              		.global	__aeabi_d2uiz
 1130              		.global	__aeabi_ui2d
 1131              		.global	__aeabi_dsub
 1132              		.global	__aeabi_dmul
 1133              		.global	__aeabi_d2iz
 1134              		.global	__aeabi_i2d
 1135 003e 00BF     		.section	.text.LCD_WriteFloat,"ax",%progbits
 1136              		.align	2
 1137              		.global	LCD_WriteFloat
 1138              		.thumb
 1139              		.thumb_func
 1141              	LCD_WriteFloat:
 1142              	.LFB83:
 343:./Src/hd44780.c **** 
 344:./Src/hd44780.c **** LCD_RESULT LCD_WriteFloat(LCD_PCF8574_HandleTypeDef* handle, double number,
 345:./Src/hd44780.c **** 		uint8_t digits) {
 1143              		.loc 1 345 0
 1144              		.cfi_startproc
 1145              		@ args = 4, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              	.LVL129:
 1148 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1149              	.LCFI26:
ARM GAS  /tmp/cc0YzIty.s 			page 27


 1150              		.cfi_def_cfa_offset 24
 1151              		.cfi_offset 4, -24
 1152              		.cfi_offset 5, -20
 1153              		.cfi_offset 6, -16
 1154              		.cfi_offset 7, -12
 1155              		.cfi_offset 8, -8
 1156              		.cfi_offset 14, -4
 1157 0004 8046     		mov	r8, r0
 1158 0006 1746     		mov	r7, r2
 1159 0008 1E46     		mov	r6, r3
 1160 000a 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
 346:./Src/hd44780.c **** 	// Handle negative numbers
 347:./Src/hd44780.c **** 	if (number < 0.0) {
 1161              		.loc 1 347 0
 1162 000e 0022     		movs	r2, #0
 1163              	.LVL130:
 1164 0010 0023     		movs	r3, #0
 1165 0012 3846     		mov	r0, r7
 1166              	.LVL131:
 1167 0014 3146     		mov	r1, r6
 1168 0016 FFF7FEFF 		bl	__aeabi_dcmplt
 1169              	.LVL132:
 1170 001a 28B1     		cbz	r0, .L77
 348:./Src/hd44780.c **** 		LCD_WriteString(handle,"-");
 1171              		.loc 1 348 0
 1172 001c 2A49     		ldr	r1, .L86
 1173 001e 4046     		mov	r0, r8
 1174 0020 FFF7FEFF 		bl	LCD_WriteString
 1175              	.LVL133:
 349:./Src/hd44780.c **** 		number = -number;
 1176              		.loc 1 349 0
 1177 0024 06F10046 		add	r6, r6, #-2147483648
 1178              	.LVL134:
 1179              	.L77:
 1180              	.LBB3:
 350:./Src/hd44780.c **** 	}
 351:./Src/hd44780.c **** 
 352:./Src/hd44780.c **** 	// Round correctly so that print(1.999, 2) prints as "2.00"
 353:./Src/hd44780.c **** 	double rounding = 0.5;
 354:./Src/hd44780.c **** 	for (uint8_t i = 0; i < digits; ++i)
 1181              		.loc 1 354 0
 1182 0028 0024     		movs	r4, #0
 1183              	.LBE3:
 353:./Src/hd44780.c **** 	for (uint8_t i = 0; i < digits; ++i)
 1184              		.loc 1 353 0
 1185 002a 0020     		movs	r0, #0
 1186 002c 2749     		ldr	r1, .L86+4
 1187              	.LBB4:
 1188              		.loc 1 354 0
 1189 002e 05E0     		b	.L79
 1190              	.LVL135:
 1191              	.L80:
 355:./Src/hd44780.c **** 		rounding /= 10.0;
 1192              		.loc 1 355 0 discriminator 3
 1193 0030 0022     		movs	r2, #0
 1194 0032 274B     		ldr	r3, .L86+8
 1195 0034 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/cc0YzIty.s 			page 28


 1196              	.LVL136:
 354:./Src/hd44780.c **** 		rounding /= 10.0;
 1197              		.loc 1 354 0 discriminator 3
 1198 0038 0134     		adds	r4, r4, #1
 1199              	.LVL137:
 1200 003a E4B2     		uxtb	r4, r4
 1201              	.LVL138:
 1202              	.L79:
 354:./Src/hd44780.c **** 		rounding /= 10.0;
 1203              		.loc 1 354 0 is_stmt 0 discriminator 1
 1204 003c AC42     		cmp	r4, r5
 1205 003e F7D3     		bcc	.L80
 1206              	.LBE4:
 356:./Src/hd44780.c **** 
 357:./Src/hd44780.c **** 	number += rounding;
 1207              		.loc 1 357 0 is_stmt 1
 1208 0040 0246     		mov	r2, r0
 1209 0042 0B46     		mov	r3, r1
 1210 0044 3846     		mov	r0, r7
 1211              	.LVL139:
 1212 0046 3146     		mov	r1, r6
 1213 0048 FFF7FEFF 		bl	__aeabi_dadd
 1214              	.LVL140:
 1215 004c 0646     		mov	r6, r0
 1216              	.LVL141:
 1217 004e 0F46     		mov	r7, r1
 1218              	.LVL142:
 358:./Src/hd44780.c **** 
 359:./Src/hd44780.c **** 	// Extract the integer part of the number and print it
 360:./Src/hd44780.c **** 	unsigned long int_part = (unsigned long) number;
 1219              		.loc 1 360 0
 1220 0050 FFF7FEFF 		bl	__aeabi_d2uiz
 1221              	.LVL143:
 1222 0054 0446     		mov	r4, r0
 1223              	.LVL144:
 361:./Src/hd44780.c **** 	double remainder = number - (double) int_part;
 1224              		.loc 1 361 0
 1225 0056 FFF7FEFF 		bl	__aeabi_ui2d
 1226              	.LVL145:
 1227 005a 0246     		mov	r2, r0
 1228 005c 0B46     		mov	r3, r1
 1229 005e 3046     		mov	r0, r6
 1230 0060 3946     		mov	r1, r7
 1231 0062 FFF7FEFF 		bl	__aeabi_dsub
 1232              	.LVL146:
 1233 0066 0646     		mov	r6, r0
 1234              	.LVL147:
 1235 0068 0F46     		mov	r7, r1
 1236              	.LVL148:
 362:./Src/hd44780.c **** 	LCD_WriteNumber(handle,int_part,10);
 1237              		.loc 1 362 0
 1238 006a 0A22     		movs	r2, #10
 1239 006c 2146     		mov	r1, r4
 1240 006e 4046     		mov	r0, r8
 1241 0070 FFF7FEFF 		bl	LCD_WriteNumber
 1242              	.LVL149:
 363:./Src/hd44780.c **** 
ARM GAS  /tmp/cc0YzIty.s 			page 29


 364:./Src/hd44780.c **** 	// Print the decimal point, but only if there are digits beyond
 365:./Src/hd44780.c **** 	if (digits > 0) {
 1243              		.loc 1 365 0
 1244 0074 05B3     		cbz	r5, .L82
 366:./Src/hd44780.c **** 		LCD_WriteString(handle,".");
 1245              		.loc 1 366 0
 1246 0076 1749     		ldr	r1, .L86+12
 1247 0078 4046     		mov	r0, r8
 1248 007a FFF7FEFF 		bl	LCD_WriteString
 1249              	.LVL150:
 1250 007e 1BE0     		b	.L82
 1251              	.LVL151:
 1252              	.L83:
 1253              	.LBB5:
 367:./Src/hd44780.c **** 	}
 368:./Src/hd44780.c **** 
 369:./Src/hd44780.c **** 	// Extract digits from the remainder one at a time
 370:./Src/hd44780.c **** 	while (digits-- > 0) {
 371:./Src/hd44780.c **** 		remainder *= 10.0;
 1254              		.loc 1 371 0
 1255 0080 0022     		movs	r2, #0
 1256 0082 134B     		ldr	r3, .L86+8
 1257 0084 3046     		mov	r0, r6
 1258 0086 3946     		mov	r1, r7
 1259 0088 FFF7FEFF 		bl	__aeabi_dmul
 1260              	.LVL152:
 1261 008c 0646     		mov	r6, r0
 1262              	.LVL153:
 1263 008e 0F46     		mov	r7, r1
 1264              	.LVL154:
 372:./Src/hd44780.c **** 		int toPrint = (int)(remainder);
 1265              		.loc 1 372 0
 1266 0090 FFF7FEFF 		bl	__aeabi_d2iz
 1267              	.LVL155:
 1268 0094 0546     		mov	r5, r0
 1269              	.LVL156:
 373:./Src/hd44780.c **** 		LCD_WriteNumber(handle,toPrint,10);
 1270              		.loc 1 373 0
 1271 0096 0A22     		movs	r2, #10
 1272 0098 0146     		mov	r1, r0
 1273 009a 4046     		mov	r0, r8
 1274              	.LVL157:
 1275 009c FFF7FEFF 		bl	LCD_WriteNumber
 1276              	.LVL158:
 374:./Src/hd44780.c **** 		remainder -= toPrint;
 1277              		.loc 1 374 0
 1278 00a0 2846     		mov	r0, r5
 1279 00a2 FFF7FEFF 		bl	__aeabi_i2d
 1280              	.LVL159:
 1281 00a6 0246     		mov	r2, r0
 1282 00a8 0B46     		mov	r3, r1
 1283 00aa 3046     		mov	r0, r6
 1284 00ac 3946     		mov	r1, r7
 1285 00ae FFF7FEFF 		bl	__aeabi_dsub
 1286              	.LVL160:
 1287 00b2 0646     		mov	r6, r0
 1288              	.LVL161:
ARM GAS  /tmp/cc0YzIty.s 			page 30


 1289 00b4 0F46     		mov	r7, r1
 1290              	.LVL162:
 1291              	.LBE5:
 370:./Src/hd44780.c **** 		remainder *= 10.0;
 1292              		.loc 1 370 0
 1293 00b6 2546     		mov	r5, r4
 1294              	.LVL163:
 1295              	.L82:
 1296 00b8 6B1E     		subs	r3, r5, #1
 1297 00ba DCB2     		uxtb	r4, r3
 1298              	.LVL164:
 1299 00bc 002D     		cmp	r5, #0
 1300 00be DFD1     		bne	.L83
 375:./Src/hd44780.c **** 	}
 376:./Src/hd44780.c **** 	return LCD_OK;
 377:./Src/hd44780.c **** }
 1301              		.loc 1 377 0
 1302 00c0 0020     		movs	r0, #0
 1303 00c2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1304              	.LVL165:
 1305              	.L87:
 1306 00c6 00BF     		.align	2
 1307              	.L86:
 1308 00c8 00000000 		.word	.LC0
 1309 00cc 0000E03F 		.word	1071644672
 1310 00d0 00002440 		.word	1076101120
 1311 00d4 04000000 		.word	.LC1
 1312              		.cfi_endproc
 1313              	.LFE83:
 1315              		.section	.text.LCD_EntryModeSet,"ax",%progbits
 1316              		.align	2
 1317              		.global	LCD_EntryModeSet
 1318              		.thumb
 1319              		.thumb_func
 1321              	LCD_EntryModeSet:
 1322              	.LFB84:
 378:./Src/hd44780.c **** 
 379:./Src/hd44780.c **** LCD_RESULT LCD_EntryModeSet(LCD_PCF8574_HandleTypeDef* handle,
 380:./Src/hd44780.c **** 		LCD_DIRECTION_INC_DEC direction, LCD_SHIFT shift) {
 1323              		.loc 1 380 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327              	.LVL166:
 1328 0000 08B5     		push	{r3, lr}
 1329              	.LCFI27:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 3, -8
 1332              		.cfi_offset 14, -4
 1333              	.LVL167:
 381:./Src/hd44780.c **** 
 382:./Src/hd44780.c **** 	uint8_t cmd = 0;
 383:./Src/hd44780.c **** 	cmd |= 1 << 2;
 384:./Src/hd44780.c **** 	cmd |= direction << 1;
 1334              		.loc 1 384 0
 1335 0002 4900     		lsls	r1, r1, #1
 1336              	.LVL168:
ARM GAS  /tmp/cc0YzIty.s 			page 31


 1337 0004 41F00401 		orr	r1, r1, #4
 1338 0008 C9B2     		uxtb	r1, r1
 1339              	.LVL169:
 385:./Src/hd44780.c **** 	cmd |= shift;
 386:./Src/hd44780.c **** 
 387:./Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 1340              		.loc 1 387 0
 1341 000a 1143     		orrs	r1, r1, r2
 1342              	.LVL170:
 1343 000c FFF7FEFF 		bl	LCD_WriteCMD
 1344              	.LVL171:
 388:./Src/hd44780.c **** 
 389:./Src/hd44780.c **** }
 1345              		.loc 1 389 0
 1346 0010 08BD     		pop	{r3, pc}
 1347              		.cfi_endproc
 1348              	.LFE84:
 1350 0012 00BF     		.section	.text.LCD_Init,"ax",%progbits
 1351              		.align	2
 1352              		.global	LCD_Init
 1353              		.thumb
 1354              		.thumb_func
 1356              	LCD_Init:
 1357              	.LFB68:
  49:./Src/hd44780.c **** 	handle->D = 1;
 1358              		.loc 1 49 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              	.LVL172:
  50:./Src/hd44780.c **** 	handle->B = 0;
 1363              		.loc 1 50 0
 1364 0000 0123     		movs	r3, #1
 1365 0002 4370     		strb	r3, [r0, #1]
  51:./Src/hd44780.c **** 	handle->C = 0;
 1366              		.loc 1 51 0
 1367 0004 0023     		movs	r3, #0
 1368 0006 C370     		strb	r3, [r0, #3]
  52:./Src/hd44780.c **** 	if (handle->type == TYPE0) {
 1369              		.loc 1 52 0
 1370 0008 8370     		strb	r3, [r0, #2]
  53:./Src/hd44780.c **** 		handle->pins = PCF8574_Type0Pins;
 1371              		.loc 1 53 0
 1372 000a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1373 000e 002B     		cmp	r3, #0
 1374 0010 40F08F80 		bne	.L92
  49:./Src/hd44780.c **** 	handle->D = 1;
 1375              		.loc 1 49 0
 1376 0014 10B5     		push	{r4, lr}
 1377              	.LCFI28:
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 4, -8
 1380              		.cfi_offset 14, -4
 1381 0016 0446     		mov	r4, r0
  54:./Src/hd44780.c **** 	} else {
 1382              		.loc 1 54 0
 1383 0018 484B     		ldr	r3, .L95
ARM GAS  /tmp/cc0YzIty.s 			page 32


 1384 001a 8363     		str	r3, [r0, #56]
  59:./Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
 1385              		.loc 1 59 0
 1386 001c 4030     		adds	r0, r0, #64
 1387              	.LVL173:
 1388 001e FFF7FEFF 		bl	PCF8574_Init
 1389              	.LVL174:
 1390 0022 0028     		cmp	r0, #0
 1391 0024 40F08780 		bne	.L93
  64:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
 1392              		.loc 1 64 0
 1393 0028 3220     		movs	r0, #50
 1394 002a FFF7FEFF 		bl	HAL_Delay
 1395              	.LVL175:
  65:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
 1396              		.loc 1 65 0
 1397 002e 0422     		movs	r2, #4
 1398 0030 0021     		movs	r1, #0
 1399 0032 2046     		mov	r0, r4
 1400 0034 FFF7FEFF 		bl	LCD_StateWriteBit
 1401              	.LVL176:
  66:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1402              		.loc 1 66 0
 1403 0038 0522     		movs	r2, #5
 1404 003a 0021     		movs	r1, #0
 1405 003c 2046     		mov	r0, r4
 1406 003e FFF7FEFF 		bl	LCD_StateWriteBit
 1407              	.LVL177:
  67:./Src/hd44780.c **** 
 1408              		.loc 1 67 0
 1409 0042 0622     		movs	r2, #6
 1410 0044 0021     		movs	r1, #0
 1411 0046 2046     		mov	r0, r4
 1412 0048 FFF7FEFF 		bl	LCD_StateWriteBit
 1413              	.LVL178:
  69:./Src/hd44780.c **** 
 1414              		.loc 1 69 0
 1415 004c 0321     		movs	r1, #3
 1416 004e 2046     		mov	r0, r4
 1417 0050 FFF7FEFF 		bl	LCD_WriteToDataBus
 1418              	.LVL179:
  71:./Src/hd44780.c **** 	HAL_Delay(1);
 1419              		.loc 1 71 0
 1420 0054 0622     		movs	r2, #6
 1421 0056 0121     		movs	r1, #1
 1422 0058 2046     		mov	r0, r4
 1423 005a FFF7FEFF 		bl	LCD_StateWriteBit
 1424              	.LVL180:
  72:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1425              		.loc 1 72 0
 1426 005e 0120     		movs	r0, #1
 1427 0060 FFF7FEFF 		bl	HAL_Delay
 1428              	.LVL181:
  73:./Src/hd44780.c **** 	HAL_Delay(5);
 1429              		.loc 1 73 0
 1430 0064 0622     		movs	r2, #6
 1431 0066 0021     		movs	r1, #0
ARM GAS  /tmp/cc0YzIty.s 			page 33


 1432 0068 2046     		mov	r0, r4
 1433 006a FFF7FEFF 		bl	LCD_StateWriteBit
 1434              	.LVL182:
  74:./Src/hd44780.c **** 
 1435              		.loc 1 74 0
 1436 006e 0520     		movs	r0, #5
 1437 0070 FFF7FEFF 		bl	HAL_Delay
 1438              	.LVL183:
  76:./Src/hd44780.c **** 
 1439              		.loc 1 76 0
 1440 0074 0321     		movs	r1, #3
 1441 0076 2046     		mov	r0, r4
 1442 0078 FFF7FEFF 		bl	LCD_WriteToDataBus
 1443              	.LVL184:
  78:./Src/hd44780.c **** 	HAL_Delay(1);
 1444              		.loc 1 78 0
 1445 007c 0622     		movs	r2, #6
 1446 007e 0121     		movs	r1, #1
 1447 0080 2046     		mov	r0, r4
 1448 0082 FFF7FEFF 		bl	LCD_StateWriteBit
 1449              	.LVL185:
  79:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1450              		.loc 1 79 0
 1451 0086 0120     		movs	r0, #1
 1452 0088 FFF7FEFF 		bl	HAL_Delay
 1453              	.LVL186:
  80:./Src/hd44780.c **** 	HAL_Delay(1);
 1454              		.loc 1 80 0
 1455 008c 0622     		movs	r2, #6
 1456 008e 0021     		movs	r1, #0
 1457 0090 2046     		mov	r0, r4
 1458 0092 FFF7FEFF 		bl	LCD_StateWriteBit
 1459              	.LVL187:
  81:./Src/hd44780.c **** 
 1460              		.loc 1 81 0
 1461 0096 0120     		movs	r0, #1
 1462 0098 FFF7FEFF 		bl	HAL_Delay
 1463              	.LVL188:
  83:./Src/hd44780.c **** 
 1464              		.loc 1 83 0
 1465 009c 0321     		movs	r1, #3
 1466 009e 2046     		mov	r0, r4
 1467 00a0 FFF7FEFF 		bl	LCD_WriteToDataBus
 1468              	.LVL189:
  85:./Src/hd44780.c **** 	HAL_Delay(1);
 1469              		.loc 1 85 0
 1470 00a4 0622     		movs	r2, #6
 1471 00a6 0121     		movs	r1, #1
 1472 00a8 2046     		mov	r0, r4
 1473 00aa FFF7FEFF 		bl	LCD_StateWriteBit
 1474              	.LVL190:
  86:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1475              		.loc 1 86 0
 1476 00ae 0120     		movs	r0, #1
 1477 00b0 FFF7FEFF 		bl	HAL_Delay
 1478              	.LVL191:
  87:./Src/hd44780.c **** 	HAL_Delay(1);
ARM GAS  /tmp/cc0YzIty.s 			page 34


 1479              		.loc 1 87 0
 1480 00b4 0622     		movs	r2, #6
 1481 00b6 0021     		movs	r1, #0
 1482 00b8 2046     		mov	r0, r4
 1483 00ba FFF7FEFF 		bl	LCD_StateWriteBit
 1484              	.LVL192:
  88:./Src/hd44780.c **** 
 1485              		.loc 1 88 0
 1486 00be 0120     		movs	r0, #1
 1487 00c0 FFF7FEFF 		bl	HAL_Delay
 1488              	.LVL193:
  90:./Src/hd44780.c **** 
 1489              		.loc 1 90 0
 1490 00c4 0221     		movs	r1, #2
 1491 00c6 2046     		mov	r0, r4
 1492 00c8 FFF7FEFF 		bl	LCD_WriteToDataBus
 1493              	.LVL194:
  92:./Src/hd44780.c **** 	HAL_Delay(1);
 1494              		.loc 1 92 0
 1495 00cc 0622     		movs	r2, #6
 1496 00ce 0121     		movs	r1, #1
 1497 00d0 2046     		mov	r0, r4
 1498 00d2 FFF7FEFF 		bl	LCD_StateWriteBit
 1499              	.LVL195:
  93:./Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1500              		.loc 1 93 0
 1501 00d6 0120     		movs	r0, #1
 1502 00d8 FFF7FEFF 		bl	HAL_Delay
 1503              	.LVL196:
  94:./Src/hd44780.c **** 	HAL_Delay(1);
 1504              		.loc 1 94 0
 1505 00dc 0622     		movs	r2, #6
 1506 00de 0021     		movs	r1, #0
 1507 00e0 2046     		mov	r0, r4
 1508 00e2 FFF7FEFF 		bl	LCD_StateWriteBit
 1509              	.LVL197:
  95:./Src/hd44780.c **** 
 1510              		.loc 1 95 0
 1511 00e6 0120     		movs	r0, #1
 1512 00e8 FFF7FEFF 		bl	HAL_Delay
 1513              	.LVL198:
  98:./Src/hd44780.c **** 	cmd = cmd | (1 << 5);
 1514              		.loc 1 98 0
 1515 00ec 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1516 00ee C900     		lsls	r1, r1, #3
 1517 00f0 C9B2     		uxtb	r1, r1
 1518              	.LVL199:
 101:./Src/hd44780.c **** 
 1519              		.loc 1 101 0
 1520 00f2 41F02001 		orr	r1, r1, #32
 1521              	.LVL200:
 1522 00f6 2046     		mov	r0, r4
 1523 00f8 FFF7FEFF 		bl	LCD_WriteCMD
 1524              	.LVL201:
 105:./Src/hd44780.c **** 	cmd = cmd | handle->B;
 1525              		.loc 1 105 0
 1526 00fc A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
ARM GAS  /tmp/cc0YzIty.s 			page 35


 1527 00fe 5B00     		lsls	r3, r3, #1
 1528 0100 43F00803 		orr	r3, r3, #8
 1529 0104 DBB2     		uxtb	r3, r3
 1530              	.LVL202:
 106:./Src/hd44780.c **** 
 1531              		.loc 1 106 0
 1532 0106 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 1533              	.LVL203:
 108:./Src/hd44780.c **** 
 1534              		.loc 1 108 0
 1535 0108 1943     		orrs	r1, r1, r3
 1536              	.LVL204:
 1537 010a 2046     		mov	r0, r4
 1538 010c FFF7FEFF 		bl	LCD_WriteCMD
 1539              	.LVL205:
 110:./Src/hd44780.c **** 
 1540              		.loc 1 110 0
 1541 0110 2046     		mov	r0, r4
 1542 0112 FFF7FEFF 		bl	LCD_ClearDisplay
 1543              	.LVL206:
 112:./Src/hd44780.c **** 
 1544              		.loc 1 112 0
 1545 0116 0022     		movs	r2, #0
 1546 0118 0121     		movs	r1, #1
 1547 011a 2046     		mov	r0, r4
 1548 011c FFF7FEFF 		bl	LCD_EntryModeSet
 1549              	.LVL207:
 114:./Src/hd44780.c **** 
 1550              		.loc 1 114 0
 1551 0120 2046     		mov	r0, r4
 1552 0122 FFF7FEFF 		bl	LCD_DisplayON
 1553              	.LVL208:
 116:./Src/hd44780.c **** 
 1554              		.loc 1 116 0
 1555 0126 0121     		movs	r1, #1
 1556 0128 2046     		mov	r0, r4
 1557 012a FFF7FEFF 		bl	LCD_StateLEDControl
 1558              	.LVL209:
 118:./Src/hd44780.c **** 
 1559              		.loc 1 118 0
 1560 012e 0020     		movs	r0, #0
 1561 0130 10BD     		pop	{r4, pc}
 1562              	.LVL210:
 1563              	.L92:
 1564              	.LCFI29:
 1565              		.cfi_def_cfa_offset 0
 1566              		.cfi_restore 4
 1567              		.cfi_restore 14
  57:./Src/hd44780.c **** 	}
 1568              		.loc 1 57 0
 1569 0132 0120     		movs	r0, #1
 1570              	.LVL211:
 120:./Src/hd44780.c **** 
 1571              		.loc 1 120 0
 1572 0134 7047     		bx	lr
 1573              	.LVL212:
 1574              	.L93:
ARM GAS  /tmp/cc0YzIty.s 			page 36


 1575              	.LCFI30:
 1576              		.cfi_def_cfa_offset 8
 1577              		.cfi_offset 4, -8
 1578              		.cfi_offset 14, -4
  61:./Src/hd44780.c **** 	}
 1579              		.loc 1 61 0
 1580 0136 0120     		movs	r0, #1
 120:./Src/hd44780.c **** 
 1581              		.loc 1 120 0
 1582 0138 10BD     		pop	{r4, pc}
 1583              	.LVL213:
 1584              	.L96:
 1585 013a 00BF     		.align	2
 1586              	.L95:
 1587 013c 00000000 		.word	.LANCHOR1
 1588              		.cfi_endproc
 1589              	.LFE68:
 1591              		.section	.text.LCD_CustomChar,"ax",%progbits
 1592              		.align	2
 1593              		.global	LCD_CustomChar
 1594              		.thumb
 1595              		.thumb_func
 1597              	LCD_CustomChar:
 1598              	.LFB85:
 390:./Src/hd44780.c **** 
 391:./Src/hd44780.c **** LCD_RESULT LCD_CustomChar(LCD_PCF8574_HandleTypeDef* handle, uint8_t *pattern,
 392:./Src/hd44780.c **** 		uint8_t address) {
 1599              		.loc 1 392 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              	.LVL214:
 1604 0000 70B5     		push	{r4, r5, r6, lr}
 1605              	.LCFI31:
 1606              		.cfi_def_cfa_offset 16
 1607              		.cfi_offset 4, -16
 1608              		.cfi_offset 5, -12
 1609              		.cfi_offset 6, -8
 1610              		.cfi_offset 14, -4
 1611 0002 0646     		mov	r6, r0
 1612 0004 0D46     		mov	r5, r1
 1613              	.LVL215:
 393:./Src/hd44780.c **** 	uint8_t a = 0;
 394:./Src/hd44780.c **** 	int i = 0;
 395:./Src/hd44780.c **** 	a = 8 * address;
 1614              		.loc 1 395 0
 1615 0006 D200     		lsls	r2, r2, #3
 1616              	.LVL216:
 1617 0008 D1B2     		uxtb	r1, r2
 1618              	.LVL217:
 396:./Src/hd44780.c **** 	LCD_WriteCMD(handle, a | 0x40);
 1619              		.loc 1 396 0
 1620 000a 41F04001 		orr	r1, r1, #64
 1621              	.LVL218:
 1622 000e FFF7FEFF 		bl	LCD_WriteCMD
 1623              	.LVL219:
 397:./Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
ARM GAS  /tmp/cc0YzIty.s 			page 37


 1624              		.loc 1 397 0
 1625 0012 0024     		movs	r4, #0
 1626 0014 04E0     		b	.L98
 1627              	.LVL220:
 1628              	.L99:
 398:./Src/hd44780.c **** 		LCD_WriteDATA(handle, pattern[i]);
 1629              		.loc 1 398 0 discriminator 3
 1630 0016 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 1631 0018 3046     		mov	r0, r6
 1632 001a FFF7FEFF 		bl	LCD_WriteDATA
 1633              	.LVL221:
 397:./Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1634              		.loc 1 397 0 discriminator 3
 1635 001e 0134     		adds	r4, r4, #1
 1636              	.LVL222:
 1637              	.L98:
 397:./Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1638              		.loc 1 397 0 is_stmt 0 discriminator 1
 1639 0020 072C     		cmp	r4, #7
 1640 0022 F8DD     		ble	.L99
 399:./Src/hd44780.c **** 	}
 400:./Src/hd44780.c **** 	return LCD_OK;
 401:./Src/hd44780.c **** }
 1641              		.loc 1 401 0 is_stmt 1
 1642 0024 0020     		movs	r0, #0
 1643 0026 70BD     		pop	{r4, r5, r6, pc}
 1644              		.cfi_endproc
 1645              	.LFE85:
 1647              		.global	LCDerrorFlag
 1648              		.global	PCF8574_Type0Pins
 1649              		.section	.bss.LCDerrorFlag,"aw",%nobits
 1650              		.set	.LANCHOR0,. + 0
 1653              	LCDerrorFlag:
 1654 0000 00       		.space	1
 1655              		.section	.rodata.str1.4,"aMS",%progbits,1
 1656              		.align	2
 1657              	.LC0:
 1658 0000 2D00     		.ascii	"-\000"
 1659 0002 0000     		.space	2
 1660              	.LC1:
 1661 0004 2E00     		.ascii	".\000"
 1662              		.section	.data.PCF8574_Type0Pins,"aw",%progbits
 1663              		.align	2
 1664              		.set	.LANCHOR1,. + 0
 1667              	PCF8574_Type0Pins:
 1668 0000 04000000 		.word	4
 1669 0004 05000000 		.word	5
 1670 0008 06000000 		.word	6
 1671 000c 07000000 		.word	7
 1672 0010 00000000 		.word	0
 1673 0014 01000000 		.word	1
 1674 0018 02000000 		.word	2
 1675 001c 03000000 		.word	3
 1676              		.text
 1677              	.Letext0:
 1678              		.file 2 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 1679              		.file 3 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/cc0YzIty.s 			page 38


 1680              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1681              		.file 5 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1682              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1683              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1684              		.file 8 "./Inc/pcf8574.h"
 1685              		.file 9 "./Inc/hd44780.h"
 1686              		.file 10 "./Drivers/CMSIS/Include/core_cm3.h"
 1687              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc0YzIty.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 hd44780.c
     /tmp/cc0YzIty.s:20     .text.LCD_I2C_WriteOut:00000000 $t
     /tmp/cc0YzIty.s:25     .text.LCD_I2C_WriteOut:00000000 LCD_I2C_WriteOut
     /tmp/cc0YzIty.s:69     .text.LCD_I2C_WriteOut:00000024 $d
     /tmp/cc0YzIty.s:74     .text.LCD_StateWriteBit:00000000 $t
     /tmp/cc0YzIty.s:79     .text.LCD_StateWriteBit:00000000 LCD_StateWriteBit
     /tmp/cc0YzIty.s:124    .text.LCD_StateLEDControl:00000000 $t
     /tmp/cc0YzIty.s:129    .text.LCD_StateLEDControl:00000000 LCD_StateLEDControl
     /tmp/cc0YzIty.s:153    .text.LCD_WriteToDataBus:00000000 $t
     /tmp/cc0YzIty.s:158    .text.LCD_WriteToDataBus:00000000 LCD_WriteToDataBus
     /tmp/cc0YzIty.s:267    .text.LCD_GetBusyFlag:00000000 $t
     /tmp/cc0YzIty.s:272    .text.LCD_GetBusyFlag:00000000 LCD_GetBusyFlag
     /tmp/cc0YzIty.s:375    .text.LCD_WaitForBusyFlag:00000000 $t
     /tmp/cc0YzIty.s:380    .text.LCD_WaitForBusyFlag:00000000 LCD_WaitForBusyFlag
     /tmp/cc0YzIty.s:438    .text.LCD_WriteCMD:00000000 $t
     /tmp/cc0YzIty.s:443    .text.LCD_WriteCMD:00000000 LCD_WriteCMD
     /tmp/cc0YzIty.s:526    .text.LCD_WriteCMD:00000064 $d
     /tmp/cc0YzIty.s:531    .text.LCD_WriteDATA:00000000 $t
     /tmp/cc0YzIty.s:536    .text.LCD_WriteDATA:00000000 LCD_WriteDATA
     /tmp/cc0YzIty.s:609    .text.LCD_SetLocation:00000000 $t
     /tmp/cc0YzIty.s:614    .text.LCD_SetLocation:00000000 LCD_SetLocation
     /tmp/cc0YzIty.s:642    .text.LCD_WriteString:00000000 $t
     /tmp/cc0YzIty.s:647    .text.LCD_WriteString:00000000 LCD_WriteString
     /tmp/cc0YzIty.s:717    .text.LCD_ClearDisplay:00000000 $t
     /tmp/cc0YzIty.s:722    .text.LCD_ClearDisplay:00000000 LCD_ClearDisplay
     /tmp/cc0YzIty.s:744    .text.LCD_DisplayON:00000000 $t
     /tmp/cc0YzIty.s:749    .text.LCD_DisplayON:00000000 LCD_DisplayON
     /tmp/cc0YzIty.s:785    .text.LCD_DisplayOFF:00000000 $t
     /tmp/cc0YzIty.s:790    .text.LCD_DisplayOFF:00000000 LCD_DisplayOFF
     /tmp/cc0YzIty.s:826    .text.LCD_CursorON:00000000 $t
     /tmp/cc0YzIty.s:831    .text.LCD_CursorON:00000000 LCD_CursorON
     /tmp/cc0YzIty.s:874    .text.LCD_CursorOFF:00000000 $t
     /tmp/cc0YzIty.s:879    .text.LCD_CursorOFF:00000000 LCD_CursorOFF
     /tmp/cc0YzIty.s:917    .text.LCD_ShiftCursor:00000000 $t
     /tmp/cc0YzIty.s:922    .text.LCD_ShiftCursor:00000000 LCD_ShiftCursor
     /tmp/cc0YzIty.s:979    .text.LCD_ShiftDisplay:00000000 $t
     /tmp/cc0YzIty.s:984    .text.LCD_ShiftDisplay:00000000 LCD_ShiftDisplay
     /tmp/cc0YzIty.s:1041   .text.LCD_WriteNumber:00000000 $t
     /tmp/cc0YzIty.s:1046   .text.LCD_WriteNumber:00000000 LCD_WriteNumber
     /tmp/cc0YzIty.s:1136   .text.LCD_WriteFloat:00000000 $t
     /tmp/cc0YzIty.s:1141   .text.LCD_WriteFloat:00000000 LCD_WriteFloat
     /tmp/cc0YzIty.s:1308   .text.LCD_WriteFloat:000000c8 $d
     /tmp/cc0YzIty.s:1316   .text.LCD_EntryModeSet:00000000 $t
     /tmp/cc0YzIty.s:1321   .text.LCD_EntryModeSet:00000000 LCD_EntryModeSet
     /tmp/cc0YzIty.s:1351   .text.LCD_Init:00000000 $t
     /tmp/cc0YzIty.s:1356   .text.LCD_Init:00000000 LCD_Init
     /tmp/cc0YzIty.s:1587   .text.LCD_Init:0000013c $d
     /tmp/cc0YzIty.s:1592   .text.LCD_CustomChar:00000000 $t
     /tmp/cc0YzIty.s:1597   .text.LCD_CustomChar:00000000 LCD_CustomChar
     /tmp/cc0YzIty.s:1653   .bss.LCDerrorFlag:00000000 LCDerrorFlag
     /tmp/cc0YzIty.s:1667   .data.PCF8574_Type0Pins:00000000 PCF8574_Type0Pins
     /tmp/cc0YzIty.s:1654   .bss.LCDerrorFlag:00000000 $d
     /tmp/cc0YzIty.s:1656   .rodata.str1.4:00000000 $d
     /tmp/cc0YzIty.s:1663   .data.PCF8574_Type0Pins:00000000 $d
                     .debug_frame:00000010 $d

ARM GAS  /tmp/cc0YzIty.s 			page 40


UNDEFINED SYMBOLS
PCF8574_Write
PCF8574_Read
HAL_GetTick
__aeabi_dcmplt
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2iz
__aeabi_i2d
PCF8574_Init
HAL_Delay
