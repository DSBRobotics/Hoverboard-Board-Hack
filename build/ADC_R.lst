ARM GAS  /tmp/ccWyAj55.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_R.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_R_init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_R_init
  22              		.thumb
  23              		.thumb_func
  25              	ADC_R_init:
  26              	.LFB64:
  27              		.file 1 "./Src/ADC_R.c"
   1:./Src/ADC_R.c **** #include "ADC_R.h"
   2:./Src/ADC_R.c **** 
   3:./Src/ADC_R.c **** 
   4:./Src/ADC_R.c **** ADC_HandleTypeDef hadc1;
   5:./Src/ADC_R.c **** DMA_HandleTypeDef hdma_adc1;
   6:./Src/ADC_R.c **** 
   7:./Src/ADC_R.c **** 
   8:./Src/ADC_R.c ****  volatile __IO uint16_t buffer[3];
   9:./Src/ADC_R.c **** 
  10:./Src/ADC_R.c **** volatile __IO struct ADC_Rdati adc_Rdati;
  11:./Src/ADC_R.c **** 
  12:./Src/ADC_R.c **** // ----------------------PUBLIC----------------------
  13:./Src/ADC_R.c **** void ADC_R_init(void){
  28              		.loc 1 13 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40              	.LBB2:
  14:./Src/ADC_R.c **** 
  15:./Src/ADC_R.c ****   ADC_ChannelConfTypeDef sConfig;
  16:./Src/ADC_R.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  41              		.loc 1 16 0
  42 0004 2E4B     		ldr	r3, .L8
ARM GAS  /tmp/ccWyAj55.s 			page 2


  43 0006 5A69     		ldr	r2, [r3, #20]
  44 0008 42F00102 		orr	r2, r2, #1
  45 000c 5A61     		str	r2, [r3, #20]
  46 000e 5B69     		ldr	r3, [r3, #20]
  47 0010 03F00103 		and	r3, r3, #1
  48 0014 0093     		str	r3, [sp]
  49 0016 009B     		ldr	r3, [sp]
  50              	.LBE2:
  17:./Src/ADC_R.c ****   /* DMA interrupt init */
  18:./Src/ADC_R.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
  19:./Src/ADC_R.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 1, 2);
  51              		.loc 1 19 0
  52 0018 0222     		movs	r2, #2
  53 001a 0121     		movs	r1, #1
  54 001c 0B20     		movs	r0, #11
  55 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  56              	.LVL0:
  20:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
  57              		.loc 1 20 0
  58 0022 0B20     		movs	r0, #11
  59 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  60              	.LVL1:
  21:./Src/ADC_R.c **** 
  22:./Src/ADC_R.c ****   hadc1.Instance = ADC1;
  61              		.loc 1 22 0
  62 0028 2648     		ldr	r0, .L8+4
  63 002a 274B     		ldr	r3, .L8+8
  64 002c 0360     		str	r3, [r0]
  23:./Src/ADC_R.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  65              		.loc 1 23 0
  66 002e 4FF48073 		mov	r3, #256
  67 0032 8360     		str	r3, [r0, #8]
  24:./Src/ADC_R.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  68              		.loc 1 24 0
  69 0034 0023     		movs	r3, #0
  70 0036 C360     		str	r3, [r0, #12]
  25:./Src/ADC_R.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  71              		.loc 1 25 0
  72 0038 4361     		str	r3, [r0, #20]
  26:./Src/ADC_R.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  73              		.loc 1 26 0
  74 003a 4FF46022 		mov	r2, #917504
  75 003e C261     		str	r2, [r0, #28]
  27:./Src/ADC_R.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  76              		.loc 1 27 0
  77 0040 4360     		str	r3, [r0, #4]
  28:./Src/ADC_R.c ****   hadc1.Init.NbrOfConversion = 4;
  78              		.loc 1 28 0
  79 0042 0423     		movs	r3, #4
  80 0044 0361     		str	r3, [r0, #16]
  29:./Src/ADC_R.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  81              		.loc 1 29 0
  82 0046 FFF7FEFF 		bl	HAL_ADC_Init
  83              	.LVL2:
  84 004a 08B1     		cbz	r0, .L2
  30:./Src/ADC_R.c ****   {
  31:./Src/ADC_R.c ****     Error_Handler();
ARM GAS  /tmp/ccWyAj55.s 			page 3


  85              		.loc 1 31 0
  86 004c FFF7FEFF 		bl	Error_Handler
  87              	.LVL3:
  88              	.L2:
  32:./Src/ADC_R.c ****   }
  33:./Src/ADC_R.c ****   /*
  34:./Src/ADC_R.c ****   sConfig.Channel = ADC_CHANNEL_10;
  35:./Src/ADC_R.c ****   sConfig.Rank = 1;
  36:./Src/ADC_R.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
  37:./Src/ADC_R.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  38:./Src/ADC_R.c ****   {
  39:./Src/ADC_R.c ****     Error_Handler();
  40:./Src/ADC_R.c ****   }
  41:./Src/ADC_R.c **** */
  42:./Src/ADC_R.c ****     /**Configure Regular Channel
  43:./Src/ADC_R.c ****     */
  44:./Src/ADC_R.c ****   sConfig.Channel = ADC_CHANNEL_11;
  89              		.loc 1 44 0
  90 0050 0B23     		movs	r3, #11
  91 0052 0193     		str	r3, [sp, #4]
  45:./Src/ADC_R.c ****   sConfig.Rank = 1;
  92              		.loc 1 45 0
  93 0054 0123     		movs	r3, #1
  94 0056 0293     		str	r3, [sp, #8]
  46:./Src/ADC_R.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  95              		.loc 1 46 0
  96 0058 01A9     		add	r1, sp, #4
  97 005a 1A48     		ldr	r0, .L8+4
  98 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  99              	.LVL4:
 100 0060 08B1     		cbz	r0, .L3
  47:./Src/ADC_R.c ****   {
  48:./Src/ADC_R.c ****     Error_Handler();
 101              		.loc 1 48 0
 102 0062 FFF7FEFF 		bl	Error_Handler
 103              	.LVL5:
 104              	.L3:
  49:./Src/ADC_R.c ****   }
  50:./Src/ADC_R.c **** 
  51:./Src/ADC_R.c **** 
  52:./Src/ADC_R.c ****     /**Configure Regular Channel
  53:./Src/ADC_R.c ****     */
  54:./Src/ADC_R.c ****   sConfig.Channel = ADC_CHANNEL_12;
 105              		.loc 1 54 0
 106 0066 0C23     		movs	r3, #12
 107 0068 0193     		str	r3, [sp, #4]
  55:./Src/ADC_R.c ****   sConfig.Rank = 2;
 108              		.loc 1 55 0
 109 006a 0223     		movs	r3, #2
 110 006c 0293     		str	r3, [sp, #8]
  56:./Src/ADC_R.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 111              		.loc 1 56 0
 112 006e 01A9     		add	r1, sp, #4
 113 0070 1448     		ldr	r0, .L8+4
 114 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 115              	.LVL6:
 116 0076 08B1     		cbz	r0, .L4
ARM GAS  /tmp/ccWyAj55.s 			page 4


  57:./Src/ADC_R.c ****   {
  58:./Src/ADC_R.c ****     Error_Handler();
 117              		.loc 1 58 0
 118 0078 FFF7FEFF 		bl	Error_Handler
 119              	.LVL7:
 120              	.L4:
  59:./Src/ADC_R.c ****   }
  60:./Src/ADC_R.c **** 
  61:./Src/ADC_R.c ****   sConfig.Channel = ADC_CHANNEL_2;
 121              		.loc 1 61 0
 122 007c 0223     		movs	r3, #2
 123 007e 0193     		str	r3, [sp, #4]
  62:./Src/ADC_R.c ****   sConfig.Rank = 3;
 124              		.loc 1 62 0
 125 0080 0323     		movs	r3, #3
 126 0082 0293     		str	r3, [sp, #8]
  63:./Src/ADC_R.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 127              		.loc 1 63 0
 128 0084 01A9     		add	r1, sp, #4
 129 0086 0F48     		ldr	r0, .L8+4
 130 0088 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 131              	.LVL8:
 132 008c 08B1     		cbz	r0, .L5
  64:./Src/ADC_R.c ****   {
  65:./Src/ADC_R.c ****     Error_Handler();
 133              		.loc 1 65 0
 134 008e FFF7FEFF 		bl	Error_Handler
 135              	.LVL9:
 136              	.L5:
  66:./Src/ADC_R.c ****   }
  67:./Src/ADC_R.c **** 
  68:./Src/ADC_R.c ****   sConfig.Channel = ADC_CHANNEL_3;
 137              		.loc 1 68 0
 138 0092 0323     		movs	r3, #3
 139 0094 0193     		str	r3, [sp, #4]
  69:./Src/ADC_R.c ****   sConfig.Rank = 4;
 140              		.loc 1 69 0
 141 0096 0423     		movs	r3, #4
 142 0098 0293     		str	r3, [sp, #8]
  70:./Src/ADC_R.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 143              		.loc 1 70 0
 144 009a 0DEB0301 		add	r1, sp, r3
 145 009e 0948     		ldr	r0, .L8+4
 146 00a0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 147              	.LVL10:
 148 00a4 08B1     		cbz	r0, .L6
  71:./Src/ADC_R.c ****   {
  72:./Src/ADC_R.c ****     Error_Handler();
 149              		.loc 1 72 0
 150 00a6 FFF7FEFF 		bl	Error_Handler
 151              	.LVL11:
 152              	.L6:
  73:./Src/ADC_R.c ****   }
  74:./Src/ADC_R.c **** 
  75:./Src/ADC_R.c ****   HAL_ADC_Start(&hadc1);
 153              		.loc 1 75 0
 154 00aa 064C     		ldr	r4, .L8+4
ARM GAS  /tmp/ccWyAj55.s 			page 5


 155 00ac 2046     		mov	r0, r4
 156 00ae FFF7FEFF 		bl	HAL_ADC_Start
 157              	.LVL12:
  76:./Src/ADC_R.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_Rdati.data, 4);
 158              		.loc 1 76 0
 159 00b2 0422     		movs	r2, #4
 160 00b4 0549     		ldr	r1, .L8+12
 161 00b6 2046     		mov	r0, r4
 162 00b8 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 163              	.LVL13:
  77:./Src/ADC_R.c **** 
  78:./Src/ADC_R.c **** }
 164              		.loc 1 78 0
 165 00bc 04B0     		add	sp, sp, #16
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 8
 168              		@ sp needed
 169 00be 10BD     		pop	{r4, pc}
 170              	.L9:
 171              		.align	2
 172              	.L8:
 173 00c0 00100240 		.word	1073876992
 174 00c4 00000000 		.word	hadc1
 175 00c8 00240140 		.word	1073816576
 176 00cc 00000000 		.word	adc_Rdati
 177              		.cfi_endproc
 178              	.LFE64:
 180              		.global	__aeabi_ui2f
 181              		.global	__aeabi_f2d
 182              		.global	__aeabi_dmul
 183              		.global	__aeabi_d2f
 184              		.section	.text.GET_BATTERY_VOLT,"ax",%progbits
 185              		.align	2
 186              		.global	GET_BATTERY_VOLT
 187              		.thumb
 188              		.thumb_func
 190              	GET_BATTERY_VOLT:
 191              	.LFB65:
  79:./Src/ADC_R.c **** 
  80:./Src/ADC_R.c **** 
  81:./Src/ADC_R.c **** 
  82:./Src/ADC_R.c **** // ------------NORMALIZATE----------------
  83:./Src/ADC_R.c **** float GET_BATTERY_VOLT(void){
 192              		.loc 1 83 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 10B5     		push	{r4, lr}
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
  84:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 201              		.loc 1 84 0
 202 0002 0B20     		movs	r0, #11
 203 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 204              	.LVL14:
ARM GAS  /tmp/ccWyAj55.s 			page 6


  85:./Src/ADC_R.c ****   uint16_t data = adc_Rdati.data[0];
 205              		.loc 1 85 0
 206 0008 0B4B     		ldr	r3, .L12+8
 207 000a 1C88     		ldrh	r4, [r3]
 208 000c A4B2     		uxth	r4, r4
 209              	.LVL15:
  86:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 210              		.loc 1 86 0
 211 000e 0B20     		movs	r0, #11
 212 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 213              	.LVL16:
  87:./Src/ADC_R.c ****   return (float)data * ADC_BATTERY_VOLT;
 214              		.loc 1 87 0
 215 0014 2046     		mov	r0, r4
 216 0016 FFF7FEFF 		bl	__aeabi_ui2f
 217              	.LVL17:
 218 001a FFF7FEFF 		bl	__aeabi_f2d
 219              	.LVL18:
 220 001e 04A3     		adr	r3, .L12
 221 0020 D3E90023 		ldrd	r2, [r3]
 222 0024 FFF7FEFF 		bl	__aeabi_dmul
 223              	.LVL19:
 224 0028 FFF7FEFF 		bl	__aeabi_d2f
 225              	.LVL20:
  88:./Src/ADC_R.c **** }
 226              		.loc 1 88 0
 227 002c 10BD     		pop	{r4, pc}
 228              	.LVL21:
 229              	.L13:
 230 002e 00BF     		.align	3
 231              	.L12:
 232 0030 6C787AA5 		.word	-1518700436
 233 0034 2C439C3F 		.word	1067205420
 234 0038 00000000 		.word	adc_Rdati
 235              		.cfi_endproc
 236              	.LFE65:
 238              		.global	__aeabi_i2d
 239              		.section	.text.GET_MOTOR_R_AMP,"ax",%progbits
 240              		.align	2
 241              		.global	GET_MOTOR_R_AMP
 242              		.thumb
 243              		.thumb_func
 245              	GET_MOTOR_R_AMP:
 246              	.LFB66:
  89:./Src/ADC_R.c **** float GET_MOTOR_R_AMP(void){
 247              		.loc 1 89 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 10B5     		push	{r4, lr}
 252              	.LCFI4:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 4, -8
 255              		.cfi_offset 14, -4
  90:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 256              		.loc 1 90 0
 257 0002 0B20     		movs	r0, #11
ARM GAS  /tmp/ccWyAj55.s 			page 7


 258 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 259              	.LVL22:
  91:./Src/ADC_R.c ****   uint16_t data = adc_Rdati.data[1];
 260              		.loc 1 91 0
 261 0008 0D4B     		ldr	r3, .L18+8
 262 000a 5C88     		ldrh	r4, [r3, #2]
 263 000c A4B2     		uxth	r4, r4
 264              	.LVL23:
  92:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 265              		.loc 1 92 0
 266 000e 0B20     		movs	r0, #11
 267 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 268              	.LVL24:
  93:./Src/ADC_R.c ****   if(data<ADC_MOTOR_R_CENTER){
 269              		.loc 1 93 0
 270 0014 40F26B73 		movw	r3, #1899
 271 0018 9C42     		cmp	r4, r3
 272 001a 0BD9     		bls	.L16
  94:./Src/ADC_R.c ****     return 0.0;
  95:./Src/ADC_R.c ****   }
  96:./Src/ADC_R.c ****   return (data - ADC_MOTOR_R_CENTER) * MOTOR_R_AMP_CONV_AMP;
 273              		.loc 1 96 0
 274 001c A4F26C70 		subw	r0, r4, #1900
 275 0020 FFF7FEFF 		bl	__aeabi_i2d
 276              	.LVL25:
 277 0024 04A3     		adr	r3, .L18
 278 0026 D3E90023 		ldrd	r2, [r3]
 279 002a FFF7FEFF 		bl	__aeabi_dmul
 280              	.LVL26:
 281 002e FFF7FEFF 		bl	__aeabi_d2f
 282              	.LVL27:
 283 0032 10BD     		pop	{r4, pc}
 284              	.LVL28:
 285              	.L16:
  94:./Src/ADC_R.c ****     return 0.0;
 286              		.loc 1 94 0
 287 0034 0020     		movs	r0, #0
  97:./Src/ADC_R.c **** }
 288              		.loc 1 97 0
 289 0036 10BD     		pop	{r4, pc}
 290              	.LVL29:
 291              	.L19:
 292              		.align	3
 293              	.L18:
 294 0038 D2131C3D 		.word	1025250258
 295 003c C1D1933F 		.word	1066652097
 296 0040 00000000 		.word	adc_Rdati
 297              		.cfi_endproc
 298              	.LFE66:
 300              		.section	.text.ADC_MOTOR_RIGHT_IS_CONV,"ax",%progbits
 301              		.align	2
 302              		.global	ADC_MOTOR_RIGHT_IS_CONV
 303              		.thumb
 304              		.thumb_func
 306              	ADC_MOTOR_RIGHT_IS_CONV:
 307              	.LFB67:
  98:./Src/ADC_R.c **** // ------------RAW----------------
ARM GAS  /tmp/ccWyAj55.s 			page 8


  99:./Src/ADC_R.c **** uint8_t ADC_MOTOR_RIGHT_IS_CONV(void){
 308              		.loc 1 99 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 10B5     		push	{r4, lr}
 313              	.LCFI5:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 4, -8
 316              		.cfi_offset 14, -4
 317              	.LVL30:
 100:./Src/ADC_R.c ****   uint8_t data=0;
 101:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 318              		.loc 1 101 0
 319 0002 0B20     		movs	r0, #11
 320 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 321              	.LVL31:
 102:./Src/ADC_R.c ****   data = adc_Rdati.convflag;
 322              		.loc 1 102 0
 323 0008 034B     		ldr	r3, .L22
 324 000a 9C7A     		ldrb	r4, [r3, #10]	@ zero_extendqisi2
 325 000c E4B2     		uxtb	r4, r4
 326              	.LVL32:
 103:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 327              		.loc 1 103 0
 328 000e 0B20     		movs	r0, #11
 329 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 330              	.LVL33:
 104:./Src/ADC_R.c ****   return data;
 105:./Src/ADC_R.c **** }
 331              		.loc 1 105 0
 332 0014 2046     		mov	r0, r4
 333 0016 10BD     		pop	{r4, pc}
 334              	.LVL34:
 335              	.L23:
 336              		.align	2
 337              	.L22:
 338 0018 00000000 		.word	adc_Rdati
 339              		.cfi_endproc
 340              	.LFE67:
 342              		.section	.text.ADC_MOTOR_RIGHT,"ax",%progbits
 343              		.align	2
 344              		.global	ADC_MOTOR_RIGHT
 345              		.thumb
 346              		.thumb_func
 348              	ADC_MOTOR_RIGHT:
 349              	.LFB68:
 106:./Src/ADC_R.c **** 
 107:./Src/ADC_R.c **** uint16_t ADC_MOTOR_RIGHT(void){
 350              		.loc 1 107 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 10B5     		push	{r4, lr}
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
ARM GAS  /tmp/ccWyAj55.s 			page 9


 358              		.cfi_offset 14, -4
 359              	.LVL35:
 108:./Src/ADC_R.c ****   uint16_t data=0;
 109:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 360              		.loc 1 109 0
 361 0002 0B20     		movs	r0, #11
 362 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 363              	.LVL36:
 110:./Src/ADC_R.c ****   data = adc_Rdati.data[3];
 364              		.loc 1 110 0
 365 0008 034B     		ldr	r3, .L26
 366 000a DC88     		ldrh	r4, [r3, #6]
 367 000c A4B2     		uxth	r4, r4
 368              	.LVL37:
 111:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 369              		.loc 1 111 0
 370 000e 0B20     		movs	r0, #11
 371 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 372              	.LVL38:
 112:./Src/ADC_R.c ****   return data;
 113:./Src/ADC_R.c **** }
 373              		.loc 1 113 0
 374 0014 2046     		mov	r0, r4
 375 0016 10BD     		pop	{r4, pc}
 376              	.LVL39:
 377              	.L27:
 378              		.align	2
 379              	.L26:
 380 0018 00000000 		.word	adc_Rdati
 381              		.cfi_endproc
 382              	.LFE68:
 384              		.section	.text.ADC_BATTERY,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_BATTERY
 387              		.thumb
 388              		.thumb_func
 390              	ADC_BATTERY:
 391              	.LFB69:
 114:./Src/ADC_R.c **** uint16_t ADC_BATTERY(void){
 392              		.loc 1 114 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 10B5     		push	{r4, lr}
 397              	.LCFI7:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401              	.LVL40:
 115:./Src/ADC_R.c ****   uint16_t data=0;
 116:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 402              		.loc 1 116 0
 403 0002 0B20     		movs	r0, #11
 404 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 405              	.LVL41:
 117:./Src/ADC_R.c ****   data = adc_Rdati.data[0];
 406              		.loc 1 117 0
ARM GAS  /tmp/ccWyAj55.s 			page 10


 407 0008 034B     		ldr	r3, .L30
 408 000a 1C88     		ldrh	r4, [r3]
 409 000c A4B2     		uxth	r4, r4
 410              	.LVL42:
 118:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 411              		.loc 1 118 0
 412 000e 0B20     		movs	r0, #11
 413 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 414              	.LVL43:
 119:./Src/ADC_R.c ****   return data;
 120:./Src/ADC_R.c **** }
 415              		.loc 1 120 0
 416 0014 2046     		mov	r0, r4
 417 0016 10BD     		pop	{r4, pc}
 418              	.LVL44:
 419              	.L31:
 420              		.align	2
 421              	.L30:
 422 0018 00000000 		.word	adc_Rdati
 423              		.cfi_endproc
 424              	.LFE69:
 426              		.section	.text.ADC_PA2,"ax",%progbits
 427              		.align	2
 428              		.global	ADC_PA2
 429              		.thumb
 430              		.thumb_func
 432              	ADC_PA2:
 433              	.LFB70:
 121:./Src/ADC_R.c **** 
 122:./Src/ADC_R.c **** uint16_t ADC_PA2(void){
 434              		.loc 1 122 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 10B5     		push	{r4, lr}
 439              	.LCFI8:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 443              	.LVL45:
 123:./Src/ADC_R.c ****   uint16_t data=0;
 124:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 444              		.loc 1 124 0
 445 0002 0B20     		movs	r0, #11
 446 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 447              	.LVL46:
 125:./Src/ADC_R.c ****   data = adc_Rdati.data[1];
 448              		.loc 1 125 0
 449 0008 034B     		ldr	r3, .L34
 450 000a 5C88     		ldrh	r4, [r3, #2]
 451 000c A4B2     		uxth	r4, r4
 452              	.LVL47:
 126:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 453              		.loc 1 126 0
 454 000e 0B20     		movs	r0, #11
 455 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 456              	.LVL48:
ARM GAS  /tmp/ccWyAj55.s 			page 11


 127:./Src/ADC_R.c ****   return data;
 128:./Src/ADC_R.c **** }
 457              		.loc 1 128 0
 458 0014 2046     		mov	r0, r4
 459 0016 10BD     		pop	{r4, pc}
 460              	.LVL49:
 461              	.L35:
 462              		.align	2
 463              	.L34:
 464 0018 00000000 		.word	adc_Rdati
 465              		.cfi_endproc
 466              	.LFE70:
 468              		.section	.text.ADC_PA3,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_PA3
 471              		.thumb
 472              		.thumb_func
 474              	ADC_PA3:
 475              	.LFB71:
 129:./Src/ADC_R.c **** 
 130:./Src/ADC_R.c **** 
 131:./Src/ADC_R.c **** uint16_t ADC_PA3(void){
 476              		.loc 1 131 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 10B5     		push	{r4, lr}
 481              	.LCFI9:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 4, -8
 484              		.cfi_offset 14, -4
 485              	.LVL50:
 132:./Src/ADC_R.c ****   uint16_t data=0;
 133:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 486              		.loc 1 133 0
 487 0002 0B20     		movs	r0, #11
 488 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 489              	.LVL51:
 134:./Src/ADC_R.c ****   data = adc_Rdati.data[2];
 490              		.loc 1 134 0
 491 0008 034B     		ldr	r3, .L38
 492 000a 9C88     		ldrh	r4, [r3, #4]
 493 000c A4B2     		uxth	r4, r4
 494              	.LVL52:
 135:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 495              		.loc 1 135 0
 496 000e 0B20     		movs	r0, #11
 497 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 498              	.LVL53:
 136:./Src/ADC_R.c ****   return data;
 137:./Src/ADC_R.c **** }
 499              		.loc 1 137 0
 500 0014 2046     		mov	r0, r4
 501 0016 10BD     		pop	{r4, pc}
 502              	.LVL54:
 503              	.L39:
 504              		.align	2
ARM GAS  /tmp/ccWyAj55.s 			page 12


 505              	.L38:
 506 0018 00000000 		.word	adc_Rdati
 507              		.cfi_endproc
 508              	.LFE71:
 510              		.section	.text.ADC_R_ResetFlag,"ax",%progbits
 511              		.align	2
 512              		.global	ADC_R_ResetFlag
 513              		.thumb
 514              		.thumb_func
 516              	ADC_R_ResetFlag:
 517              	.LFB72:
 138:./Src/ADC_R.c **** 
 139:./Src/ADC_R.c **** 
 140:./Src/ADC_R.c **** 
 141:./Src/ADC_R.c **** 
 142:./Src/ADC_R.c **** void ADC_R_ResetFlag(void){
 518              		.loc 1 142 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI10:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 143:./Src/ADC_R.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 527              		.loc 1 143 0
 528 0002 0B20     		movs	r0, #11
 529 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 530              	.LVL55:
 144:./Src/ADC_R.c ****   adc_Rdati.convflag = 0;
 531              		.loc 1 144 0
 532 0008 0022     		movs	r2, #0
 533 000a 034B     		ldr	r3, .L42
 534 000c 9A72     		strb	r2, [r3, #10]
 145:./Src/ADC_R.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 535              		.loc 1 145 0
 536 000e 0B20     		movs	r0, #11
 537 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 538              	.LVL56:
 539 0014 08BD     		pop	{r3, pc}
 540              	.L43:
 541 0016 00BF     		.align	2
 542              	.L42:
 543 0018 00000000 		.word	adc_Rdati
 544              		.cfi_endproc
 545              	.LFE72:
 547              		.section	.text.ADC_R_callback,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_R_callback
 550              		.thumb
 551              		.thumb_func
 553              	ADC_R_callback:
 554              	.LFB73:
 146:./Src/ADC_R.c **** }
 147:./Src/ADC_R.c **** 
 148:./Src/ADC_R.c **** // ----------------------PRIVATE----------------------
ARM GAS  /tmp/ccWyAj55.s 			page 13


 149:./Src/ADC_R.c **** 
 150:./Src/ADC_R.c **** 
 151:./Src/ADC_R.c **** 
 152:./Src/ADC_R.c **** void ADC_R_callback(void){
 555              		.loc 1 152 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 153:./Src/ADC_R.c ****   adc_Rdati.convflag = 1;
 560              		.loc 1 153 0
 561 0000 0122     		movs	r2, #1
 562 0002 014B     		ldr	r3, .L45
 563 0004 9A72     		strb	r2, [r3, #10]
 564 0006 7047     		bx	lr
 565              	.L46:
 566              		.align	2
 567              	.L45:
 568 0008 00000000 		.word	adc_Rdati
 569              		.cfi_endproc
 570              	.LFE73:
 572              		.comm	adc_Rdati,12,4
 573              		.comm	buffer,6,4
 574              		.comm	hdma_adc1,56,4
 575              		.comm	hadc1,48,4
 576              		.text
 577              	.Letext0:
 578              		.file 2 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 579              		.file 3 "/home/niklas/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 580              		.file 4 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 581              		.file 5 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 582              		.file 6 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 583              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 584              		.file 8 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 585              		.file 9 "./Inc/ADC_R.h"
 586              		.file 10 "./Drivers/CMSIS/Include/core_cm3.h"
 587              		.file 11 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccWyAj55.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 ADC_R.c
     /tmp/ccWyAj55.s:20     .text.ADC_R_init:00000000 $t
     /tmp/ccWyAj55.s:25     .text.ADC_R_init:00000000 ADC_R_init
     /tmp/ccWyAj55.s:173    .text.ADC_R_init:000000c0 $d
                            *COM*:00000030 hadc1
                            *COM*:0000000c adc_Rdati
     /tmp/ccWyAj55.s:185    .text.GET_BATTERY_VOLT:00000000 $t
     /tmp/ccWyAj55.s:190    .text.GET_BATTERY_VOLT:00000000 GET_BATTERY_VOLT
     /tmp/ccWyAj55.s:232    .text.GET_BATTERY_VOLT:00000030 $d
     /tmp/ccWyAj55.s:240    .text.GET_MOTOR_R_AMP:00000000 $t
     /tmp/ccWyAj55.s:245    .text.GET_MOTOR_R_AMP:00000000 GET_MOTOR_R_AMP
     /tmp/ccWyAj55.s:294    .text.GET_MOTOR_R_AMP:00000038 $d
     /tmp/ccWyAj55.s:301    .text.ADC_MOTOR_RIGHT_IS_CONV:00000000 $t
     /tmp/ccWyAj55.s:306    .text.ADC_MOTOR_RIGHT_IS_CONV:00000000 ADC_MOTOR_RIGHT_IS_CONV
     /tmp/ccWyAj55.s:338    .text.ADC_MOTOR_RIGHT_IS_CONV:00000018 $d
     /tmp/ccWyAj55.s:343    .text.ADC_MOTOR_RIGHT:00000000 $t
     /tmp/ccWyAj55.s:348    .text.ADC_MOTOR_RIGHT:00000000 ADC_MOTOR_RIGHT
     /tmp/ccWyAj55.s:380    .text.ADC_MOTOR_RIGHT:00000018 $d
     /tmp/ccWyAj55.s:385    .text.ADC_BATTERY:00000000 $t
     /tmp/ccWyAj55.s:390    .text.ADC_BATTERY:00000000 ADC_BATTERY
     /tmp/ccWyAj55.s:422    .text.ADC_BATTERY:00000018 $d
     /tmp/ccWyAj55.s:427    .text.ADC_PA2:00000000 $t
     /tmp/ccWyAj55.s:432    .text.ADC_PA2:00000000 ADC_PA2
     /tmp/ccWyAj55.s:464    .text.ADC_PA2:00000018 $d
     /tmp/ccWyAj55.s:469    .text.ADC_PA3:00000000 $t
     /tmp/ccWyAj55.s:474    .text.ADC_PA3:00000000 ADC_PA3
     /tmp/ccWyAj55.s:506    .text.ADC_PA3:00000018 $d
     /tmp/ccWyAj55.s:511    .text.ADC_R_ResetFlag:00000000 $t
     /tmp/ccWyAj55.s:516    .text.ADC_R_ResetFlag:00000000 ADC_R_ResetFlag
     /tmp/ccWyAj55.s:543    .text.ADC_R_ResetFlag:00000018 $d
     /tmp/ccWyAj55.s:548    .text.ADC_R_callback:00000000 $t
     /tmp/ccWyAj55.s:553    .text.ADC_R_callback:00000000 ADC_R_callback
     /tmp/ccWyAj55.s:568    .text.ADC_R_callback:00000008 $d
                            *COM*:00000006 buffer
                            *COM*:00000038 hdma_adc1
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
Error_Handler
HAL_ADC_ConfigChannel
HAL_ADC_Start
HAL_ADC_Start_DMA
__aeabi_ui2f
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
HAL_NVIC_DisableIRQ
__aeabi_i2d
