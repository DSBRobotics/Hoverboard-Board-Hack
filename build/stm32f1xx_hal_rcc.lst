ARM GAS  /tmp/ccrxodeU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_RCC_DeInit:
  25              	.LFB63:
  26              		.file 1 "./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @version V1.0.4
   6:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @date    29-April-2016
   7:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *       
  13:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim                
  14:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  17:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  18:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
ARM GAS  /tmp/ccrxodeU.s 			page 2


  33:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
  34:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  35:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  37:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  38:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  41:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  44:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  45:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  46:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  49:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  50:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  51:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  52:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  53:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  55:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  65:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  66:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  77:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  78:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** */
  79:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  80:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  82:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  83:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  84:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  88:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  89:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/ccrxodeU.s 			page 3


  90:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  91:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  94:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  98:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  99:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
 100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim    
 138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
ARM GAS  /tmp/ccrxodeU.s 			page 4


 147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128. 
 183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
ARM GAS  /tmp/ccrxodeU.s 			page 5


 204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE and PLL OFF
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  27              		.loc 1 222 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 10B4     		push	{r4}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 4, -4
 223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
 224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
  36              		.loc 1 224 0
  37 0002 124B     		ldr	r3, .L3
  38 0004 5A68     		ldr	r2, [r3, #4]
  39 0006 22F00302 		bic	r2, r2, #3
  40 000a 5A60     		str	r2, [r3, #4]
 225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON, CSSON, & PLLON bits */
 227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON);
  41              		.loc 1 227 0
  42 000c 1A68     		ldr	r2, [r3]
  43 000e 22F08472 		bic	r2, r2, #17301504
  44 0012 22F48032 		bic	r2, r2, #65536
  45 0016 1A60     		str	r2, [r3]
 228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  46              		.loc 1 230 0
  47 0018 1A68     		ldr	r2, [r3]
  48 001a 22F48022 		bic	r2, r2, #262144
  49 001e 1A60     		str	r2, [r3]
 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  50              		.loc 1 233 0
  51 0020 0024     		movs	r4, #0
  52 0022 5C60     		str	r4, [r3, #4]
 234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
ARM GAS  /tmp/ccrxodeU.s 			page 6


 235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, ((uint32_t)0x10 << POSITION_VAL(RCC_CR_HSITRIM)));
  53              		.loc 1 236 0
  54 0024 1A68     		ldr	r2, [r3]
  55 0026 22F0F800 		bic	r0, r2, #248
  56              	.LVL0:
  57              	.LBB135:
  58              	.LBB136:
  59              		.file 2 "./Drivers/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:./Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:./Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:./Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:./Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/ccrxodeU.s 			page 7


  49:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
ARM GAS  /tmp/ccrxodeU.s 			page 8


 106:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
ARM GAS  /tmp/ccrxodeU.s 			page 9


 163:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
ARM GAS  /tmp/ccrxodeU.s 			page 10


 220:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:./Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
ARM GAS  /tmp/ccrxodeU.s 			page 11


 277:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:./Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:./Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
ARM GAS  /tmp/ccrxodeU.s 			page 12


 334:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:./Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:./Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:./Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  /tmp/ccrxodeU.s 			page 13


 391:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:./Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:./Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:./Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:./Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:./Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/ccrxodeU.s 			page 14


 448:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:./Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/ccrxodeU.s 			page 15


 505:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:./Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:./Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
  60              		.loc 2 531 0
  61 002a F821     		movs	r1, #248
  62              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  63 002c 91FAA1F1 		rbit r1, r1
  64              	@ 0 "" 2
  65              	.LVL1:
  66              		.thumb
  67              	.LBE136:
  68              	.LBE135:
  69              		.loc 1 236 0
  70 0030 B1FA81F1 		clz	r1, r1
  71              	.LVL2:
  72 0034 1022     		movs	r2, #16
  73 0036 8A40     		lsls	r2, r2, r1
  74 0038 0243     		orrs	r2, r2, r0
  75 003a 1A60     		str	r2, [r3]
 237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if (defined(STM32F105xC) || defined(STM32F107xC) || defined (STM32F100xB) || defined (STM32F100xE)
 239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* STM32F105xC || STM32F107xC || STM32F100xB || STM32F100xE */
 243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  76              		.loc 1 244 0
  77 003c 9C60     		str	r4, [r3, #8]
 245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  78              		.loc 1 247 0
ARM GAS  /tmp/ccrxodeU.s 			page 16


  79 003e 044A     		ldr	r2, .L3+4
  80 0040 044B     		ldr	r3, .L3+8
  81 0042 1A60     		str	r2, [r3]
 248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
  82              		.loc 1 248 0
  83 0044 5DF8044B 		ldr	r4, [sp], #4
  84              	.LCFI1:
  85              		.cfi_restore 4
  86              		.cfi_def_cfa_offset 0
  87 0048 7047     		bx	lr
  88              	.L4:
  89 004a 00BF     		.align	2
  90              	.L3:
  91 004c 00100240 		.word	1073876992
  92 0050 00127A00 		.word	8000000
  93 0054 00000000 		.word	SystemCoreClock
  94              		.cfi_endproc
  95              	.LFE63:
  97              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  98              		.align	2
  99              		.global	HAL_RCC_OscConfig
 100              		.thumb
 101              		.thumb_func
 103              	HAL_RCC_OscConfig:
 104              	.LFB64:
 249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 105              		.loc 1 266 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              	.LVL3:
 110 0000 30B5     		push	{r4, r5, lr}
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 116 0002 83B0     		sub	sp, sp, #12
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccrxodeU.s 			page 17


 119 0004 0446     		mov	r4, r0
 120              	.LVL4:
 267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0;
 268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 121              		.loc 1 274 0
 122 0006 0368     		ldr	r3, [r0]
 123 0008 13F0010F 		tst	r3, #1
 124 000c 00F09680 		beq	.L6
 275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 125              		.loc 1 280 0
 126 0010 B24B     		ldr	r3, .L93
 127 0012 5B68     		ldr	r3, [r3, #4]
 128 0014 03F00C03 		and	r3, r3, #12
 129 0018 042B     		cmp	r3, #4
 130 001a 0AD0     		beq	.L7
 281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 131              		.loc 1 281 0
 132 001c AF4B     		ldr	r3, .L93
 133 001e 5B68     		ldr	r3, [r3, #4]
 134 0020 03F00C03 		and	r3, r3, #12
 135 0024 082B     		cmp	r3, #8
 136 0026 1BD1     		bne	.L8
 137              		.loc 1 281 0 is_stmt 0 discriminator 1
 138 0028 AC4B     		ldr	r3, .L93
 139 002a 5B68     		ldr	r3, [r3, #4]
 140 002c 13F4803F 		tst	r3, #65536
 141 0030 16D0     		beq	.L8
 142              	.L7:
 143              	.LVL5:
 144              	.LBB137:
 145              	.LBB138:
 146              		.loc 2 531 0 is_stmt 1
 147 0032 4FF40033 		mov	r3, #131072
 148              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 149 0036 93FAA3F3 		rbit r3, r3
 150              	@ 0 "" 2
 151              		.thumb
 152              	.LBE138:
 153              	.LBE137:
 282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 154              		.loc 1 283 0
 155 003a A84B     		ldr	r3, .L93
 156 003c 1A68     		ldr	r2, [r3]
 157              	.LVL6:
 158              	.LBB139:
ARM GAS  /tmp/ccrxodeU.s 			page 18


 159              	.LBB140:
 160              		.loc 2 531 0
 161 003e 4FF40033 		mov	r3, #131072
 162              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0042 93FAA3F3 		rbit r3, r3
 164              	@ 0 "" 2
 165              	.LVL7:
 166              		.thumb
 167              	.LBE140:
 168              	.LBE139:
 169              		.loc 1 283 0
 170 0046 B3FA83F3 		clz	r3, r3
 171              	.LVL8:
 172 004a 03F01F03 		and	r3, r3, #31
 173 004e 22FA03F3 		lsr	r3, r2, r3
 174 0052 13F0010F 		tst	r3, #1
 175 0056 71D0     		beq	.L6
 176              		.loc 1 283 0 is_stmt 0 discriminator 9
 177 0058 6368     		ldr	r3, [r4, #4]
 178 005a 002B     		cmp	r3, #0
 179 005c 6ED1     		bne	.L6
 180 005e 9EE2     		b	.L76
 181              	.LVL9:
 182              	.L8:
 284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 183              		.loc 1 291 0 is_stmt 1
 184 0060 6368     		ldr	r3, [r4, #4]
 185 0062 B3F5803F 		cmp	r3, #65536
 186 0066 05D1     		bne	.L12
 187              		.loc 1 291 0 is_stmt 0 discriminator 1
 188 0068 9C4A     		ldr	r2, .L93
 189 006a 1368     		ldr	r3, [r2]
 190 006c 43F48033 		orr	r3, r3, #65536
 191 0070 1360     		str	r3, [r2]
 192 0072 26E0     		b	.L13
 193              	.L12:
 194              		.loc 1 291 0 discriminator 2
 195 0074 63B9     		cbnz	r3, .L14
 196              		.loc 1 291 0 discriminator 3
 197 0076 03F18043 		add	r3, r3, #1073741824
 198 007a 03F50433 		add	r3, r3, #135168
 199 007e 1A68     		ldr	r2, [r3]
 200 0080 22F48032 		bic	r2, r2, #65536
 201 0084 1A60     		str	r2, [r3]
 202 0086 1A68     		ldr	r2, [r3]
 203 0088 22F48022 		bic	r2, r2, #262144
 204 008c 1A60     		str	r2, [r3]
 205 008e 18E0     		b	.L13
 206              	.L14:
 207              		.loc 1 291 0 discriminator 4
ARM GAS  /tmp/ccrxodeU.s 			page 19


 208 0090 B3F5A02F 		cmp	r3, #327680
 209 0094 0CD1     		bne	.L15
 210              		.loc 1 291 0 discriminator 5
 211 0096 03F18043 		add	r3, r3, #1073741824
 212 009a A3F53C33 		sub	r3, r3, #192512
 213 009e 1A68     		ldr	r2, [r3]
 214 00a0 42F48022 		orr	r2, r2, #262144
 215 00a4 1A60     		str	r2, [r3]
 216 00a6 1A68     		ldr	r2, [r3]
 217 00a8 42F48032 		orr	r2, r2, #65536
 218 00ac 1A60     		str	r2, [r3]
 219 00ae 08E0     		b	.L13
 220              	.L15:
 221              		.loc 1 291 0 discriminator 6
 222 00b0 8A4B     		ldr	r3, .L93
 223 00b2 1A68     		ldr	r2, [r3]
 224 00b4 22F48032 		bic	r2, r2, #65536
 225 00b8 1A60     		str	r2, [r3]
 226 00ba 1A68     		ldr	r2, [r3]
 227 00bc 22F48022 		bic	r2, r2, #262144
 228 00c0 1A60     		str	r2, [r3]
 229              	.L13:
 292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
 295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 230              		.loc 1 295 0 is_stmt 1
 231 00c2 6368     		ldr	r3, [r4, #4]
 232 00c4 EBB1     		cbz	r3, .L16
 296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 233              		.loc 1 298 0
 234 00c6 FFF7FEFF 		bl	HAL_GetTick
 235              	.LVL10:
 236 00ca 0546     		mov	r5, r0
 237              	.LVL11:
 299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 238              		.loc 1 301 0
 239 00cc 05E0     		b	.L17
 240              	.LVL12:
 241              	.L20:
 302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 242              		.loc 1 303 0
 243 00ce FFF7FEFF 		bl	HAL_GetTick
 244              	.LVL13:
 245 00d2 401B     		subs	r0, r0, r5
 246 00d4 6428     		cmp	r0, #100
 247 00d6 00F26482 		bhi	.L77
 248              	.LVL14:
 249              	.L17:
 250              	.LBB141:
 251              	.LBB142:
 252              		.loc 2 531 0
ARM GAS  /tmp/ccrxodeU.s 			page 20


 253 00da 4FF40033 		mov	r3, #131072
 254              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 255 00de 93FAA3F3 		rbit r3, r3
 256              	@ 0 "" 2
 257              		.thumb
 258              	.LBE142:
 259              	.LBE141:
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 260              		.loc 1 301 0
 261 00e2 7E4B     		ldr	r3, .L93
 262 00e4 1A68     		ldr	r2, [r3]
 263              	.LVL15:
 264              	.LBB143:
 265              	.LBB144:
 266              		.loc 2 531 0
 267 00e6 4FF40033 		mov	r3, #131072
 268              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 269 00ea 93FAA3F3 		rbit r3, r3
 270              	@ 0 "" 2
 271              	.LVL16:
 272              		.thumb
 273              	.LBE144:
 274              	.LBE143:
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 275              		.loc 1 301 0
 276 00ee B3FA83F3 		clz	r3, r3
 277              	.LVL17:
 278 00f2 03F01F03 		and	r3, r3, #31
 279 00f6 22FA03F3 		lsr	r3, r2, r3
 280 00fa 13F0010F 		tst	r3, #1
 281 00fe E6D0     		beq	.L20
 282 0100 1CE0     		b	.L6
 283              	.LVL18:
 284              	.L16:
 304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 285              		.loc 1 312 0
 286 0102 FFF7FEFF 		bl	HAL_GetTick
 287              	.LVL19:
 288 0106 0546     		mov	r5, r0
 289              	.LVL20:
 313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 290              		.loc 1 315 0
 291 0108 05E0     		b	.L21
 292              	.LVL21:
 293              	.L24:
 316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
ARM GAS  /tmp/ccrxodeU.s 			page 21


 294              		.loc 1 317 0
 295 010a FFF7FEFF 		bl	HAL_GetTick
 296              	.LVL22:
 297 010e 401B     		subs	r0, r0, r5
 298 0110 6428     		cmp	r0, #100
 299 0112 00F24882 		bhi	.L78
 300              	.LVL23:
 301              	.L21:
 302              	.LBB145:
 303              	.LBB146:
 304              		.loc 2 531 0
 305 0116 4FF40033 		mov	r3, #131072
 306              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 307 011a 93FAA3F3 		rbit r3, r3
 308              	@ 0 "" 2
 309              		.thumb
 310              	.LBE146:
 311              	.LBE145:
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 312              		.loc 1 315 0
 313 011e 6F4B     		ldr	r3, .L93
 314 0120 1A68     		ldr	r2, [r3]
 315              	.LVL24:
 316              	.LBB147:
 317              	.LBB148:
 318              		.loc 2 531 0
 319 0122 4FF40033 		mov	r3, #131072
 320              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 321 0126 93FAA3F3 		rbit r3, r3
 322              	@ 0 "" 2
 323              	.LVL25:
 324              		.thumb
 325              	.LBE148:
 326              	.LBE147:
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 327              		.loc 1 315 0
 328 012a B3FA83F3 		clz	r3, r3
 329              	.LVL26:
 330 012e 03F01F03 		and	r3, r3, #31
 331 0132 22FA03F3 		lsr	r3, r2, r3
 332 0136 13F0010F 		tst	r3, #1
 333 013a E6D1     		bne	.L24
 334              	.LVL27:
 335              	.L6:
 318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 336              		.loc 1 326 0
 337 013c 2368     		ldr	r3, [r4]
 338 013e 13F0020F 		tst	r3, #2
 339 0142 00F09080 		beq	.L25
ARM GAS  /tmp/ccrxodeU.s 			page 22


 327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 340              		.loc 1 333 0
 341 0146 654B     		ldr	r3, .L93
 342 0148 5B68     		ldr	r3, [r3, #4]
 343 014a 13F00C0F 		tst	r3, #12
 344 014e 0AD0     		beq	.L26
 334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 345              		.loc 1 334 0
 346 0150 624B     		ldr	r3, .L93
 347 0152 5B68     		ldr	r3, [r3, #4]
 348 0154 03F00C03 		and	r3, r3, #12
 349 0158 082B     		cmp	r3, #8
 350 015a 27D1     		bne	.L27
 351              		.loc 1 334 0 is_stmt 0 discriminator 1
 352 015c 5F4B     		ldr	r3, .L93
 353 015e 5B68     		ldr	r3, [r3, #4]
 354 0160 13F4803F 		tst	r3, #65536
 355 0164 22D1     		bne	.L27
 356              	.L26:
 357              	.LVL28:
 358              	.LBB149:
 359              	.LBB150:
 360              		.loc 2 531 0 is_stmt 1
 361 0166 0223     		movs	r3, #2
 362              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 363 0168 93FAA3F3 		rbit r3, r3
 364              	@ 0 "" 2
 365              		.thumb
 366              	.LBE150:
 367              	.LBE149:
 335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 368              		.loc 1 337 0
 369 016c 5B4B     		ldr	r3, .L93
 370 016e 1A68     		ldr	r2, [r3]
 371              	.LVL29:
 372              	.LBB151:
 373              	.LBB152:
 374              		.loc 2 531 0
 375 0170 0223     		movs	r3, #2
 376              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 377 0172 93FAA3F3 		rbit r3, r3
 378              	@ 0 "" 2
 379              	.LVL30:
 380              		.thumb
 381              	.LBE152:
 382              	.LBE151:
 383              		.loc 1 337 0
 384 0176 B3FA83F3 		clz	r3, r3
 385              	.LVL31:
ARM GAS  /tmp/ccrxodeU.s 			page 23


 386 017a 03F01F03 		and	r3, r3, #31
 387 017e 22FA03F3 		lsr	r3, r2, r3
 388 0182 13F0010F 		tst	r3, #1
 389 0186 03D0     		beq	.L30
 390              		.loc 1 337 0 is_stmt 0 discriminator 9
 391 0188 2369     		ldr	r3, [r4, #16]
 392 018a 012B     		cmp	r3, #1
 393 018c 40F00D82 		bne	.L79
 394              	.L30:
 338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 395              		.loc 1 345 0 is_stmt 1
 396 0190 5248     		ldr	r0, .L93
 397 0192 0368     		ldr	r3, [r0]
 398 0194 23F0F801 		bic	r1, r3, #248
 399 0198 6369     		ldr	r3, [r4, #20]
 400              	.LVL32:
 401              	.LBB153:
 402              	.LBB154:
 403              		.loc 2 531 0
 404 019a F822     		movs	r2, #248
 405              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 406 019c 92FAA2F2 		rbit r2, r2
 407              	@ 0 "" 2
 408              	.LVL33:
 409              		.thumb
 410              	.LBE154:
 411              	.LBE153:
 412              		.loc 1 345 0
 413 01a0 B2FA82F2 		clz	r2, r2
 414              	.LVL34:
 415 01a4 9340     		lsls	r3, r3, r2
 416 01a6 0B43     		orrs	r3, r3, r1
 417 01a8 0360     		str	r3, [r0]
 337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 418              		.loc 1 337 0
 419 01aa 5CE0     		b	.L25
 420              	.LVL35:
 421              	.L27:
 346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 422              		.loc 1 351 0
 423 01ac 2369     		ldr	r3, [r4, #16]
 424 01ae 9BB3     		cbz	r3, .L31
 425              	.LVL36:
 426              	.LBB155:
 427              	.LBB156:
ARM GAS  /tmp/ccrxodeU.s 			page 24


 428              		.loc 2 531 0
 429 01b0 0122     		movs	r2, #1
 430              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 431 01b2 92FAA2F3 		rbit r3, r2
 432              	@ 0 "" 2
 433              	.LVL37:
 434              		.thumb
 435              	.LBE156:
 436              	.LBE155:
 352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 437              		.loc 1 354 0
 438 01b6 B3FA83F3 		clz	r3, r3
 439              	.LVL38:
 440 01ba 9B00     		lsls	r3, r3, #2
 441 01bc 03F18443 		add	r3, r3, #1107296256
 442 01c0 03F58403 		add	r3, r3, #4325376
 443 01c4 1A60     		str	r2, [r3]
 355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 444              		.loc 1 357 0
 445 01c6 FFF7FEFF 		bl	HAL_GetTick
 446              	.LVL39:
 447 01ca 0546     		mov	r5, r0
 448              	.LVL40:
 358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 449              		.loc 1 360 0
 450 01cc 05E0     		b	.L32
 451              	.LVL41:
 452              	.L35:
 361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 453              		.loc 1 362 0
 454 01ce FFF7FEFF 		bl	HAL_GetTick
 455              	.LVL42:
 456 01d2 401B     		subs	r0, r0, r5
 457 01d4 0228     		cmp	r0, #2
 458 01d6 00F2EA81 		bhi	.L80
 459              	.LVL43:
 460              	.L32:
 461              	.LBB157:
 462              	.LBB158:
 463              		.loc 2 531 0
 464 01da 0223     		movs	r3, #2
 465              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 466 01dc 93FAA3F3 		rbit r3, r3
 467              	@ 0 "" 2
 468              		.thumb
 469              	.LBE158:
 470              	.LBE157:
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 471              		.loc 1 360 0
 472 01e0 3E4B     		ldr	r3, .L93
ARM GAS  /tmp/ccrxodeU.s 			page 25


 473 01e2 1A68     		ldr	r2, [r3]
 474              	.LVL44:
 475              	.LBB159:
 476              	.LBB160:
 477              		.loc 2 531 0
 478 01e4 0223     		movs	r3, #2
 479              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 480 01e6 93FAA3F3 		rbit r3, r3
 481              	@ 0 "" 2
 482              	.LVL45:
 483              		.thumb
 484              	.LBE160:
 485              	.LBE159:
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 486              		.loc 1 360 0
 487 01ea B3FA83F3 		clz	r3, r3
 488              	.LVL46:
 489 01ee 03F01F03 		and	r3, r3, #31
 490 01f2 22FA03F3 		lsr	r3, r2, r3
 491 01f6 13F0010F 		tst	r3, #1
 492 01fa E8D0     		beq	.L35
 363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                 
 368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 493              		.loc 1 369 0
 494 01fc 3748     		ldr	r0, .L93
 495 01fe 0368     		ldr	r3, [r0]
 496 0200 23F0F801 		bic	r1, r3, #248
 497 0204 6369     		ldr	r3, [r4, #20]
 498              	.LVL47:
 499              	.LBB161:
 500              	.LBB162:
 501              		.loc 2 531 0
 502 0206 F822     		movs	r2, #248
 503              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 504 0208 92FAA2F2 		rbit r2, r2
 505              	@ 0 "" 2
 506              	.LVL48:
 507              		.thumb
 508              	.LBE162:
 509              	.LBE161:
 510              		.loc 1 369 0
 511 020c B2FA82F2 		clz	r2, r2
 512              	.LVL49:
 513 0210 9340     		lsls	r3, r3, r2
 514 0212 0B43     		orrs	r3, r3, r1
 515 0214 0360     		str	r3, [r0]
 516 0216 26E0     		b	.L25
 517              	.LVL50:
 518              	.L31:
 519              	.LBB163:
 520              	.LBB164:
 521              		.loc 2 531 0
ARM GAS  /tmp/ccrxodeU.s 			page 26


 522 0218 0123     		movs	r3, #1
 523              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 524 021a 93FAA3F3 		rbit r3, r3
 525              	@ 0 "" 2
 526              	.LVL51:
 527              		.thumb
 528              	.LBE164:
 529              	.LBE163:
 370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 530              		.loc 1 374 0
 531 021e B3FA83F3 		clz	r3, r3
 532              	.LVL52:
 533 0222 9B00     		lsls	r3, r3, #2
 534 0224 03F18443 		add	r3, r3, #1107296256
 535 0228 03F58403 		add	r3, r3, #4325376
 536 022c 0022     		movs	r2, #0
 537 022e 1A60     		str	r2, [r3]
 375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 538              		.loc 1 377 0
 539 0230 FFF7FEFF 		bl	HAL_GetTick
 540              	.LVL53:
 541 0234 0546     		mov	r5, r0
 542              	.LVL54:
 378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 543              		.loc 1 380 0
 544 0236 05E0     		b	.L36
 545              	.LVL55:
 546              	.L39:
 381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 547              		.loc 1 382 0
 548 0238 FFF7FEFF 		bl	HAL_GetTick
 549              	.LVL56:
 550 023c 401B     		subs	r0, r0, r5
 551 023e 0228     		cmp	r0, #2
 552 0240 00F2B781 		bhi	.L81
 553              	.LVL57:
 554              	.L36:
 555              	.LBB165:
 556              	.LBB166:
 557              		.loc 2 531 0
 558 0244 0223     		movs	r3, #2
 559              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 560 0246 93FAA3F3 		rbit r3, r3
 561              	@ 0 "" 2
 562              		.thumb
 563              	.LBE166:
 564              	.LBE165:
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccrxodeU.s 			page 27


 565              		.loc 1 380 0
 566 024a 244B     		ldr	r3, .L93
 567 024c 1A68     		ldr	r2, [r3]
 568              	.LVL58:
 569              	.LBB167:
 570              	.LBB168:
 571              		.loc 2 531 0
 572 024e 0223     		movs	r3, #2
 573              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 574 0250 93FAA3F3 		rbit r3, r3
 575              	@ 0 "" 2
 576              	.LVL59:
 577              		.thumb
 578              	.LBE168:
 579              	.LBE167:
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 580              		.loc 1 380 0
 581 0254 B3FA83F3 		clz	r3, r3
 582              	.LVL60:
 583 0258 03F01F03 		and	r3, r3, #31
 584 025c 22FA03F3 		lsr	r3, r2, r3
 585 0260 13F0010F 		tst	r3, #1
 586 0264 E8D1     		bne	.L39
 587              	.LVL61:
 588              	.L25:
 383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 589              		.loc 1 391 0
 590 0266 2368     		ldr	r3, [r4]
 591 0268 13F0080F 		tst	r3, #8
 592 026c 52D0     		beq	.L40
 392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 593              		.loc 1 397 0
 594 026e A369     		ldr	r3, [r4, #24]
 595 0270 3BB3     		cbz	r3, .L41
 596              	.LVL62:
 597              	.LBB169:
 598              	.LBB170:
 599              		.loc 2 531 0
 600 0272 0122     		movs	r2, #1
 601              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 602 0274 92FAA2F3 		rbit r3, r2
 603              	@ 0 "" 2
 604              	.LVL63:
 605              		.thumb
ARM GAS  /tmp/ccrxodeU.s 			page 28


 606              	.LBE170:
 607              	.LBE169:
 398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 608              		.loc 1 400 0
 609 0278 B3FA83F3 		clz	r3, r3
 610              	.LVL64:
 611 027c 1849     		ldr	r1, .L93+4
 612 027e 41F82320 		str	r2, [r1, r3, lsl #2]
 401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 613              		.loc 1 403 0
 614 0282 FFF7FEFF 		bl	HAL_GetTick
 615              	.LVL65:
 616 0286 0546     		mov	r5, r0
 617              	.LVL66:
 404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 618              		.loc 1 406 0
 619 0288 05E0     		b	.L42
 620              	.LVL67:
 621              	.L43:
 407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 622              		.loc 1 408 0
 623 028a FFF7FEFF 		bl	HAL_GetTick
 624              	.LVL68:
 625 028e 401B     		subs	r0, r0, r5
 626 0290 0228     		cmp	r0, #2
 627 0292 00F29081 		bhi	.L82
 628              	.LVL69:
 629              	.L42:
 630              	.LBB171:
 631              	.LBB172:
 632              		.loc 2 531 0
 633 0296 0223     		movs	r3, #2
 634              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 635 0298 93FAA3F2 		rbit r2, r3
 636              	@ 0 "" 2
 637              	.LVL70:
 638              		.thumb
 639              	.LBE172:
 640              	.LBE171:
 641              	.LBB173:
 642              	.LBB174:
 643              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 644 029c 93FAA3F2 		rbit r2, r3
 645              	@ 0 "" 2
 646              		.thumb
 647              	.LBE174:
 648              	.LBE173:
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 649              		.loc 1 406 0
 650 02a0 0E4A     		ldr	r2, .L93
ARM GAS  /tmp/ccrxodeU.s 			page 29


 651 02a2 526A     		ldr	r2, [r2, #36]
 652              	.LVL71:
 653              	.LBB175:
 654              	.LBB176:
 655              		.loc 2 531 0
 656              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 657 02a4 93FAA3F3 		rbit r3, r3
 658              	@ 0 "" 2
 659              	.LVL72:
 660              		.thumb
 661              	.LBE176:
 662              	.LBE175:
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 663              		.loc 1 406 0
 664 02a8 B3FA83F3 		clz	r3, r3
 665              	.LVL73:
 666 02ac 03F01F03 		and	r3, r3, #31
 667 02b0 22FA03F3 		lsr	r3, r2, r3
 668 02b4 13F0010F 		tst	r3, #1
 669 02b8 E7D0     		beq	.L43
 409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       HAL_Delay(1);
 670              		.loc 1 415 0
 671 02ba 0120     		movs	r0, #1
 672 02bc FFF7FEFF 		bl	HAL_Delay
 673              	.LVL74:
 674 02c0 28E0     		b	.L40
 675              	.LVL75:
 676              	.L41:
 677              	.LBB177:
 678              	.LBB178:
 679              		.loc 2 531 0
 680 02c2 0123     		movs	r3, #1
 681              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 682 02c4 93FAA3F3 		rbit r3, r3
 683              	@ 0 "" 2
 684              	.LVL76:
 685              		.thumb
 686              	.LBE178:
 687              	.LBE177:
 416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 688              		.loc 1 420 0
 689 02c8 B3FA83F3 		clz	r3, r3
 690              	.LVL77:
 691 02cc 0021     		movs	r1, #0
 692 02ce 044A     		ldr	r2, .L93+4
 693 02d0 42F82310 		str	r1, [r2, r3, lsl #2]
 421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
ARM GAS  /tmp/ccrxodeU.s 			page 30


 422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 694              		.loc 1 423 0
 695 02d4 FFF7FEFF 		bl	HAL_GetTick
 696              	.LVL78:
 697 02d8 0546     		mov	r5, r0
 698              	.LVL79:
 424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 699              		.loc 1 426 0
 700 02da 09E0     		b	.L44
 701              	.L94:
 702              		.align	2
 703              	.L93:
 704 02dc 00100240 		.word	1073876992
 705 02e0 80044242 		.word	1111622784
 706              	.LVL80:
 707              	.L45:
 427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 708              		.loc 1 428 0
 709 02e4 FFF7FEFF 		bl	HAL_GetTick
 710              	.LVL81:
 711 02e8 401B     		subs	r0, r0, r5
 712 02ea 0228     		cmp	r0, #2
 713 02ec 00F26581 		bhi	.L83
 714              	.LVL82:
 715              	.L44:
 716              	.LBB179:
 717              	.LBB180:
 718              		.loc 2 531 0
 719 02f0 0223     		movs	r3, #2
 720              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 721 02f2 93FAA3F2 		rbit r2, r3
 722              	@ 0 "" 2
 723              	.LVL83:
 724              		.thumb
 725              	.LBE180:
 726              	.LBE179:
 727              	.LBB181:
 728              	.LBB182:
 729              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 730 02f6 93FAA3F2 		rbit r2, r3
 731              	@ 0 "" 2
 732              		.thumb
 733              	.LBE182:
 734              	.LBE181:
 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 735              		.loc 1 426 0
 736 02fa B94A     		ldr	r2, .L95
 737 02fc 526A     		ldr	r2, [r2, #36]
 738              	.LVL84:
 739              	.LBB183:
 740              	.LBB184:
 741              		.loc 2 531 0
 742              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccrxodeU.s 			page 31


 743 02fe 93FAA3F3 		rbit r3, r3
 744              	@ 0 "" 2
 745              	.LVL85:
 746              		.thumb
 747              	.LBE184:
 748              	.LBE183:
 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 749              		.loc 1 426 0
 750 0302 B3FA83F3 		clz	r3, r3
 751              	.LVL86:
 752 0306 03F01F03 		and	r3, r3, #31
 753 030a 22FA03F3 		lsr	r3, r2, r3
 754 030e 13F0010F 		tst	r3, #1
 755 0312 E7D1     		bne	.L45
 756              	.LVL87:
 757              	.L40:
 429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 758              		.loc 1 436 0
 759 0314 2368     		ldr	r3, [r4]
 760 0316 13F0040F 		tst	r3, #4
 761 031a 00F09F80 		beq	.L46
 762              	.LBB185:
 437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Enable Power Clock*/
 442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 763              		.loc 1 442 0
 764 031e B04B     		ldr	r3, .L95
 765 0320 DA69     		ldr	r2, [r3, #28]
 766 0322 42F08052 		orr	r2, r2, #268435456
 767 0326 DA61     		str	r2, [r3, #28]
 768 0328 DB69     		ldr	r3, [r3, #28]
 769 032a 03F08053 		and	r3, r3, #268435456
 770 032e 0193     		str	r3, [sp, #4]
 771 0330 019B     		ldr	r3, [sp, #4]
 772              	.LBE185:
 443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 773              		.loc 1 445 0
 774 0332 AC4A     		ldr	r2, .L95+4
 775 0334 1368     		ldr	r3, [r2]
 776 0336 43F48073 		orr	r3, r3, #256
 777 033a 1360     		str	r3, [r2]
 446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 778              		.loc 1 448 0
ARM GAS  /tmp/ccrxodeU.s 			page 32


 779 033c FFF7FEFF 		bl	HAL_GetTick
 780              	.LVL88:
 781 0340 0546     		mov	r5, r0
 782              	.LVL89:
 449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 783              		.loc 1 450 0
 784 0342 05E0     		b	.L47
 785              	.LVL90:
 786              	.L48:
 451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 787              		.loc 1 452 0
 788 0344 FFF7FEFF 		bl	HAL_GetTick
 789              	.LVL91:
 790 0348 401B     		subs	r0, r0, r5
 791 034a 6428     		cmp	r0, #100
 792 034c 00F23781 		bhi	.L84
 793              	.L47:
 450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 794              		.loc 1 450 0
 795 0350 A44B     		ldr	r3, .L95+4
 796 0352 1B68     		ldr	r3, [r3]
 797 0354 13F4807F 		tst	r3, #256
 798 0358 F4D0     		beq	.L48
 453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 799              		.loc 1 459 0
 800 035a E368     		ldr	r3, [r4, #12]
 801 035c 012B     		cmp	r3, #1
 802 035e 05D1     		bne	.L49
 803              		.loc 1 459 0 is_stmt 0 discriminator 1
 804 0360 9F4A     		ldr	r2, .L95
 805 0362 136A     		ldr	r3, [r2, #32]
 806 0364 43F00103 		orr	r3, r3, #1
 807 0368 1362     		str	r3, [r2, #32]
 808 036a 22E0     		b	.L50
 809              	.L49:
 810              		.loc 1 459 0 discriminator 2
 811 036c 63B9     		cbnz	r3, .L51
 812              		.loc 1 459 0 discriminator 3
 813 036e 03F18043 		add	r3, r3, #1073741824
 814 0372 03F50433 		add	r3, r3, #135168
 815 0376 1A6A     		ldr	r2, [r3, #32]
 816 0378 22F00102 		bic	r2, r2, #1
 817 037c 1A62     		str	r2, [r3, #32]
 818 037e 1A6A     		ldr	r2, [r3, #32]
 819 0380 22F00402 		bic	r2, r2, #4
 820 0384 1A62     		str	r2, [r3, #32]
 821 0386 14E0     		b	.L50
 822              	.L51:
 823              		.loc 1 459 0 discriminator 4
ARM GAS  /tmp/ccrxodeU.s 			page 33


 824 0388 052B     		cmp	r3, #5
 825 038a 09D1     		bne	.L52
 826              		.loc 1 459 0 discriminator 5
 827 038c 944B     		ldr	r3, .L95
 828 038e 1A6A     		ldr	r2, [r3, #32]
 829 0390 42F00402 		orr	r2, r2, #4
 830 0394 1A62     		str	r2, [r3, #32]
 831 0396 1A6A     		ldr	r2, [r3, #32]
 832 0398 42F00102 		orr	r2, r2, #1
 833 039c 1A62     		str	r2, [r3, #32]
 834 039e 08E0     		b	.L50
 835              	.L52:
 836              		.loc 1 459 0 discriminator 6
 837 03a0 8F4B     		ldr	r3, .L95
 838 03a2 1A6A     		ldr	r2, [r3, #32]
 839 03a4 22F00102 		bic	r2, r2, #1
 840 03a8 1A62     		str	r2, [r3, #32]
 841 03aa 1A6A     		ldr	r2, [r3, #32]
 842 03ac 22F00402 		bic	r2, r2, #4
 843 03b0 1A62     		str	r2, [r3, #32]
 844              	.L50:
 460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 845              		.loc 1 461 0 is_stmt 1
 846 03b2 E368     		ldr	r3, [r4, #12]
 847 03b4 4BB3     		cbz	r3, .L53
 462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 848              		.loc 1 464 0
 849 03b6 FFF7FEFF 		bl	HAL_GetTick
 850              	.LVL92:
 851 03ba 0546     		mov	r5, r0
 852              	.LVL93:
 465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 853              		.loc 1 467 0
 854 03bc 07E0     		b	.L54
 855              	.LVL94:
 856              	.L57:
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 857              		.loc 1 469 0
 858 03be FFF7FEFF 		bl	HAL_GetTick
 859              	.LVL95:
 860 03c2 401B     		subs	r0, r0, r5
 861 03c4 41F28833 		movw	r3, #5000
 862 03c8 9842     		cmp	r0, r3
 863 03ca 00F2FA80 		bhi	.L85
 864              	.LVL96:
 865              	.L54:
 866              	.LBB186:
 867              	.LBB187:
 868              		.loc 2 531 0
 869 03ce 0223     		movs	r3, #2
 870              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccrxodeU.s 			page 34


 871 03d0 93FAA3F2 		rbit r2, r3
 872              	@ 0 "" 2
 873              	.LVL97:
 874              		.thumb
 875              	.LBE187:
 876              	.LBE186:
 877              	.LBB188:
 878              	.LBB189:
 879              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 880 03d4 93FAA3F3 		rbit r3, r3
 881              	@ 0 "" 2
 882              	.LVL98:
 883              		.thumb
 884              	.LBE189:
 885              	.LBE188:
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 886              		.loc 1 467 0
 887 03d8 B3FA83F3 		clz	r3, r3
 888              	.LVL99:
 889 03dc 43F04003 		orr	r3, r3, #64
 890 03e0 5B09     		lsrs	r3, r3, #5
 891 03e2 022B     		cmp	r3, #2
 892 03e4 02D1     		bne	.L55
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 893              		.loc 1 467 0 is_stmt 0 discriminator 4
 894 03e6 7E4B     		ldr	r3, .L95
 895 03e8 1A6A     		ldr	r2, [r3, #32]
 896 03ea 01E0     		b	.L56
 897              	.L55:
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 898              		.loc 1 467 0 discriminator 5
 899 03ec 7C4B     		ldr	r3, .L95
 900 03ee 5A6A     		ldr	r2, [r3, #36]
 901              	.L56:
 902              	.LVL100:
 903              	.LBB190:
 904              	.LBB191:
 905              		.loc 2 531 0 is_stmt 1 discriminator 7
 906 03f0 0223     		movs	r3, #2
 907              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 908 03f2 93FAA3F3 		rbit r3, r3
 909              	@ 0 "" 2
 910              	.LVL101:
 911              		.thumb
 912              	.LBE191:
 913              	.LBE190:
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 914              		.loc 1 467 0 discriminator 7
 915 03f6 B3FA83F3 		clz	r3, r3
 916              	.LVL102:
 917 03fa 03F01F03 		and	r3, r3, #31
 918 03fe 22FA03F3 		lsr	r3, r2, r3
 919 0402 13F0010F 		tst	r3, #1
 920 0406 DAD0     		beq	.L57
 921 0408 28E0     		b	.L46
 922              	.LVL103:
 923              	.L53:
ARM GAS  /tmp/ccrxodeU.s 			page 35


 470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 924              		.loc 1 478 0
 925 040a FFF7FEFF 		bl	HAL_GetTick
 926              	.LVL104:
 927 040e 0546     		mov	r5, r0
 928              	.LVL105:
 479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 929              		.loc 1 481 0
 930 0410 07E0     		b	.L58
 931              	.LVL106:
 932              	.L61:
 482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 933              		.loc 1 483 0
 934 0412 FFF7FEFF 		bl	HAL_GetTick
 935              	.LVL107:
 936 0416 401B     		subs	r0, r0, r5
 937 0418 41F28833 		movw	r3, #5000
 938 041c 9842     		cmp	r0, r3
 939 041e 00F2D280 		bhi	.L86
 940              	.LVL108:
 941              	.L58:
 942              	.LBB192:
 943              	.LBB193:
 944              		.loc 2 531 0
 945 0422 0223     		movs	r3, #2
 946              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 947 0424 93FAA3F2 		rbit r2, r3
 948              	@ 0 "" 2
 949              	.LVL109:
 950              		.thumb
 951              	.LBE193:
 952              	.LBE192:
 953              	.LBB194:
 954              	.LBB195:
 955              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 956 0428 93FAA3F3 		rbit r3, r3
 957              	@ 0 "" 2
 958              	.LVL110:
 959              		.thumb
 960              	.LBE195:
 961              	.LBE194:
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 962              		.loc 1 481 0
 963 042c B3FA83F3 		clz	r3, r3
 964              	.LVL111:
 965 0430 43F04003 		orr	r3, r3, #64
ARM GAS  /tmp/ccrxodeU.s 			page 36


 966 0434 5B09     		lsrs	r3, r3, #5
 967 0436 022B     		cmp	r3, #2
 968 0438 02D1     		bne	.L59
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 969              		.loc 1 481 0 is_stmt 0 discriminator 4
 970 043a 694B     		ldr	r3, .L95
 971 043c 1A6A     		ldr	r2, [r3, #32]
 972 043e 01E0     		b	.L60
 973              	.L59:
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 974              		.loc 1 481 0 discriminator 5
 975 0440 674B     		ldr	r3, .L95
 976 0442 5A6A     		ldr	r2, [r3, #36]
 977              	.L60:
 978              	.LVL112:
 979              	.LBB196:
 980              	.LBB197:
 981              		.loc 2 531 0 is_stmt 1 discriminator 7
 982 0444 0223     		movs	r3, #2
 983              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 984 0446 93FAA3F3 		rbit r3, r3
 985              	@ 0 "" 2
 986              	.LVL113:
 987              		.thumb
 988              	.LBE197:
 989              	.LBE196:
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 990              		.loc 1 481 0 discriminator 7
 991 044a B3FA83F3 		clz	r3, r3
 992              	.LVL114:
 993 044e 03F01F03 		and	r3, r3, #31
 994 0452 22FA03F3 		lsr	r3, r2, r3
 995 0456 13F0010F 		tst	r3, #1
 996 045a DAD1     		bne	.L61
 997              	.LVL115:
 998              	.L46:
 484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccrxodeU.s 			page 37


 505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp/ccrxodeU.s 			page 38


 562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 999              		.loc 1 584 0
 1000 045c E369     		ldr	r3, [r4, #28]
 1001 045e 002B     		cmp	r3, #0
 1002 0460 00F0B380 		beq	.L87
 585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1003              		.loc 1 587 0
 1004 0464 5E4A     		ldr	r2, .L95
 1005 0466 5268     		ldr	r2, [r2, #4]
 1006 0468 02F00C02 		and	r2, r2, #12
 1007 046c 082A     		cmp	r2, #8
 1008 046e 00F0AE80 		beq	.L88
 588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1009              		.loc 1 589 0
 1010 0472 022B     		cmp	r3, #2
 1011 0474 68D1     		bne	.L62
 1012              	.LVL116:
 1013              	.LBB198:
 1014              	.LBB199:
 1015              		.loc 2 531 0
 1016 0476 4FF08073 		mov	r3, #16777216
 1017              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1018 047a 93FAA3F3 		rbit r3, r3
 1019              	@ 0 "" 2
 1020              	.LVL117:
 1021              		.thumb
 1022              	.LBE199:
 1023              	.LBE198:
 590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
ARM GAS  /tmp/ccrxodeU.s 			page 39


 594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1024              		.loc 1 596 0
 1025 047e B3FA83F3 		clz	r3, r3
 1026              	.LVL118:
 1027 0482 9B00     		lsls	r3, r3, #2
 1028 0484 03F18443 		add	r3, r3, #1107296256
 1029 0488 03F58403 		add	r3, r3, #4325376
 1030 048c 0022     		movs	r2, #0
 1031 048e 1A60     		str	r2, [r3]
 597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1032              		.loc 1 599 0
 1033 0490 FFF7FEFF 		bl	HAL_GetTick
 1034              	.LVL119:
 1035 0494 0546     		mov	r5, r0
 1036              	.LVL120:
 600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1037              		.loc 1 602 0
 1038 0496 05E0     		b	.L63
 1039              	.LVL121:
 1040              	.L66:
 603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1041              		.loc 1 604 0
 1042 0498 FFF7FEFF 		bl	HAL_GetTick
 1043              	.LVL122:
 1044 049c 401B     		subs	r0, r0, r5
 1045 049e 0228     		cmp	r0, #2
 1046 04a0 00F29780 		bhi	.L89
 1047              	.LVL123:
 1048              	.L63:
 1049              	.LBB200:
 1050              	.LBB201:
 1051              		.loc 2 531 0
 1052 04a4 4FF00073 		mov	r3, #33554432
 1053              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1054 04a8 93FAA3F3 		rbit r3, r3
 1055              	@ 0 "" 2
 1056              		.thumb
 1057              	.LBE201:
 1058              	.LBE200:
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1059              		.loc 1 602 0
 1060 04ac 4C4B     		ldr	r3, .L95
 1061 04ae 1A68     		ldr	r2, [r3]
 1062              	.LVL124:
 1063              	.LBB202:
 1064              	.LBB203:
 1065              		.loc 2 531 0
 1066 04b0 4FF00073 		mov	r3, #33554432
 1067              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1068 04b4 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccrxodeU.s 			page 40


 1069              	@ 0 "" 2
 1070              	.LVL125:
 1071              		.thumb
 1072              	.LBE203:
 1073              	.LBE202:
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1074              		.loc 1 602 0
 1075 04b8 B3FA83F3 		clz	r3, r3
 1076              	.LVL126:
 1077 04bc 03F01F03 		and	r3, r3, #31
 1078 04c0 22FA03F3 		lsr	r3, r2, r3
 1079 04c4 13F0010F 		tst	r3, #1
 1080 04c8 E6D1     		bne	.L66
 605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 1081              		.loc 1 612 0
 1082 04ca 236A     		ldr	r3, [r4, #32]
 1083 04cc B3F5803F 		cmp	r3, #65536
 1084 04d0 06D1     		bne	.L67
 613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           
 619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 1085              		.loc 1 624 0
 1086 04d2 4349     		ldr	r1, .L95
 1087 04d4 4B68     		ldr	r3, [r1, #4]
 1088 04d6 23F40032 		bic	r2, r3, #131072
 1089 04da A368     		ldr	r3, [r4, #8]
 1090 04dc 1343     		orrs	r3, r3, r2
 1091 04de 4B60     		str	r3, [r1, #4]
 1092              	.L67:
 625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1093              		.loc 1 628 0
 1094 04e0 3F48     		ldr	r0, .L95
 1095 04e2 4368     		ldr	r3, [r0, #4]
 1096 04e4 23F47411 		bic	r1, r3, #3997696
 1097 04e8 236A     		ldr	r3, [r4, #32]
 1098 04ea 626A     		ldr	r2, [r4, #36]
 1099 04ec 1343     		orrs	r3, r3, r2
 1100 04ee 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccrxodeU.s 			page 41


 1101 04f0 4360     		str	r3, [r0, #4]
 1102              	.LVL127:
 1103              	.LBB204:
 1104              	.LBB205:
 1105              		.loc 2 531 0
 1106 04f2 4FF08073 		mov	r3, #16777216
 1107              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1108 04f6 93FAA3F3 		rbit r3, r3
 1109              	@ 0 "" 2
 1110              	.LVL128:
 1111              		.thumb
 1112              	.LBE205:
 1113              	.LBE204:
 629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1114              		.loc 1 631 0
 1115 04fa B3FA83F3 		clz	r3, r3
 1116              	.LVL129:
 1117 04fe 9B00     		lsls	r3, r3, #2
 1118 0500 03F18443 		add	r3, r3, #1107296256
 1119 0504 03F58403 		add	r3, r3, #4325376
 1120 0508 0122     		movs	r2, #1
 1121 050a 1A60     		str	r2, [r3]
 632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1122              		.loc 1 634 0
 1123 050c FFF7FEFF 		bl	HAL_GetTick
 1124              	.LVL130:
 1125 0510 0446     		mov	r4, r0
 1126              	.LVL131:
 635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1127              		.loc 1 637 0
 1128 0512 04E0     		b	.L68
 1129              	.LVL132:
 1130              	.L71:
 638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1131              		.loc 1 639 0
 1132 0514 FFF7FEFF 		bl	HAL_GetTick
 1133              	.LVL133:
 1134 0518 001B     		subs	r0, r0, r4
 1135 051a 0228     		cmp	r0, #2
 1136 051c 5BD8     		bhi	.L90
 1137              	.LVL134:
 1138              	.L68:
 1139              	.LBB206:
 1140              	.LBB207:
 1141              		.loc 2 531 0
 1142 051e 4FF00073 		mov	r3, #33554432
 1143              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1144 0522 93FAA3F3 		rbit r3, r3
 1145              	@ 0 "" 2
 1146              		.thumb
ARM GAS  /tmp/ccrxodeU.s 			page 42


 1147              	.LBE207:
 1148              	.LBE206:
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1149              		.loc 1 637 0
 1150 0526 2E4B     		ldr	r3, .L95
 1151 0528 1A68     		ldr	r2, [r3]
 1152              	.LVL135:
 1153              	.LBB208:
 1154              	.LBB209:
 1155              		.loc 2 531 0
 1156 052a 4FF00073 		mov	r3, #33554432
 1157              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1158 052e 93FAA3F3 		rbit r3, r3
 1159              	@ 0 "" 2
 1160              	.LVL136:
 1161              		.thumb
 1162              	.LBE209:
 1163              	.LBE208:
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1164              		.loc 1 637 0
 1165 0532 B3FA83F3 		clz	r3, r3
 1166              	.LVL137:
 1167 0536 03F01F03 		and	r3, r3, #31
 1168 053a 22FA03F3 		lsr	r3, r2, r3
 1169 053e 13F0010F 		tst	r3, #1
 1170 0542 E7D0     		beq	.L71
 640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1171              		.loc 1 669 0
ARM GAS  /tmp/ccrxodeU.s 			page 43


 1172 0544 0020     		movs	r0, #0
 1173 0546 49E0     		b	.L11
 1174              	.LVL138:
 1175              	.L62:
 1176              	.LBB210:
 1177              	.LBB211:
 1178              		.loc 2 531 0
 1179 0548 4FF08073 		mov	r3, #16777216
 1180              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1181 054c 93FAA3F3 		rbit r3, r3
 1182              	@ 0 "" 2
 1183              	.LVL139:
 1184              		.thumb
 1185              	.LBE211:
 1186              	.LBE210:
 648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 1187              		.loc 1 648 0
 1188 0550 B3FA83F3 		clz	r3, r3
 1189              	.LVL140:
 1190 0554 9B00     		lsls	r3, r3, #2
 1191 0556 03F18443 		add	r3, r3, #1107296256
 1192 055a 03F58403 		add	r3, r3, #4325376
 1193 055e 0022     		movs	r2, #0
 1194 0560 1A60     		str	r2, [r3]
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 1195              		.loc 1 651 0
 1196 0562 FFF7FEFF 		bl	HAL_GetTick
 1197              	.LVL141:
 1198 0566 0446     		mov	r4, r0
 1199              	.LVL142:
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1200              		.loc 1 654 0
 1201 0568 04E0     		b	.L72
 1202              	.LVL143:
 1203              	.L75:
 656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 1204              		.loc 1 656 0
 1205 056a FFF7FEFF 		bl	HAL_GetTick
 1206              	.LVL144:
 1207 056e 001B     		subs	r0, r0, r4
 1208 0570 0228     		cmp	r0, #2
 1209 0572 32D8     		bhi	.L91
 1210              	.LVL145:
 1211              	.L72:
 1212              	.LBB212:
 1213              	.LBB213:
 1214              		.loc 2 531 0
 1215 0574 4FF00073 		mov	r3, #33554432
 1216              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1217 0578 93FAA3F3 		rbit r3, r3
 1218              	@ 0 "" 2
 1219              		.thumb
 1220              	.LBE213:
 1221              	.LBE212:
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1222              		.loc 1 654 0
 1223 057c 184B     		ldr	r3, .L95
ARM GAS  /tmp/ccrxodeU.s 			page 44


 1224 057e 1A68     		ldr	r2, [r3]
 1225              	.LVL146:
 1226              	.LBB214:
 1227              	.LBB215:
 1228              		.loc 2 531 0
 1229 0580 4FF00073 		mov	r3, #33554432
 1230              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1231 0584 93FAA3F3 		rbit r3, r3
 1232              	@ 0 "" 2
 1233              	.LVL147:
 1234              		.thumb
 1235              	.LBE215:
 1236              	.LBE214:
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1237              		.loc 1 654 0
 1238 0588 B3FA83F3 		clz	r3, r3
 1239              	.LVL148:
 1240 058c 03F01F03 		and	r3, r3, #31
 1241 0590 22FA03F3 		lsr	r3, r2, r3
 1242 0594 13F0010F 		tst	r3, #1
 1243 0598 E7D1     		bne	.L75
 1244              		.loc 1 669 0
 1245 059a 0020     		movs	r0, #0
 1246 059c 1EE0     		b	.L11
 1247              	.LVL149:
 1248              	.L76:
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1249              		.loc 1 285 0
 1250 059e 0120     		movs	r0, #1
 1251              	.LVL150:
 1252 05a0 1CE0     		b	.L11
 1253              	.LVL151:
 1254              	.L77:
 305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1255              		.loc 1 305 0
 1256 05a2 0320     		movs	r0, #3
 1257 05a4 1AE0     		b	.L11
 1258              	.LVL152:
 1259              	.L78:
 319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1260              		.loc 1 319 0
 1261 05a6 0320     		movs	r0, #3
 1262 05a8 18E0     		b	.L11
 1263              	.LVL153:
 1264              	.L79:
 339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1265              		.loc 1 339 0
 1266 05aa 0120     		movs	r0, #1
 1267 05ac 16E0     		b	.L11
 1268              	.LVL154:
 1269              	.L80:
 364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1270              		.loc 1 364 0
 1271 05ae 0320     		movs	r0, #3
 1272 05b0 14E0     		b	.L11
 1273              	.LVL155:
 1274              	.L81:
ARM GAS  /tmp/ccrxodeU.s 			page 45


 384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1275              		.loc 1 384 0
 1276 05b2 0320     		movs	r0, #3
 1277 05b4 12E0     		b	.L11
 1278              	.LVL156:
 1279              	.L82:
 410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1280              		.loc 1 410 0
 1281 05b6 0320     		movs	r0, #3
 1282 05b8 10E0     		b	.L11
 1283              	.LVL157:
 1284              	.L83:
 430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1285              		.loc 1 430 0
 1286 05ba 0320     		movs	r0, #3
 1287 05bc 0EE0     		b	.L11
 1288              	.LVL158:
 1289              	.L84:
 454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1290              		.loc 1 454 0
 1291 05be 0320     		movs	r0, #3
 1292 05c0 0CE0     		b	.L11
 1293              	.LVL159:
 1294              	.L85:
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1295              		.loc 1 471 0
 1296 05c2 0320     		movs	r0, #3
 1297 05c4 0AE0     		b	.L11
 1298              	.LVL160:
 1299              	.L86:
 485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1300              		.loc 1 485 0
 1301 05c6 0320     		movs	r0, #3
 1302 05c8 08E0     		b	.L11
 1303              	.LVL161:
 1304              	.L87:
 1305              		.loc 1 669 0
 1306 05ca 0020     		movs	r0, #0
 1307 05cc 06E0     		b	.L11
 1308              	.L88:
 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 1309              		.loc 1 665 0
 1310 05ce 0120     		movs	r0, #1
 1311 05d0 04E0     		b	.L11
 1312              	.LVL162:
 1313              	.L89:
 606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1314              		.loc 1 606 0
 1315 05d2 0320     		movs	r0, #3
 1316 05d4 02E0     		b	.L11
 1317              	.LVL163:
 1318              	.L90:
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1319              		.loc 1 641 0
 1320 05d6 0320     		movs	r0, #3
 1321 05d8 00E0     		b	.L11
 1322              	.LVL164:
ARM GAS  /tmp/ccrxodeU.s 			page 46


 1323              	.L91:
 658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1324              		.loc 1 658 0
 1325 05da 0320     		movs	r0, #3
 1326              	.LVL165:
 1327              	.L11:
 670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1328              		.loc 1 670 0
 1329 05dc 03B0     		add	sp, sp, #12
 1330              	.LCFI4:
 1331              		.cfi_def_cfa_offset 12
 1332              		@ sp needed
 1333 05de 30BD     		pop	{r4, r5, pc}
 1334              	.L96:
 1335              		.align	2
 1336              	.L95:
 1337 05e0 00100240 		.word	1073876992
 1338 05e4 00700040 		.word	1073770496
 1339              		.cfi_endproc
 1340              	.LFE64:
 1342              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1343              		.align	2
 1344              		.global	HAL_RCC_MCOConfig
 1345              		.thumb
 1346              		.thumb_func
 1348              	HAL_RCC_MCOConfig:
 1349              	.LFB66:
 671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0;
 698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
ARM GAS  /tmp/ccrxodeU.s 			page 47


 701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
ARM GAS  /tmp/ccrxodeU.s 			page 48


 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }      
 798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp/ccrxodeU.s 			page 49


 815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim   
 846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================  
 849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
ARM GAS  /tmp/ccrxodeU.s 			page 50


 872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1350              		.loc 1 889 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 24
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354              	.LVL166:
 1355 0000 30B5     		push	{r4, r5, lr}
 1356              	.LCFI5:
 1357              		.cfi_def_cfa_offset 12
 1358              		.cfi_offset 4, -12
 1359              		.cfi_offset 5, -8
 1360              		.cfi_offset 14, -4
 1361 0002 87B0     		sub	sp, sp, #28
 1362              	.LCFI6:
 1363              		.cfi_def_cfa_offset 40
 1364 0004 0D46     		mov	r5, r1
 890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
 1365              		.loc 1 890 0
 1366 0006 0023     		movs	r3, #0
 1367 0008 0493     		str	r3, [sp, #16]
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1368              		.loc 1 898 0
 1369 000a 0223     		movs	r3, #2
 1370 000c 0393     		str	r3, [sp, #12]
 899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1371              		.loc 1 899 0
 1372 000e 0323     		movs	r3, #3
 1373 0010 0593     		str	r3, [sp, #20]
 900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1374              		.loc 1 901 0
 1375 0012 4FF48073 		mov	r3, #256
 1376 0016 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccrxodeU.s 			page 51


 1377              	.LBB216:
 902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1378              		.loc 1 904 0
 1379 0018 0A4C     		ldr	r4, .L99
 1380 001a A369     		ldr	r3, [r4, #24]
 1381 001c 43F00403 		orr	r3, r3, #4
 1382 0020 A361     		str	r3, [r4, #24]
 1383 0022 A369     		ldr	r3, [r4, #24]
 1384 0024 03F00403 		and	r3, r3, #4
 1385 0028 0193     		str	r3, [sp, #4]
 1386 002a 019B     		ldr	r3, [sp, #4]
 1387              	.LBE216:
 905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1388              		.loc 1 906 0
 1389 002c 0648     		ldr	r0, .L99+4
 1390              	.LVL167:
 1391 002e 02A9     		add	r1, sp, #8
 1392              	.LVL168:
 1393 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1394              	.LVL169:
 907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
 909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1395              		.loc 1 909 0
 1396 0034 6368     		ldr	r3, [r4, #4]
 1397 0036 23F0E063 		bic	r3, r3, #117440512
 1398 003a 1D43     		orrs	r5, r5, r3
 1399              	.LVL170:
 1400 003c 6560     		str	r5, [r4, #4]
 910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1401              		.loc 1 910 0
 1402 003e 07B0     		add	sp, sp, #28
 1403              	.LCFI7:
 1404              		.cfi_def_cfa_offset 12
 1405              		@ sp needed
 1406 0040 30BD     		pop	{r4, r5, pc}
 1407              	.L100:
 1408 0042 00BF     		.align	2
 1409              	.L99:
 1410 0044 00100240 		.word	1073876992
 1411 0048 00080140 		.word	1073809408
 1412              		.cfi_endproc
 1413              	.LFE66:
 1415              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1416              		.align	2
 1417              		.global	HAL_RCC_EnableCSS
 1418              		.thumb
 1419              		.thumb_func
 1421              	HAL_RCC_EnableCSS:
 1422              	.LFB67:
 911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
ARM GAS  /tmp/ccrxodeU.s 			page 52


 915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1423              		.loc 1 922 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428              	.LVL171:
 1429              	.LBB217:
 1430              	.LBB218:
 1431              		.loc 2 531 0
 1432 0000 4FF40023 		mov	r3, #524288
 1433              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1434 0004 93FAA3F3 		rbit r3, r3
 1435              	@ 0 "" 2
 1436              	.LVL172:
 1437              		.thumb
 1438              	.LBE218:
 1439              	.LBE217:
 923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1440              		.loc 1 923 0
 1441 0008 B3FA83F3 		clz	r3, r3
 1442              	.LVL173:
 1443 000c 9B00     		lsls	r3, r3, #2
 1444 000e 03F18443 		add	r3, r3, #1107296256
 1445 0012 03F58403 		add	r3, r3, #4325376
 1446 0016 0122     		movs	r2, #1
 1447 0018 1A60     		str	r2, [r3]
 1448 001a 7047     		bx	lr
 1449              		.cfi_endproc
 1450              	.LFE67:
 1452              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1453              		.align	2
 1454              		.global	HAL_RCC_DisableCSS
 1455              		.thumb
 1456              		.thumb_func
 1458              	HAL_RCC_DisableCSS:
 1459              	.LFB68:
 924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1460              		.loc 1 931 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		@ link register save eliminated.
ARM GAS  /tmp/ccrxodeU.s 			page 53


 1465              	.LVL174:
 1466              	.LBB219:
 1467              	.LBB220:
 1468              		.loc 2 531 0
 1469 0000 4FF40023 		mov	r3, #524288
 1470              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1471 0004 93FAA3F3 		rbit r3, r3
 1472              	@ 0 "" 2
 1473              	.LVL175:
 1474              		.thumb
 1475              	.LBE220:
 1476              	.LBE219:
 932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1477              		.loc 1 932 0
 1478 0008 B3FA83F3 		clz	r3, r3
 1479              	.LVL176:
 1480 000c 9B00     		lsls	r3, r3, #2
 1481 000e 03F18443 		add	r3, r3, #1107296256
 1482 0012 03F58403 		add	r3, r3, #4325376
 1483 0016 0022     		movs	r2, #0
 1484 0018 1A60     		str	r2, [r3]
 1485 001a 7047     		bx	lr
 1486              		.cfi_endproc
 1487              	.LFE68:
 1489              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1490              		.align	2
 1491              		.global	HAL_RCC_GetSysClockFreq
 1492              		.thumb
 1493              		.thumb_func
 1495              	HAL_RCC_GetSysClockFreq:
 1496              	.LFB69:
 933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
 940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
 948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
 952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                  
 953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
 955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
ARM GAS  /tmp/ccrxodeU.s 			page 54


 959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         
 962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
 963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1497              		.loc 1 965 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 24
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
 1502 0000 30B4     		push	{r4, r5}
 1503              	.LCFI8:
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 4, -8
 1506              		.cfi_offset 5, -4
 1507 0002 86B0     		sub	sp, sp, #24
 1508              	.LCFI9:
 1509              		.cfi_def_cfa_offset 32
 966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(RCC_CFGR2_PREDIV1SRC)
 967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[12] = {0, 0, 4,  5,  6,  7,  8,  9, 0, 0, 0, 13};
 968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 1
 1510              		.loc 1 970 0
 1511 0004 1E4D     		ldr	r5, .L111
 1512 0006 02AC     		add	r4, sp, #8
 1513 0008 2868     		ldr	r0, [r5]	@ unaligned
 1514 000a 6968     		ldr	r1, [r5, #4]	@ unaligned
 1515 000c AA68     		ldr	r2, [r5, #8]	@ unaligned
 1516 000e EB68     		ldr	r3, [r5, #12]	@ unaligned
 1517 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = { 1, 2};
 1518              		.loc 1 974 0
 1519 0012 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 1520 0014 ADF80430 		strh	r3, [sp, #4]	@ unaligned
 1521              	.LVL177:
 975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0, prediv = 0, pllclk = 0, pllmul = 0;
 979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0, pll2mul = 0;
 982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1522              		.loc 1 984 0
 1523 0018 1A4B     		ldr	r3, .L111+4
 1524 001a 5A68     		ldr	r2, [r3, #4]
 1525              	.LVL178:
 985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
ARM GAS  /tmp/ccrxodeU.s 			page 55


 987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1526              		.loc 1 987 0
 1527 001c 02F00C03 		and	r3, r2, #12
 1528 0020 082B     		cmp	r3, #8
 1529 0022 28D1     		bne	.L109
 988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> POSITION_VAL(RCC_CFGR_PL
 1530              		.loc 1 996 0
 1531 0024 02F47013 		and	r3, r2, #3932160
 1532              	.LVL179:
 1533              	.LBB221:
 1534              	.LBB222:
 1535              		.loc 2 531 0
 1536 0028 4FF47011 		mov	r1, #3932160
 1537              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1538 002c 91FAA1F1 		rbit r1, r1
 1539              	@ 0 "" 2
 1540              	.LVL180:
 1541              		.thumb
 1542              	.LBE222:
 1543              	.LBE221:
 1544              		.loc 1 996 0
 1545 0030 B1FA81F1 		clz	r1, r1
 1546              	.LVL181:
 1547 0034 CB40     		lsrs	r3, r3, r1
 1548 0036 06A9     		add	r1, sp, #24
 1549 0038 0B44     		add	r3, r3, r1
 1550 003a 13F8103C 		ldrb	r3, [r3, #-16]	@ zero_extendqisi2
 1551              	.LVL182:
 997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 1552              		.loc 1 997 0
 1553 003e 12F4803F 		tst	r2, #65536
 1554 0042 14D0     		beq	.L106
 998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> POSITION_VAL(RCC_
1001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> POSITION_VAL(RCC_C
 1555              		.loc 1 1002 0
 1556 0044 0F4A     		ldr	r2, .L111+4
 1557              	.LVL183:
 1558 0046 5268     		ldr	r2, [r2, #4]
 1559 0048 02F40032 		and	r2, r2, #131072
 1560              	.LVL184:
 1561              	.LBB223:
 1562              	.LBB224:
 1563              		.loc 2 531 0
 1564 004c 4FF40031 		mov	r1, #131072
 1565              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1566 0050 91FAA1F1 		rbit r1, r1
ARM GAS  /tmp/ccrxodeU.s 			page 56


 1567              	@ 0 "" 2
 1568              	.LVL185:
 1569              		.thumb
 1570              	.LBE224:
 1571              	.LBE223:
 1572              		.loc 1 1002 0
 1573 0054 B1FA81F1 		clz	r1, r1
 1574              	.LVL186:
 1575 0058 CA40     		lsrs	r2, r2, r1
 1576 005a 06A9     		add	r1, sp, #24
 1577 005c 0A44     		add	r2, r2, r1
 1578 005e 12F8140C 		ldrb	r0, [r2, #-20]	@ zero_extendqisi2
 1579              	.LVL187:
1003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> POSITION_VAL(RCC_CFGR2_PREDIV2)) + 1;
1011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> POSITION_VAL(RCC_CFGR2_PLL2MUL)) + 2;
1012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((((HSE_VALUE / prediv2) * pll2mul) / prediv) * pllmul);
1013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
1020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> POSITION_VAL(RCC_CFGR_P
1023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
 1580              		.loc 1 1028 0
 1581 0062 094A     		ldr	r2, .L111+8
 1582 0064 B2FBF0F0 		udiv	r0, r2, r0
 1583              	.LVL188:
 1584 0068 03FB00F0 		mul	r0, r3, r0
 1585              	.LVL189:
 1586 006c 04E0     		b	.L104
 1587              	.LVL190:
 1588              	.L106:
1029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 1589              		.loc 1 1034 0
 1590 006e 0748     		ldr	r0, .L111+12
 1591 0070 00FB03F0 		mul	r0, r0, r3
ARM GAS  /tmp/ccrxodeU.s 			page 57


 1592              	.LVL191:
1035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
1037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1593              		.loc 1 1037 0
 1594 0074 00E0     		b	.L104
 1595              	.LVL192:
 1596              	.L109:
 991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1597              		.loc 1 991 0
 1598 0076 0448     		ldr	r0, .L111+8
 1599              	.LVL193:
 1600              	.L104:
1038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
1047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1601              		.loc 1 1047 0
 1602 0078 06B0     		add	sp, sp, #24
 1603              	.LCFI10:
 1604              		.cfi_def_cfa_offset 8
 1605              		@ sp needed
 1606 007a 30BC     		pop	{r4, r5}
 1607              	.LCFI11:
 1608              		.cfi_restore 5
 1609              		.cfi_restore 4
 1610              		.cfi_def_cfa_offset 0
 1611 007c 7047     		bx	lr
 1612              	.L112:
 1613 007e 00BF     		.align	2
 1614              	.L111:
 1615 0080 00000000 		.word	.LANCHOR0
 1616 0084 00100240 		.word	1073876992
 1617 0088 00127A00 		.word	8000000
 1618 008c 00093D00 		.word	4000000
 1619              		.cfi_endproc
 1620              	.LFE69:
 1622              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1623              		.align	2
 1624              		.global	HAL_RCC_ClockConfig
 1625              		.thumb
 1626              		.thumb_func
 1628              	HAL_RCC_ClockConfig:
 1629              	.LFB65:
 696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1630              		.loc 1 696 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              	.LVL194:
 1635 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccrxodeU.s 			page 58


 1636              	.LCFI12:
 1637              		.cfi_def_cfa_offset 16
 1638              		.cfi_offset 4, -16
 1639              		.cfi_offset 5, -12
 1640              		.cfi_offset 6, -8
 1641              		.cfi_offset 14, -4
 1642              	.LVL195:
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1643              		.loc 1 710 0
 1644 0002 734B     		ldr	r3, .L147
 1645 0004 1B68     		ldr	r3, [r3]
 1646 0006 03F00703 		and	r3, r3, #7
 1647 000a 8B42     		cmp	r3, r1
 1648 000c 0BD2     		bcs	.L114
 713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1649              		.loc 1 713 0
 1650 000e 704A     		ldr	r2, .L147
 1651 0010 1368     		ldr	r3, [r2]
 1652 0012 23F00703 		bic	r3, r3, #7
 1653 0016 0B43     		orrs	r3, r3, r1
 1654 0018 1360     		str	r3, [r2]
 717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1655              		.loc 1 717 0
 1656 001a 1368     		ldr	r3, [r2]
 1657 001c 03F00703 		and	r3, r3, #7
 1658 0020 8B42     		cmp	r3, r1
 1659 0022 40F0C580 		bne	.L137
 1660              	.L114:
 725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1661              		.loc 1 725 0
 1662 0026 0368     		ldr	r3, [r0]
 1663 0028 13F0020F 		tst	r3, #2
 1664 002c 06D0     		beq	.L116
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1665              		.loc 1 728 0
 1666 002e 694C     		ldr	r4, .L147+4
 1667 0030 6368     		ldr	r3, [r4, #4]
 1668 0032 23F0F002 		bic	r2, r3, #240
 1669 0036 8368     		ldr	r3, [r0, #8]
 1670 0038 1343     		orrs	r3, r3, r2
 1671 003a 6360     		str	r3, [r4, #4]
 1672              	.L116:
 1673 003c 0D46     		mov	r5, r1
 1674 003e 0446     		mov	r4, r0
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1675              		.loc 1 732 0
 1676 0040 0368     		ldr	r3, [r0]
 1677 0042 13F0010F 		tst	r3, #1
 1678 0046 75D0     		beq	.L117
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1679              		.loc 1 737 0
 1680 0048 4268     		ldr	r2, [r0, #4]
 1681 004a 012A     		cmp	r2, #1
 1682 004c 13D1     		bne	.L118
 1683              	.LVL196:
 1684              	.LBB225:
 1685              	.LBB226:
ARM GAS  /tmp/ccrxodeU.s 			page 59


 1686              		.loc 2 531 0
 1687 004e 4FF40033 		mov	r3, #131072
 1688              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1689 0052 93FAA3F3 		rbit r3, r3
 1690              	@ 0 "" 2
 1691              		.thumb
 1692              	.LBE226:
 1693              	.LBE225:
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1694              		.loc 1 740 0
 1695 0056 5F4B     		ldr	r3, .L147+4
 1696 0058 1968     		ldr	r1, [r3]
 1697              	.LVL197:
 1698              	.LBB227:
 1699              	.LBB228:
 1700              		.loc 2 531 0
 1701 005a 4FF40033 		mov	r3, #131072
 1702              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1703 005e 93FAA3F3 		rbit r3, r3
 1704              	@ 0 "" 2
 1705              	.LVL198:
 1706              		.thumb
 1707              	.LBE228:
 1708              	.LBE227:
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1709              		.loc 1 740 0
 1710 0062 B3FA83F3 		clz	r3, r3
 1711              	.LVL199:
 1712 0066 03F01F03 		and	r3, r3, #31
 1713 006a 21FA03F3 		lsr	r3, r1, r3
 1714 006e 13F0010F 		tst	r3, #1
 1715 0072 27D1     		bne	.L121
 1716 0074 9EE0     		b	.L138
 1717              	.LVL200:
 1718              	.L118:
 746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1719              		.loc 1 746 0
 1720 0076 022A     		cmp	r2, #2
 1721 0078 13D1     		bne	.L122
 1722              	.LVL201:
 1723              	.LBB229:
 1724              	.LBB230:
 1725              		.loc 2 531 0
 1726 007a 4FF00073 		mov	r3, #33554432
 1727              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1728 007e 93FAA3F3 		rbit r3, r3
 1729              	@ 0 "" 2
 1730              		.thumb
 1731              	.LBE230:
 1732              	.LBE229:
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1733              		.loc 1 749 0
 1734 0082 544B     		ldr	r3, .L147+4
 1735 0084 1968     		ldr	r1, [r3]
 1736              	.LVL202:
 1737              	.LBB231:
 1738              	.LBB232:
ARM GAS  /tmp/ccrxodeU.s 			page 60


 1739              		.loc 2 531 0
 1740 0086 4FF00073 		mov	r3, #33554432
 1741              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1742 008a 93FAA3F3 		rbit r3, r3
 1743              	@ 0 "" 2
 1744              	.LVL203:
 1745              		.thumb
 1746              	.LBE232:
 1747              	.LBE231:
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1748              		.loc 1 749 0
 1749 008e B3FA83F3 		clz	r3, r3
 1750              	.LVL204:
 1751 0092 03F01F03 		and	r3, r3, #31
 1752 0096 21FA03F3 		lsr	r3, r1, r3
 1753 009a 13F0010F 		tst	r3, #1
 1754 009e 11D1     		bne	.L121
 1755 00a0 8AE0     		b	.L139
 1756              	.LVL205:
 1757              	.L122:
 1758              	.LBB233:
 1759              	.LBB234:
 1760              		.loc 2 531 0
 1761 00a2 0223     		movs	r3, #2
 1762              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1763 00a4 93FAA3F3 		rbit r3, r3
 1764              	@ 0 "" 2
 1765              		.thumb
 1766              	.LBE234:
 1767              	.LBE233:
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1768              		.loc 1 758 0
 1769 00a8 4A4B     		ldr	r3, .L147+4
 1770 00aa 1968     		ldr	r1, [r3]
 1771              	.LVL206:
 1772              	.LBB235:
 1773              	.LBB236:
 1774              		.loc 2 531 0
 1775 00ac 0223     		movs	r3, #2
 1776              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1777 00ae 93FAA3F3 		rbit r3, r3
 1778              	@ 0 "" 2
 1779              	.LVL207:
 1780              		.thumb
 1781              	.LBE236:
 1782              	.LBE235:
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1783              		.loc 1 758 0
 1784 00b2 B3FA83F3 		clz	r3, r3
 1785              	.LVL208:
 1786 00b6 03F01F03 		and	r3, r3, #31
 1787 00ba 21FA03F3 		lsr	r3, r1, r3
 1788 00be 13F0010F 		tst	r3, #1
 1789 00c2 7BD0     		beq	.L140
 1790              	.LVL209:
 1791              	.L121:
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp/ccrxodeU.s 			page 61


 1792              		.loc 1 763 0
 1793 00c4 4349     		ldr	r1, .L147+4
 1794 00c6 4B68     		ldr	r3, [r1, #4]
 1795 00c8 23F00303 		bic	r3, r3, #3
 1796 00cc 1343     		orrs	r3, r3, r2
 1797 00ce 4B60     		str	r3, [r1, #4]
 766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1798              		.loc 1 766 0
 1799 00d0 FFF7FEFF 		bl	HAL_GetTick
 1800              	.LVL210:
 1801 00d4 0646     		mov	r6, r0
 1802              	.LVL211:
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1803              		.loc 1 768 0
 1804 00d6 6368     		ldr	r3, [r4, #4]
 1805 00d8 012B     		cmp	r3, #1
 1806 00da 0ED1     		bne	.L145
 1807 00dc 06E0     		b	.L127
 1808              	.LVL212:
 1809              	.L129:
 772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1810              		.loc 1 772 0
 1811 00de FFF7FEFF 		bl	HAL_GetTick
 1812              	.LVL213:
 1813 00e2 801B     		subs	r0, r0, r6
 1814 00e4 41F28833 		movw	r3, #5000
 1815 00e8 9842     		cmp	r0, r3
 1816 00ea 69D8     		bhi	.L141
 1817              	.L127:
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1818              		.loc 1 770 0
 1819 00ec 394B     		ldr	r3, .L147+4
 1820 00ee 5B68     		ldr	r3, [r3, #4]
 1821 00f0 03F00C03 		and	r3, r3, #12
 1822 00f4 042B     		cmp	r3, #4
 1823 00f6 F2D1     		bne	.L129
 1824 00f8 1CE0     		b	.L117
 1825              	.LVL214:
 1826              	.L145:
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1827              		.loc 1 778 0
 1828 00fa 022B     		cmp	r3, #2
 1829 00fc 15D1     		bne	.L131
 1830 00fe 06E0     		b	.L130
 1831              	.LVL215:
 1832              	.L132:
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1833              		.loc 1 782 0
 1834 0100 FFF7FEFF 		bl	HAL_GetTick
 1835              	.LVL216:
 1836 0104 801B     		subs	r0, r0, r6
 1837 0106 41F28833 		movw	r3, #5000
 1838 010a 9842     		cmp	r0, r3
 1839 010c 5AD8     		bhi	.L142
 1840              	.L130:
 780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1841              		.loc 1 780 0
ARM GAS  /tmp/ccrxodeU.s 			page 62


 1842 010e 314B     		ldr	r3, .L147+4
 1843 0110 5B68     		ldr	r3, [r3, #4]
 1844 0112 03F00C03 		and	r3, r3, #12
 1845 0116 082B     		cmp	r3, #8
 1846 0118 F2D1     		bne	.L132
 1847 011a 0BE0     		b	.L117
 1848              	.L133:
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1849              		.loc 1 792 0
 1850 011c FFF7FEFF 		bl	HAL_GetTick
 1851              	.LVL217:
 1852 0120 801B     		subs	r0, r0, r6
 1853 0122 41F28833 		movw	r3, #5000
 1854 0126 9842     		cmp	r0, r3
 1855 0128 4ED8     		bhi	.L143
 1856              	.L131:
 790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1857              		.loc 1 790 0
 1858 012a 2A4B     		ldr	r3, .L147+4
 1859 012c 5B68     		ldr	r3, [r3, #4]
 1860 012e 13F00C0F 		tst	r3, #12
 1861 0132 F3D1     		bne	.L133
 1862              	.LVL218:
 1863              	.L117:
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1864              		.loc 1 801 0
 1865 0134 264B     		ldr	r3, .L147
 1866 0136 1B68     		ldr	r3, [r3]
 1867 0138 03F00703 		and	r3, r3, #7
 1868 013c AB42     		cmp	r3, r5
 1869 013e 0AD9     		bls	.L134
 804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1870              		.loc 1 804 0
 1871 0140 234A     		ldr	r2, .L147
 1872 0142 1368     		ldr	r3, [r2]
 1873 0144 23F00703 		bic	r3, r3, #7
 1874 0148 2B43     		orrs	r3, r3, r5
 1875 014a 1360     		str	r3, [r2]
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1876              		.loc 1 808 0
 1877 014c 1368     		ldr	r3, [r2]
 1878 014e 03F00703 		and	r3, r3, #7
 1879 0152 AB42     		cmp	r3, r5
 1880 0154 3AD1     		bne	.L144
 1881              	.L134:
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1882              		.loc 1 816 0
 1883 0156 2368     		ldr	r3, [r4]
 1884 0158 13F0040F 		tst	r3, #4
 1885 015c 06D0     		beq	.L135
 819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1886              		.loc 1 819 0
 1887 015e 1D49     		ldr	r1, .L147+4
 1888 0160 4B68     		ldr	r3, [r1, #4]
 1889 0162 23F4E062 		bic	r2, r3, #1792
 1890 0166 E368     		ldr	r3, [r4, #12]
 1891 0168 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccrxodeU.s 			page 63


 1892 016a 4B60     		str	r3, [r1, #4]
 1893              	.L135:
 823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1894              		.loc 1 823 0
 1895 016c 2368     		ldr	r3, [r4]
 1896 016e 13F0080F 		tst	r3, #8
 1897 0172 07D0     		beq	.L136
 826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1898              		.loc 1 826 0
 1899 0174 174A     		ldr	r2, .L147+4
 1900 0176 5368     		ldr	r3, [r2, #4]
 1901 0178 23F46053 		bic	r3, r3, #14336
 1902 017c 2169     		ldr	r1, [r4, #16]
 1903 017e 43EAC103 		orr	r3, r3, r1, lsl #3
 1904 0182 5360     		str	r3, [r2, #4]
 1905              	.L136:
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1906              		.loc 1 830 0
 1907 0184 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1908              	.LVL219:
 1909 0188 124B     		ldr	r3, .L147+4
 1910 018a 5B68     		ldr	r3, [r3, #4]
 1911 018c 03F0F003 		and	r3, r3, #240
 1912              	.LVL220:
 1913              	.LBB237:
 1914              	.LBB238:
 1915              		.loc 2 531 0
 1916 0190 F022     		movs	r2, #240
 1917              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1918 0192 92FAA2F2 		rbit r2, r2
 1919              	@ 0 "" 2
 1920              	.LVL221:
 1921              		.thumb
 1922              	.LBE238:
 1923              	.LBE237:
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1924              		.loc 1 830 0
 1925 0196 B2FA82F2 		clz	r2, r2
 1926              	.LVL222:
 1927 019a D340     		lsrs	r3, r3, r2
 1928 019c 0E4A     		ldr	r2, .L147+8
 1929 019e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1930 01a0 D840     		lsrs	r0, r0, r3
 1931 01a2 0E4B     		ldr	r3, .L147+12
 1932 01a4 1860     		str	r0, [r3]
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1933              		.loc 1 833 0
 1934 01a6 0020     		movs	r0, #0
 1935 01a8 FFF7FEFF 		bl	HAL_InitTick
 1936              	.LVL223:
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1937              		.loc 1 835 0
 1938 01ac 0020     		movs	r0, #0
 1939 01ae 70BD     		pop	{r4, r5, r6, pc}
 1940              	.LVL224:
 1941              	.L137:
 719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccrxodeU.s 			page 64


 1942              		.loc 1 719 0
 1943 01b0 0120     		movs	r0, #1
 1944              	.LVL225:
 1945 01b2 70BD     		pop	{r4, r5, r6, pc}
 1946              	.LVL226:
 1947              	.L138:
 742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1948              		.loc 1 742 0
 1949 01b4 0120     		movs	r0, #1
 1950              	.LVL227:
 1951 01b6 70BD     		pop	{r4, r5, r6, pc}
 1952              	.LVL228:
 1953              	.L139:
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1954              		.loc 1 751 0
 1955 01b8 0120     		movs	r0, #1
 1956              	.LVL229:
 1957 01ba 70BD     		pop	{r4, r5, r6, pc}
 1958              	.LVL230:
 1959              	.L140:
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1960              		.loc 1 760 0
 1961 01bc 0120     		movs	r0, #1
 1962              	.LVL231:
 1963 01be 70BD     		pop	{r4, r5, r6, pc}
 1964              	.LVL232:
 1965              	.L141:
 774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1966              		.loc 1 774 0
 1967 01c0 0320     		movs	r0, #3
 1968 01c2 70BD     		pop	{r4, r5, r6, pc}
 1969              	.LVL233:
 1970              	.L142:
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1971              		.loc 1 784 0
 1972 01c4 0320     		movs	r0, #3
 1973 01c6 70BD     		pop	{r4, r5, r6, pc}
 1974              	.LVL234:
 1975              	.L143:
 794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1976              		.loc 1 794 0
 1977 01c8 0320     		movs	r0, #3
 1978 01ca 70BD     		pop	{r4, r5, r6, pc}
 1979              	.LVL235:
 1980              	.L144:
 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 1981              		.loc 1 810 0
 1982 01cc 0120     		movs	r0, #1
 836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1983              		.loc 1 836 0
 1984 01ce 70BD     		pop	{r4, r5, r6, pc}
 1985              	.LVL236:
 1986              	.L148:
 1987              		.align	2
 1988              	.L147:
 1989 01d0 00200240 		.word	1073881088
 1990 01d4 00100240 		.word	1073876992
ARM GAS  /tmp/ccrxodeU.s 			page 65


 1991 01d8 00000000 		.word	AHBPrescTable
 1992 01dc 00000000 		.word	SystemCoreClock
 1993              		.cfi_endproc
 1994              	.LFE65:
 1996              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1997              		.align	2
 1998              		.global	HAL_RCC_GetHCLKFreq
 1999              		.thumb
 2000              		.thumb_func
 2002              	HAL_RCC_GetHCLKFreq:
 2003              	.LFB70:
1048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * 
1054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2004              		.loc 1 1059 0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008              		@ link register save eliminated.
1060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
1061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2009              		.loc 1 1061 0
 2010 0000 014B     		ldr	r3, .L150
 2011 0002 1868     		ldr	r0, [r3]
 2012 0004 7047     		bx	lr
 2013              	.L151:
 2014 0006 00BF     		.align	2
 2015              	.L150:
 2016 0008 00000000 		.word	SystemCoreClock
 2017              		.cfi_endproc
 2018              	.LFE70:
 2020              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2021              		.align	2
 2022              		.global	HAL_RCC_GetPCLK1Freq
 2023              		.thumb
 2024              		.thumb_func
 2026              	HAL_RCC_GetPCLK1Freq:
 2027              	.LFB71:
1062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2028              		.loc 1 1070 0
ARM GAS  /tmp/ccrxodeU.s 			page 66


 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 2032 0000 08B5     		push	{r3, lr}
 2033              	.LCFI13:
 2034              		.cfi_def_cfa_offset 8
 2035              		.cfi_offset 3, -8
 2036              		.cfi_offset 14, -4
1071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2037              		.loc 1 1072 0
 2038 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2039              	.LVL237:
 2040 0006 074B     		ldr	r3, .L154
 2041 0008 5B68     		ldr	r3, [r3, #4]
 2042 000a 03F4E063 		and	r3, r3, #1792
 2043              	.LVL238:
 2044              	.LBB239:
 2045              	.LBB240:
 2046              		.loc 2 531 0
 2047 000e 4FF4E062 		mov	r2, #1792
 2048              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2049 0012 92FAA2F2 		rbit r2, r2
 2050              	@ 0 "" 2
 2051              	.LVL239:
 2052              		.thumb
 2053              	.LBE240:
 2054              	.LBE239:
 2055              		.loc 1 1072 0
 2056 0016 B2FA82F2 		clz	r2, r2
 2057              	.LVL240:
 2058 001a D340     		lsrs	r3, r3, r2
 2059 001c 024A     		ldr	r2, .L154+4
 2060 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
 2061              		.loc 1 1073 0
 2062 0020 D840     		lsrs	r0, r0, r3
 2063 0022 08BD     		pop	{r3, pc}
 2064              	.L155:
 2065              		.align	2
 2066              	.L154:
 2067 0024 00100240 		.word	1073876992
 2068 0028 00000000 		.word	APBPrescTable
 2069              		.cfi_endproc
 2070              	.LFE71:
 2072              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2073              		.align	2
 2074              		.global	HAL_RCC_GetPCLK2Freq
 2075              		.thumb
 2076              		.thumb_func
 2078              	HAL_RCC_GetPCLK2Freq:
 2079              	.LFB72:
1074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
ARM GAS  /tmp/ccrxodeU.s 			page 67


1079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2080              		.loc 1 1082 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 0
 2083              		@ frame_needed = 0, uses_anonymous_args = 0
 2084 0000 08B5     		push	{r3, lr}
 2085              	.LCFI14:
 2086              		.cfi_def_cfa_offset 8
 2087              		.cfi_offset 3, -8
 2088              		.cfi_offset 14, -4
1083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2089              		.loc 1 1084 0
 2090 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2091              	.LVL241:
 2092 0006 074B     		ldr	r3, .L158
 2093 0008 5B68     		ldr	r3, [r3, #4]
 2094 000a 03F46053 		and	r3, r3, #14336
 2095              	.LVL242:
 2096              	.LBB241:
 2097              	.LBB242:
 2098              		.loc 2 531 0
 2099 000e 4FF46052 		mov	r2, #14336
 2100              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2101 0012 92FAA2F2 		rbit r2, r2
 2102              	@ 0 "" 2
 2103              	.LVL243:
 2104              		.thumb
 2105              	.LBE242:
 2106              	.LBE241:
 2107              		.loc 1 1084 0
 2108 0016 B2FA82F2 		clz	r2, r2
 2109              	.LVL244:
 2110 001a D340     		lsrs	r3, r3, r2
 2111 001c 024A     		ldr	r2, .L158+4
 2112 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
 2113              		.loc 1 1085 0
 2114 0020 D840     		lsrs	r0, r0, r3
 2115 0022 08BD     		pop	{r3, pc}
 2116              	.L159:
 2117              		.align	2
 2118              	.L158:
 2119 0024 00100240 		.word	1073876992
 2120 0028 00000000 		.word	APBPrescTable
 2121              		.cfi_endproc
 2122              	.LFE72:
 2124              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2125              		.align	2
 2126              		.global	HAL_RCC_GetOscConfig
 2127              		.thumb
 2128              		.thumb_func
 2130              	HAL_RCC_GetOscConfig:
 2131              	.LFB73:
ARM GAS  /tmp/ccrxodeU.s 			page 68


1086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2132              		.loc 1 1095 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL245:
1096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2138              		.loc 1 1100 0
 2139 0000 0F23     		movs	r3, #15
 2140 0002 0360     		str	r3, [r0]
1101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2141              		.loc 1 1109 0
 2142 0004 2D4B     		ldr	r3, .L173
 2143 0006 1B68     		ldr	r3, [r3]
 2144 0008 13F4802F 		tst	r3, #262144
 2145 000c 03D0     		beq	.L161
1110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2146              		.loc 1 1111 0
 2147 000e 4FF4A023 		mov	r3, #327680
 2148 0012 4360     		str	r3, [r0, #4]
 2149 0014 0AE0     		b	.L162
 2150              	.L161:
1112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2151              		.loc 1 1113 0
 2152 0016 294B     		ldr	r3, .L173
 2153 0018 1B68     		ldr	r3, [r3]
 2154 001a 13F4803F 		tst	r3, #65536
 2155 001e 03D0     		beq	.L163
1114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2156              		.loc 1 1115 0
 2157 0020 4FF48033 		mov	r3, #65536
 2158 0024 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccrxodeU.s 			page 69


 2159 0026 01E0     		b	.L162
 2160              	.L163:
1116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2161              		.loc 1 1119 0
 2162 0028 0023     		movs	r3, #0
 2163 002a 4360     		str	r3, [r0, #4]
 2164              	.L162:
1120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2165              		.loc 1 1121 0
 2166 002c 234A     		ldr	r2, .L173
 2167 002e 5368     		ldr	r3, [r2, #4]
 2168 0030 03F40033 		and	r3, r3, #131072
 2169 0034 8360     		str	r3, [r0, #8]
1122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2170              		.loc 1 1124 0
 2171 0036 1368     		ldr	r3, [r2]
 2172 0038 13F0010F 		tst	r3, #1
 2173 003c 02D0     		beq	.L164
1125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2174              		.loc 1 1126 0
 2175 003e 0123     		movs	r3, #1
 2176 0040 0361     		str	r3, [r0, #16]
 2177 0042 01E0     		b	.L165
 2178              	.L164:
1127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2179              		.loc 1 1130 0
 2180 0044 0023     		movs	r3, #0
 2181 0046 0361     		str	r3, [r0, #16]
 2182              	.L165:
1131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2183              		.loc 1 1133 0
 2184 0048 1C49     		ldr	r1, .L173
 2185 004a 0B68     		ldr	r3, [r1]
 2186 004c 03F0F803 		and	r3, r3, #248
 2187              	.LVL246:
 2188              	.LBB243:
 2189              	.LBB244:
 2190              		.loc 2 531 0
 2191 0050 F822     		movs	r2, #248
 2192              	@ 531 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2193 0052 92FAA2F2 		rbit r2, r2
 2194              	@ 0 "" 2
 2195              	.LVL247:
 2196              		.thumb
 2197              	.LBE244:
ARM GAS  /tmp/ccrxodeU.s 			page 70


 2198              	.LBE243:
 2199              		.loc 1 1133 0
 2200 0056 B2FA82F2 		clz	r2, r2
 2201              	.LVL248:
 2202 005a D340     		lsrs	r3, r3, r2
 2203 005c 4361     		str	r3, [r0, #20]
1134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2204              		.loc 1 1136 0
 2205 005e 0B6A     		ldr	r3, [r1, #32]
 2206 0060 13F0040F 		tst	r3, #4
 2207 0064 02D0     		beq	.L166
1137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2208              		.loc 1 1138 0
 2209 0066 0523     		movs	r3, #5
 2210 0068 C360     		str	r3, [r0, #12]
 2211 006a 09E0     		b	.L167
 2212              	.L166:
1139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2213              		.loc 1 1140 0
 2214 006c 134B     		ldr	r3, .L173
 2215 006e 1B6A     		ldr	r3, [r3, #32]
 2216 0070 13F0010F 		tst	r3, #1
 2217 0074 02D0     		beq	.L168
1141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2218              		.loc 1 1142 0
 2219 0076 0123     		movs	r3, #1
 2220 0078 C360     		str	r3, [r0, #12]
 2221 007a 01E0     		b	.L167
 2222              	.L168:
1143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2223              		.loc 1 1146 0
 2224 007c 0023     		movs	r3, #0
 2225 007e C360     		str	r3, [r0, #12]
 2226              	.L167:
1147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2227              		.loc 1 1150 0
 2228 0080 0E4B     		ldr	r3, .L173
 2229 0082 5B6A     		ldr	r3, [r3, #36]
 2230 0084 13F0010F 		tst	r3, #1
 2231 0088 02D0     		beq	.L169
1151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2232              		.loc 1 1152 0
 2233 008a 0123     		movs	r3, #1
 2234 008c 8361     		str	r3, [r0, #24]
 2235 008e 01E0     		b	.L170
ARM GAS  /tmp/ccrxodeU.s 			page 71


 2236              	.L169:
1153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2237              		.loc 1 1156 0
 2238 0090 0023     		movs	r3, #0
 2239 0092 8361     		str	r3, [r0, #24]
 2240              	.L170:
1157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2241              		.loc 1 1161 0
 2242 0094 094B     		ldr	r3, .L173
 2243 0096 1B68     		ldr	r3, [r3]
 2244 0098 13F0807F 		tst	r3, #16777216
 2245 009c 02D0     		beq	.L171
1162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2246              		.loc 1 1163 0
 2247 009e 0223     		movs	r3, #2
 2248 00a0 C361     		str	r3, [r0, #28]
 2249 00a2 01E0     		b	.L172
 2250              	.L171:
1164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2251              		.loc 1 1167 0
 2252 00a4 0123     		movs	r3, #1
 2253 00a6 C361     		str	r3, [r0, #28]
 2254              	.L172:
1168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2255              		.loc 1 1169 0
 2256 00a8 044A     		ldr	r2, .L173
 2257 00aa 5368     		ldr	r3, [r2, #4]
 2258 00ac 03F48033 		and	r3, r3, #65536
 2259 00b0 0362     		str	r3, [r0, #32]
1170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 2260              		.loc 1 1170 0
 2261 00b2 5368     		ldr	r3, [r2, #4]
 2262 00b4 03F47013 		and	r3, r3, #3932160
 2263 00b8 4362     		str	r3, [r0, #36]
 2264 00ba 7047     		bx	lr
 2265              	.L174:
 2266              		.align	2
 2267              	.L173:
 2268 00bc 00100240 		.word	1073876992
 2269              		.cfi_endproc
 2270              	.LFE73:
 2272              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2273              		.align	2
 2274              		.global	HAL_RCC_GetClockConfig
 2275              		.thumb
ARM GAS  /tmp/ccrxodeU.s 			page 72


 2276              		.thumb_func
 2278              	HAL_RCC_GetClockConfig:
 2279              	.LFB74:
1171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2280              		.loc 1 1195 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 2284              		@ link register save eliminated.
 2285              	.LVL249:
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2286              		.loc 1 1201 0
 2287 0000 0F23     		movs	r3, #15
 2288 0002 0360     		str	r3, [r0]
1202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2289              		.loc 1 1204 0
 2290 0004 0B4B     		ldr	r3, .L176
 2291 0006 5A68     		ldr	r2, [r3, #4]
 2292 0008 02F00302 		and	r2, r2, #3
 2293 000c 4260     		str	r2, [r0, #4]
1205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2294              		.loc 1 1207 0
 2295 000e 5A68     		ldr	r2, [r3, #4]
 2296 0010 02F0F002 		and	r2, r2, #240
ARM GAS  /tmp/ccrxodeU.s 			page 73


 2297 0014 8260     		str	r2, [r0, #8]
1208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2298              		.loc 1 1210 0
 2299 0016 5A68     		ldr	r2, [r3, #4]
 2300 0018 02F4E062 		and	r2, r2, #1792
 2301 001c C260     		str	r2, [r0, #12]
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2302              		.loc 1 1213 0
 2303 001e 5B68     		ldr	r3, [r3, #4]
 2304 0020 03F46053 		and	r3, r3, #14336
 2305 0024 DB08     		lsrs	r3, r3, #3
 2306 0026 0361     		str	r3, [r0, #16]
1214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2307              		.loc 1 1217 0
 2308 0028 034B     		ldr	r3, .L176+4
 2309 002a 1B68     		ldr	r3, [r3]
 2310 002c 03F00703 		and	r3, r3, #7
 2311 0030 0B60     		str	r3, [r1]
 2312 0032 7047     		bx	lr
 2313              	.L177:
 2314              		.align	2
 2315              	.L176:
 2316 0034 00100240 		.word	1073876992
 2317 0038 00200240 		.word	1073881088
 2318              		.cfi_endproc
 2319              	.LFE74:
 2321              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2322              		.align	2
 2323              		.weak	HAL_RCC_CSSCallback
 2324              		.thumb
 2325              		.thumb_func
 2327              	HAL_RCC_CSSCallback:
 2328              	.LFB76:
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
ARM GAS  /tmp/ccrxodeU.s 			page 74


1235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
1237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2329              		.loc 1 1247 0
 2330              		.cfi_startproc
 2331              		@ args = 0, pretend = 0, frame = 0
 2332              		@ frame_needed = 0, uses_anonymous_args = 0
 2333              		@ link register save eliminated.
 2334 0000 7047     		bx	lr
 2335              		.cfi_endproc
 2336              	.LFE76:
 2338 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2339              		.align	2
 2340              		.global	HAL_RCC_NMI_IRQHandler
 2341              		.thumb
 2342              		.thumb_func
 2344              	HAL_RCC_NMI_IRQHandler:
 2345              	.LFB75:
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2346              		.loc 1 1230 0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 0
 2349              		@ frame_needed = 0, uses_anonymous_args = 0
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2350              		.loc 1 1230 0
 2351 0000 08B5     		push	{r3, lr}
 2352              	.LCFI15:
 2353              		.cfi_def_cfa_offset 8
 2354              		.cfi_offset 3, -8
 2355              		.cfi_offset 14, -4
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 2356              		.loc 1 1232 0
 2357 0002 054B     		ldr	r3, .L182
 2358 0004 9B68     		ldr	r3, [r3, #8]
 2359 0006 13F0800F 		tst	r3, #128
 2360 000a 04D0     		beq	.L179
1235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 2361              		.loc 1 1235 0
 2362 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2363              	.LVL250:
1238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 2364              		.loc 1 1238 0
 2365 0010 8022     		movs	r2, #128
 2366 0012 024B     		ldr	r3, .L182+4
 2367 0014 1A70     		strb	r2, [r3]
 2368              	.L179:
 2369 0016 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccrxodeU.s 			page 75


 2370              	.L183:
 2371              		.align	2
 2372              	.L182:
 2373 0018 00100240 		.word	1073876992
 2374 001c 0A100240 		.word	1073877002
 2375              		.cfi_endproc
 2376              	.LFE75:
 2378              		.section	.rodata
 2379              		.align	2
 2380              		.set	.LANCHOR0,. + 0
 2381              	.LC0:
 2382 0000 02       		.byte	2
 2383 0001 03       		.byte	3
 2384 0002 04       		.byte	4
 2385 0003 05       		.byte	5
 2386 0004 06       		.byte	6
 2387 0005 07       		.byte	7
 2388 0006 08       		.byte	8
 2389 0007 09       		.byte	9
 2390 0008 0A       		.byte	10
 2391 0009 0B       		.byte	11
 2392 000a 0C       		.byte	12
 2393 000b 0D       		.byte	13
 2394 000c 0E       		.byte	14
 2395 000d 0F       		.byte	15
 2396 000e 10       		.byte	16
 2397 000f 10       		.byte	16
 2398              	.LC1:
 2399 0010 01       		.byte	1
 2400 0011 02       		.byte	2
 2401              		.text
 2402              	.Letext0:
 2403              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2404              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 2405              		.file 5 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2406              		.file 6 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2407              		.file 7 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2408              		.file 8 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2409              		.file 9 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2410              		.file 10 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2411              		.file 11 "./Drivers/CMSIS/Include/core_cm3.h"
 2412              		.file 12 "./Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2413              		.file 13 "./Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccrxodeU.s 			page 76


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
     /tmp/ccrxodeU.s:19     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccrxodeU.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccrxodeU.s:91     .text.HAL_RCC_DeInit:000000000000004c $d
     /tmp/ccrxodeU.s:98     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccrxodeU.s:103    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccrxodeU.s:704    .text.HAL_RCC_OscConfig:00000000000002dc $d
     /tmp/ccrxodeU.s:709    .text.HAL_RCC_OscConfig:00000000000002e4 $t
     /tmp/ccrxodeU.s:1337   .text.HAL_RCC_OscConfig:00000000000005e0 $d
     /tmp/ccrxodeU.s:1343   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccrxodeU.s:1348   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccrxodeU.s:1410   .text.HAL_RCC_MCOConfig:0000000000000044 $d
     /tmp/ccrxodeU.s:1416   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccrxodeU.s:1421   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccrxodeU.s:1453   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccrxodeU.s:1458   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccrxodeU.s:1490   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccrxodeU.s:1495   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccrxodeU.s:1615   .text.HAL_RCC_GetSysClockFreq:0000000000000080 $d
     /tmp/ccrxodeU.s:1623   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccrxodeU.s:1628   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccrxodeU.s:1989   .text.HAL_RCC_ClockConfig:00000000000001d0 $d
     /tmp/ccrxodeU.s:1997   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccrxodeU.s:2002   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccrxodeU.s:2016   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccrxodeU.s:2021   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccrxodeU.s:2026   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccrxodeU.s:2067   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccrxodeU.s:2073   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccrxodeU.s:2078   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccrxodeU.s:2119   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccrxodeU.s:2125   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccrxodeU.s:2130   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccrxodeU.s:2268   .text.HAL_RCC_GetOscConfig:00000000000000bc $d
     /tmp/ccrxodeU.s:2273   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccrxodeU.s:2278   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccrxodeU.s:2316   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccrxodeU.s:2322   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccrxodeU.s:2327   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccrxodeU.s:2339   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccrxodeU.s:2344   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccrxodeU.s:2373   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
     /tmp/ccrxodeU.s:2379   .rodata:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_Delay
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
